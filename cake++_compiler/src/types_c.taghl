syn keyword CTagsMember __func_tbl __int_pool _symbolicNames __curr_func
syn keyword CTagsMember _sharedContextCache internal_num_consec_backslashes bin_op _init __name __param_1 ldst_op prev __str_stack __var_type _serializedATN __vm_code_pool internal_to_split builtin_scope_level immediate _vocabulary next __size_2d _literalNames _channelNames __type x curr __size start_tp _tokenNames _modeNames __scope_num __str_pool __num_stack not_found_level op __code _decisionToDFA __table _atn end_tp y __arr __param_0 internal_prev_i __sym_tbl __instance internal_line_num _ruleNames
syn keyword CTagsUnion __anon799b73ed010a
syn keyword CTagsGlobalVariable vec2_index_for_x vec2_index_for_y
syn keyword CTagsEnumeratorName VmInstrBinOp __anonea8e543f0103 __anonea8e543f0203 __anoncd6878f20103 BuiltinTypename VmInstrLdStOp VmInstrOp SymType
syn keyword CTagsEnumerationValue disp_num_unsigned call argx disp_num CmpNe get_num RuleAssignment BitLsl constant RuleProgram var T__11 jump RuleFuncCall T__10 U16 Mul S64 T__5 disp_char S32 BitAnd RuleWhileStatement S8 T__4 CmpGe RuleIfStatement RuleLenExpr RuleSubscriptExpr RuleFuncVarDecl RuleIdentDecl RuleFuncArgExpr T__6 T__3 T__7 Sub UMod SMod RuleExprCompare RuleIdentName ldx RuleNonSizedArrayIdentName CmpEq SDiv Blank ret
syn keyword CTagsEnumerationValue U8 get_pc RuleIfChainStatement arg disp_str CmpLe RuleFuncDecl Basic RuleExprMulDivModEtc RuleSizeofExpr varx RuleDoWhileStatement RuleExprAddSub binop BitOr RuleNumExpr UDiv Add bne ArrayVarName RuleExpr RuleIdentExpr T__1 BitXor CmpGt RuleSubscriptConst ScalarVarName U32 st BitAsr RuleBuiltinTypename T__2 beq RuleStatements RuleExprLogical get_arg_space BitLsr RuleStatement T__0 T__8 set_arg_space T__9 RuleVarDecl stx ld RuleElseStatements CmpLt LexWhitespace S16
syn keyword CTagsFunction getChannelNames find_in_this_level zcross_prod getRuleNames TokOpLogical sempred prev_prev_to_split_at to_split_at_is_special_first_endpoint elseStatements strappcom exprCompareSempred funcVarDecl prev_prev_to_split_at_ptr visitIdentExpr pop_str identDecl
syn keyword CTagsFunction visitProgram exprAddSubSempred init_array find_pos_after_end_of_word printerr visitNumExpr at name_is_builtin insert_or_assign dot_prod cmpeq_array statements debug_print_json getModeNames visitSizeofExpr osprint_arr funcArgExpr sconcat anything_matches height width exprSempred ifStatement in_range_inclusive TokOpBitwise to_split_at_is_indiv_word num_consec_backslashes TokOpUnary sym_tbl get_bits_with_range visitExprAddSub to_split_at_is_any_special_endpoint visitAssignment
syn keyword CTagsFunction put_now_as_localtime visitDoWhileStatement visitSubscriptExpr TokOpAddSub now_as_gmtime append_vm_code getTokenNames type_is_signed get_stdin_from_file exprLogicalSempred init whileStatement stop list_of_special_endpoint_pairs prev_prev_i fprintout statement sizeofExpr visitExpr visitExprLogical now_as_localtime doWhileStatement func arr_memcpy get_json_value_type_as_str visitIdentName now_as_time_t visitElseStatements clamp_to_range exprMulDivModEtc rmscope exprAddSub
syn keyword CTagsFunction visitExprCompare in_range ifChainStatement push_num TokDo min_va cstm_intdup custom_abs funcCall vt_is_special_first_endpoint prev_i curr_func get_bits get_substr_size nonSizedArrayIdentName back_up_and_update visitIfChainStatement has_changed accept cstm_strdup exprLogical max_va visitFuncDecl scope_lev parse_json expr visitBuiltinTypename write_json push_str getGrammarFileName numExpr program TokDecNum visitLenExpr TokWhile funcDecl assignment index_in_to_split
syn keyword CTagsFunction TokOpMulDivMod getVocabulary err to_split_at_is_end_of_word get_top_str TokIf exprCompare TokIdent main put_now_as_gmtime visitFuncVarDecl visitVarDecl osprintout get_hrc_now TokOpCompare find_start_of_word size size_2d visitFuncArgExpr visitFuncCall vt_is_special_second_endpoint get_initial_seed visitWhileStatement pop_num to_split lenExpr visitSubscriptConst to_split_at_is_special_second_endpoint back_up getRuleIndex subscriptExpr get_hrc_now_time_t vec2_in_range set_bits
syn keyword CTagsFunction prev_to_split_at_ptr prev_to_split_at visitIfStatement getATN printout mkscope identName increment_i clear_and_set_bits_with_range start subscriptConst clear_bits __init_array_backend visitExprMulDivModEtc print_json_value_type visitStatements identExpr builtinTypename make_vt_pair get_top_num arr_memset TokElse visitNonSizedArrayIdentName Initializer visitIdentDecl getSerializedATN line_num clear_and_set_bits find strappcom2 arr varDecl vt_is_any_special_endpoint visitStatement
syn keyword CTagsType Vec2U32 SeedType Base Vec2S64 SizeT2d u32 InstanceType Vec2_flt Vec2U64 u8 u64 s16 value_type val_typ_pair s32 Vec2_dbl uint u16 s8 StrType Vec2S16 Vec2S32 s64 Ident OneLevelTable Vec2U16
syn keyword CTagsDefinedName liborangepower_misc_bitwise_funcs_hpp width_to_msb_pos liborangepower_range_funcs_hpp bprange_to_shifted_mask gen_generic_setter_by_val _align2 gen_static_getter_by_con_ref liborangepower_misc_input_classes_hpp allocation_stuff_hpp gen_static_generic_setter_by_val gen_generic_getter_by_ref gen_generic_getter_by_val
syn keyword CTagsDefinedName liborangepower_array_2d_helper_classes_hpp scoped_ident_table_class_hpp asm_comment gen_static_setter_by_con_ref liborangepower_misc_utility_funcs_hpp gen_getter_and_setter_by_con_ref liborangepower_json_stuff_hpp liborangepower_memwhatever_wrappers_hpp liborangepower_misc_includes_hpp gen_static_generic_getter_by_con_ref liborangepower_misc_defines_hpp gen_setter_by_con_ref liborangepower_misc_types_hpp gen_setter_by_val ident_table_class_hpp
syn keyword CTagsDefinedName gen_generic_getter_by_con_ref gen_generic_setter_by_con_ref gen_static_generic_setter_by_rval_ref gen_static_setter_by_val liborangepower_gen_getter_setter_defines_hpp liborangepower_misc_output_classes_hpp liborangepower_vec2_classes_hpp _align4 gen_getter_by_val gen_static_getter_by_val generate_float_pt_vec2_extra_class_contents liborangepower_lexer_classes_hpp gen_getter_by_ref liborangepower_time_stuff_hpp gen_static_generic_setter_by_con_ref gen_getter_by_con_ref
syn keyword CTagsDefinedName alignas_regular bprange_to_mask gen_setter_by_rval_ref vm_code_class_hpp liborangepower_array_helper_classes_hpp gen_static_getter_by_ref compiler_class_hpp liborangepower_prev_curr_pair_class_hpp gen_generic_setter_by_rval_ref gen_static_generic_getter_by_ref gen_static_setter_by_rval_ref gen_getter_and_setter_by_val liborangepower_str_split_helper_classes_hpp symbol_table_classes_hpp gen_static_generic_getter_by_val misc_includes_hpp generate_specific_vec2_class_contents
syn keyword CTagsClass NonSizedArrayIdentNameContext AnyPrintoutBackend VarDeclContext Profiler SymbolTable GrammarParser IdentNameContext FuncDeclContext GrammarBaseVisitor Vec2 StrSplitHelperNoEscapes Compiler IdentTable Array2dHelper ElseStatementsContext ArrayCszHelper AssignmentContext GrammarVisitor Symbol ExprCompareContext StatementContext ArrayCsz2dHelper ArrayHelper DoWhileStatementContext SizeofExprContext Prng
syn keyword CTagsClass NumExprContext ExprMulDivModEtcContext BuiltinTypenameContext IfChainStatementContext Function StrSplitHelperWithEscapes SubscriptExprContext IfStatementContext PrevCurrPair ExprContext FuncCallContext StatementsContext IdentDeclContext FuncArgExprContext SubscriptConstContext StrSplitHelperBase ScopedIdentTable FuncVarDeclContext WhileStatementContext LenExprContext VmCode IdentExprContext ExprLogicalContext FunctionTable ExprAddSubContext GrammarLexer ProgramContext
syn keyword CTagsNamespace misc_util misc_input time printout_etc strings json liborangepower containers integer_types range bitwise

syn match CTagsFunction /\<contains\>/
" Matches for file allocation_stuff.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "allocation_stuff.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsMember __vm_code_pool __str_pool __int_pool
	syn keyword CTagsFunction cstm_strdup append_vm_code cstm_intdup
	syn keyword CTagsClass DupStuff
	
endif
" Matches for file gen_src/GrammarLexer.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "gen_src/GrammarLexer.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction _vocabulary
	
endif
" Matches for file gen_src/GrammarParser.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "gen_src/GrammarParser.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction __anonc774599a1b02 __anonc774599a0802 __anonc774599a0e02 __anonc774599a0202 __anonc774599a0402
	syn keyword CTagsFunction __anonc774599a0c02 __anonc774599a0902 __anonc774599a1702 __anonc774599a0d02 __anonc774599a0302 __anonc774599a1102 __anonc774599a1d02 __anonc774599a1402 __anonc774599a0702 __anonc774599a0502 __anonc774599a1602 _vocabulary __anonc774599a0102 __anonc774599a1302 __anonc774599a1802 __anonc774599a0f02 __anonc774599a0602 __anonc774599a1a02 __anonc774599a1502 __anonc774599a1002 __anonc774599a1c02 __anonc774599a1902 __anonc774599a0a02 __anonc774599a1202 __anonc774599a0b02
	
endif
" Matches for file liborangepower_src/json_stuff.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "liborangepower_src/json_stuff.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsFunction __anone389622d0502 __anone389622d0302 __anone389622d0602 __anone389622d0402 __anone389622d0202 __anone389622d0102
	syn keyword CTagsNamespace json liborangepower
	
endif
