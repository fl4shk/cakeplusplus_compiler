!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/249c3c0/
Add	vm_code_class.hpp	/^	Add,$/;"	kind:e	enum:VmInstrBinOp	access:public
AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s___arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s___arr)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayVarName	symbol_table_classes.hpp	/^	ArrayVarName,$/;"	kind:e	enum:SymType	access:public
AssignmentContext	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext::AssignmentContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::AssignmentContext	signature:(ParserRuleContext * parent,size_t invokingState)
AssignmentContext	gen_src/GrammarParser.h	/^    AssignmentContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::AssignmentContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
AssignmentContext	gen_src/GrammarParser.h	/^  class  AssignmentContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
Basic	vm_code_class.hpp	/^	Basic,$/;"	kind:e	enum:VmInstrLdStOp	access:public
BitAnd	vm_code_class.hpp	/^	BitAnd,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitAsr	vm_code_class.hpp	/^	BitAsr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitLsl	vm_code_class.hpp	/^	BitLsl,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitLsr	vm_code_class.hpp	/^	BitLsr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitOr	vm_code_class.hpp	/^	BitOr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitXor	vm_code_class.hpp	/^	BitXor,$/;"	kind:e	enum:VmInstrBinOp	access:public
Blank	symbol_table_classes.hpp	/^	Blank,$/;"	kind:e	enum:BuiltinTypename	access:public
BuiltinTypename	symbol_table_classes.hpp	/^enum class BuiltinTypename : int$/;"	kind:g	typeref:typename:int
BuiltinTypenameContext	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext::BuiltinTypenameContext(ParserRuleContext *parent, size_t /;"	kind:f	class:GrammarParser::BuiltinTypenameContext	signature:(ParserRuleContext * parent,size_t invokingState)
BuiltinTypenameContext	gen_src/GrammarParser.h	/^    BuiltinTypenameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
BuiltinTypenameContext	gen_src/GrammarParser.h	/^  class  BuiltinTypenameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
CmpEq	vm_code_class.hpp	/^	CmpEq,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpGe	vm_code_class.hpp	/^	CmpGe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpGt	vm_code_class.hpp	/^	CmpGt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpLe	vm_code_class.hpp	/^	CmpLe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpLt	vm_code_class.hpp	/^	CmpLt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpNe	vm_code_class.hpp	/^	CmpNe,$/;"	kind:e	enum:VmInstrBinOp	access:public
Compiler	compiler_class.hpp	/^class Compiler : public GrammarVisitor$/;"	kind:c	inherits:GrammarVisitor
Compiler::__curr_func	compiler_class.hpp	/^	Function* __curr_func;$/;"	kind:m	class:Compiler	typeref:typename:Function *	access:protected
Compiler::__func_tbl	compiler_class.hpp	/^	FunctionTable __func_tbl;$/;"	kind:m	class:Compiler	typeref:typename:FunctionTable	access:protected
Compiler::__num_stack	compiler_class.hpp	/^	std::stack<s64> __num_stack;$/;"	kind:m	class:Compiler	typeref:typename:std::stack<s64>	access:protected
Compiler::__str_stack	compiler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:Compiler	typeref:typename:std::stack<std::string * >	access:protected
Compiler::curr_func	compiler_class.hpp	/^	inline auto& curr_func()$/;"	kind:f	class:Compiler	typeref:typename:auto &	access:protected	signature:()
Compiler::get_top_num	compiler_class.hpp	/^	inline auto get_top_num()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
Compiler::get_top_str	compiler_class.hpp	/^	inline auto get_top_str()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
Compiler::pop_num	compiler_class.hpp	/^	inline auto pop_num()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
Compiler::pop_str	compiler_class.hpp	/^	inline auto pop_str()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
Compiler::push_num	compiler_class.hpp	/^	inline void push_num(s64 to_push)$/;"	kind:f	class:Compiler	typeref:typename:void	access:protected	signature:(s64 to_push)
Compiler::push_str	compiler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:Compiler	typeref:typename:void	access:protected	signature:(std::string * to_push)
Compiler::sym_tbl	compiler_class.hpp	/^	inline auto& sym_tbl()$/;"	kind:f	class:Compiler	typeref:typename:auto &	access:protected	signature:()
Compiler::visitAssignment	compiler_class.cpp	/^antlrcpp::Any Compiler::visitAssignment$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::AssignmentContext * ctx)
Compiler::visitAssignment	compiler_class.hpp	/^	antlrcpp::Any visitAssignment$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * ctx)
Compiler::visitBuiltinTypename	compiler_class.cpp	/^antlrcpp::Any Compiler::visitBuiltinTypename$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::BuiltinTypenameContext * ctx)
Compiler::visitBuiltinTypename	compiler_class.hpp	/^	antlrcpp::Any visitBuiltinTypename$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * ctx)
Compiler::visitDoWhileStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitDoWhileStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::DoWhileStatementContext * ctx)
Compiler::visitDoWhileStatement	compiler_class.hpp	/^	antlrcpp::Any visitDoWhileStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * ctx)
Compiler::visitElseStatements	compiler_class.cpp	/^antlrcpp::Any Compiler::visitElseStatements$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ElseStatementsContext * ctx)
Compiler::visitElseStatements	compiler_class.hpp	/^	antlrcpp::Any visitElseStatements$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * ctx)
Compiler::visitExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprContext * ctx)
Compiler::visitExpr	compiler_class.hpp	/^	antlrcpp::Any visitExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
Compiler::visitExprAddSub	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprAddSub$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprAddSubContext * ctx)
Compiler::visitExprAddSub	compiler_class.hpp	/^	antlrcpp::Any visitExprAddSub$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
Compiler::visitExprCompare	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprCompare$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprCompareContext * ctx)
Compiler::visitExprCompare	compiler_class.hpp	/^	antlrcpp::Any visitExprCompare$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
Compiler::visitExprLogical	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprLogical$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprLogicalContext * ctx)
Compiler::visitExprLogical	compiler_class.hpp	/^	antlrcpp::Any visitExprLogical$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
Compiler::visitExprMulDivModEtc	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprMulDivModEtc$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
Compiler::visitExprMulDivModEtc	compiler_class.hpp	/^	antlrcpp::Any visitExprMulDivModEtc$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
Compiler::visitFuncArgExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncArgExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncArgExprContext * ctx)
Compiler::visitFuncArgExpr	compiler_class.hpp	/^	antlrcpp::Any visitFuncArgExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * ctx)
Compiler::visitFuncCall	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncCall$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncCallContext * ctx)
Compiler::visitFuncCall	compiler_class.hpp	/^	antlrcpp::Any visitFuncCall$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * ctx)
Compiler::visitFuncDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncDeclContext * ctx)
Compiler::visitFuncDecl	compiler_class.hpp	/^	antlrcpp::Any visitFuncDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * ctx)
Compiler::visitFuncVarDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncVarDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncVarDeclContext * ctx)
Compiler::visitFuncVarDecl	compiler_class.hpp	/^	antlrcpp::Any visitFuncVarDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * ctx)
Compiler::visitIdentDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentDeclContext * ctx)
Compiler::visitIdentDecl	compiler_class.hpp	/^	antlrcpp::Any visitIdentDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * ctx)
Compiler::visitIdentExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentExprContext * ctx)
Compiler::visitIdentExpr	compiler_class.hpp	/^	antlrcpp::Any visitIdentExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * ctx)
Compiler::visitIdentName	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentName$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentNameContext * ctx)
Compiler::visitIdentName	compiler_class.hpp	/^	antlrcpp::Any visitIdentName$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
Compiler::visitIfChainStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIfChainStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IfChainStatementContext * ctx)
Compiler::visitIfChainStatement	compiler_class.hpp	/^	antlrcpp::Any visitIfChainStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * ctx)
Compiler::visitIfStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIfStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IfStatementContext * ctx)
Compiler::visitIfStatement	compiler_class.hpp	/^	antlrcpp::Any visitIfStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * ctx)
Compiler::visitLenExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitLenExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LenExprContext * ctx)
Compiler::visitLenExpr	compiler_class.hpp	/^	antlrcpp::Any visitLenExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * ctx)
Compiler::visitNonSizedArrayIdentName	compiler_class.cpp	/^antlrcpp::Any Compiler::visitNonSizedArrayIdentName$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
Compiler::visitNonSizedArrayIdentName	compiler_class.hpp	/^	antlrcpp::Any visitNonSizedArrayIdentName$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
Compiler::visitNumExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitNumExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NumExprContext * ctx)
Compiler::visitNumExpr	compiler_class.hpp	/^	antlrcpp::Any visitNumExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
Compiler::visitProgram	compiler_class.cpp	/^antlrcpp::Any Compiler::visitProgram$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ProgramContext * ctx)
Compiler::visitProgram	compiler_class.hpp	/^	antlrcpp::Any visitProgram$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
Compiler::visitSizeofExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSizeofExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SizeofExprContext * ctx)
Compiler::visitSizeofExpr	compiler_class.hpp	/^	antlrcpp::Any visitSizeofExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * ctx)
Compiler::visitStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::StatementContext * ctx)
Compiler::visitStatement	compiler_class.hpp	/^	antlrcpp::Any visitStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * ctx)
Compiler::visitStatements	compiler_class.cpp	/^antlrcpp::Any Compiler::visitStatements$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::StatementsContext * ctx)
Compiler::visitStatements	compiler_class.hpp	/^	antlrcpp::Any visitStatements$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * ctx)
Compiler::visitSubscriptConst	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSubscriptConst$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SubscriptConstContext * ctx)
Compiler::visitSubscriptConst	compiler_class.hpp	/^	antlrcpp::Any visitSubscriptConst$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * ctx)
Compiler::visitSubscriptExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSubscriptExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SubscriptExprContext * ctx)
Compiler::visitSubscriptExpr	compiler_class.hpp	/^	antlrcpp::Any visitSubscriptExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * ctx)
Compiler::visitVarDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitVarDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::VarDeclContext * ctx)
Compiler::visitVarDecl	compiler_class.hpp	/^	antlrcpp::Any visitVarDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * ctx)
Compiler::visitWhileStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitWhileStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::WhileStatementContext * ctx)
Compiler::visitWhileStatement	compiler_class.hpp	/^	antlrcpp::Any visitWhileStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * ctx)
Compiler::~Compiler	compiler_class.cpp	/^Compiler::~Compiler()$/;"	kind:f	class:Compiler	signature:()
Compiler::~Compiler	compiler_class.hpp	/^	virtual ~Compiler();$/;"	kind:p	class:Compiler	access:public	signature:()
DoWhileStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext::DoWhileStatementContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::DoWhileStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
DoWhileStatementContext	gen_src/GrammarParser.h	/^    DoWhileStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
DoWhileStatementContext	gen_src/GrammarParser.h	/^  class  DoWhileStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
DupStuff	allocation_stuff.cpp	/^class DupStuff$/;"	kind:c	file:
DupStuff::__int_pool	allocation_stuff.cpp	/^	static std::map<int, std::unique_ptr<int>> __int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>	file:	access:private
DupStuff::__int_pool	allocation_stuff.cpp	/^std::map<int, std::unique_ptr<int>> DupStuff::__int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>
DupStuff::__str_pool	allocation_stuff.cpp	/^		__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
DupStuff::__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
DupStuff::__vm_code_pool	allocation_stuff.cpp	/^	static std::vector<std::unique_ptr<VmCode>> __vm_code_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::vector<std::unique_ptr<VmCode>>	file:	access:private
DupStuff::__vm_code_pool	allocation_stuff.cpp	/^std::vector<std::unique_ptr<VmCode>> DupStuff::__vm_code_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::vector<std::unique_ptr<VmCode>>
DupStuff::append_vm_code	allocation_stuff.cpp	/^	friend VmCode* append_vm_code(Function& func);$/;"	kind:p	class:DupStuff	typeref:typename:VmCode *	file:	access:private	signature:(Function & func)
DupStuff::cstm_intdup	allocation_stuff.cpp	/^	friend int* cstm_intdup(int to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:int *	file:	access:private	signature:(int to_dup)
DupStuff::cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
ElseStatementsContext	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext::ElseStatementsContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::ElseStatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
ElseStatementsContext	gen_src/GrammarParser.h	/^    ElseStatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ElseStatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ElseStatementsContext	gen_src/GrammarParser.h	/^  class  ElseStatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprAddSubContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/GrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/GrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprCompareContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/GrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/GrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/GrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/GrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprLogicalContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/GrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/GrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprMulDivModEtcContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
FuncArgExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext::FuncArgExprContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::FuncArgExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
FuncArgExprContext	gen_src/GrammarParser.h	/^    FuncArgExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncArgExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
FuncArgExprContext	gen_src/GrammarParser.h	/^  class  FuncArgExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
FuncCallContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext::FuncCallContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::FuncCallContext	signature:(ParserRuleContext * parent,size_t invokingState)
FuncCallContext	gen_src/GrammarParser.h	/^    FuncCallContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncCallContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
FuncCallContext	gen_src/GrammarParser.h	/^  class  FuncCallContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
FuncDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext::FuncDeclContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::FuncDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
FuncDeclContext	gen_src/GrammarParser.h	/^    FuncDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
FuncDeclContext	gen_src/GrammarParser.h	/^  class  FuncDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
FuncVarDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext::FuncVarDeclContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::FuncVarDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
FuncVarDeclContext	gen_src/GrammarParser.h	/^    FuncVarDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
FuncVarDeclContext	gen_src/GrammarParser.h	/^  class  FuncVarDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
Function	symbol_table_classes.hpp	/^	inline Function()$/;"	kind:f	class:Function	access:public	signature:()
Function	symbol_table_classes.hpp	/^	inline Function(Function&& to_move) = default;$/;"	kind:p	class:Function	access:public	signature:(Function && to_move)
Function	symbol_table_classes.hpp	/^	inline Function(Ident s_name)$/;"	kind:f	class:Function	access:public	signature:(Ident s_name)
Function	symbol_table_classes.hpp	/^class Function$/;"	kind:c
Function::Function	symbol_table_classes.hpp	/^	inline Function()$/;"	kind:f	class:Function	access:public	signature:()
Function::Function	symbol_table_classes.hpp	/^	inline Function(Function&& to_move) = default;$/;"	kind:p	class:Function	access:public	signature:(Function && to_move)
Function::Function	symbol_table_classes.hpp	/^	inline Function(Ident s_name)$/;"	kind:f	class:Function	access:public	signature:(Ident s_name)
Function::__code	symbol_table_classes.hpp	/^	VmCode __code;$/;"	kind:m	class:Function	typeref:typename:VmCode	access:private
Function::__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Function	typeref:typename:Ident	access:private
Function::__sym_tbl	symbol_table_classes.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:Function	typeref:typename:SymbolTable	access:private
Function::gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(name);$/;"	kind:p	class:Function	access:public	signature:(name)
Function::gen_getter_by_ref	symbol_table_classes.hpp	/^	gen_getter_by_ref(code);$/;"	kind:p	class:Function	access:public	signature:(code)
Function::gen_getter_by_ref	symbol_table_classes.hpp	/^	gen_getter_by_ref(sym_tbl);$/;"	kind:p	class:Function	access:public	signature:(sym_tbl)
Function::operator =	symbol_table_classes.hpp	/^	inline Function& operator = (Function&& to_move) = default;$/;"	kind:p	class:Function	typeref:typename:Function &	access:public	signature:(Function && to_move)
FunctionTable	symbol_table_classes.cpp	/^FunctionTable::FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
FunctionTable	symbol_table_classes.hpp	/^	FunctionTable();$/;"	kind:p	class:FunctionTable	access:public	signature:()
FunctionTable	symbol_table_classes.hpp	/^class FunctionTable : public IdentTable<Function>$/;"	kind:c	inherits:IdentTable<Function>
FunctionTable::FunctionTable	symbol_table_classes.cpp	/^FunctionTable::FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
FunctionTable::FunctionTable	symbol_table_classes.hpp	/^	FunctionTable();$/;"	kind:p	class:FunctionTable	access:public	signature:()
FunctionTable::~FunctionTable	symbol_table_classes.cpp	/^FunctionTable::~FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
FunctionTable::~FunctionTable	symbol_table_classes.hpp	/^	virtual ~FunctionTable();$/;"	kind:p	class:FunctionTable	access:public	signature:()
GrammarBaseVisitor	gen_src/GrammarBaseVisitor.h	/^class  GrammarBaseVisitor : public GrammarVisitor {$/;"	kind:c	inherits:GrammarVisitor
GrammarBaseVisitor::visitAssignment	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitAssignment(GrammarParser::AssignmentContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * ctx)
GrammarBaseVisitor::visitBuiltinTypename	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitBuiltinTypename(GrammarParser::BuiltinTypenameContext *ctx) overrid/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * ctx)
GrammarBaseVisitor::visitDoWhileStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDoWhileStatement(GrammarParser::DoWhileStatementContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * ctx)
GrammarBaseVisitor::visitElseStatements	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitElseStatements(GrammarParser::ElseStatementsContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * ctx)
GrammarBaseVisitor::visitExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
GrammarBaseVisitor::visitExprAddSub	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
GrammarBaseVisitor::visitExprCompare	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
GrammarBaseVisitor::visitExprLogical	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
GrammarBaseVisitor::visitExprMulDivModEtc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
GrammarBaseVisitor::visitFuncArgExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncArgExpr(GrammarParser::FuncArgExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * ctx)
GrammarBaseVisitor::visitFuncCall	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncCall(GrammarParser::FuncCallContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * ctx)
GrammarBaseVisitor::visitFuncDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncDecl(GrammarParser::FuncDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * ctx)
GrammarBaseVisitor::visitFuncVarDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncVarDecl(GrammarParser::FuncVarDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * ctx)
GrammarBaseVisitor::visitIdentDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentDecl(GrammarParser::IdentDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * ctx)
GrammarBaseVisitor::visitIdentExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentExpr(GrammarParser::IdentExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * ctx)
GrammarBaseVisitor::visitIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
GrammarBaseVisitor::visitIfChainStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIfChainStatement(GrammarParser::IfChainStatementContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * ctx)
GrammarBaseVisitor::visitIfStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIfStatement(GrammarParser::IfStatementContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * ctx)
GrammarBaseVisitor::visitLenExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLenExpr(GrammarParser::LenExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * ctx)
GrammarBaseVisitor::visitNonSizedArrayIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNonSizedArrayIdentName(GrammarParser::NonSizedArrayIdentNameContext/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
GrammarBaseVisitor::visitNumExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
GrammarBaseVisitor::visitProgram	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
GrammarBaseVisitor::visitSizeofExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSizeofExpr(GrammarParser::SizeofExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * ctx)
GrammarBaseVisitor::visitStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitStatement(GrammarParser::StatementContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * ctx)
GrammarBaseVisitor::visitStatements	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitStatements(GrammarParser::StatementsContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * ctx)
GrammarBaseVisitor::visitSubscriptConst	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubscriptConst(GrammarParser::SubscriptConstContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * ctx)
GrammarBaseVisitor::visitSubscriptExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubscriptExpr(GrammarParser::SubscriptExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * ctx)
GrammarBaseVisitor::visitVarDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitVarDecl(GrammarParser::VarDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * ctx)
GrammarBaseVisitor::visitWhileStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitWhileStatement(GrammarParser::WhileStatementContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * ctx)
GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::GrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:GrammarLexer	signature:(CharStream * input)
GrammarLexer	gen_src/GrammarLexer.h	/^  GrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:GrammarLexer	access:public	signature:(antlr4::CharStream * input)
GrammarLexer	gen_src/GrammarLexer.h	/^class  GrammarLexer : public antlr4::Lexer {$/;"	kind:c	inherits:antlr4::Lexer
GrammarLexer::GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::GrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:GrammarLexer	signature:(CharStream * input)
GrammarLexer::GrammarLexer	gen_src/GrammarLexer.h	/^  GrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:GrammarLexer	access:public	signature:(antlr4::CharStream * input)
GrammarLexer::Initializer	gen_src/GrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:GrammarLexer	access:private
GrammarLexer::Initializer::Initializer	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:GrammarLexer::Initializer	signature:()
GrammarLexer::Initializer::Initializer	gen_src/GrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:GrammarLexer::Initializer	access:public	signature:()
GrammarLexer::LexWhitespace	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__0	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__1	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__10	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__11	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__2	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__3	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__4	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__5	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__6	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__7	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__8	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__9	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokDecNum	gen_src/GrammarLexer.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokDo	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokElse	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokIdent	gen_src/GrammarLexer.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokIf	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpAddSub	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpBitwise	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpCompare	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpLogical	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpMulDivMod	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpUnary	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokWhile	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::__anoncd6878f20103	gen_src/GrammarLexer.h	/^  enum {$/;"	kind:g	class:GrammarLexer	access:public
GrammarLexer::_atn	gen_src/GrammarLexer.cpp	/^atn::ATN GrammarLexer::_atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::ATN
GrammarLexer::_atn	gen_src/GrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
GrammarLexer::_channelNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_channelNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_channelNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_decisionToDFA	gen_src/GrammarLexer.cpp	/^std::vector<dfa::DFA> GrammarLexer::_decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<dfa::DFA>
GrammarLexer::_decisionToDFA	gen_src/GrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
GrammarLexer::_init	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer GrammarLexer::_init;$/;"	kind:m	class:GrammarLexer	typeref:typename:GrammarLexer::Initializer
GrammarLexer::_init	gen_src/GrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarLexer	typeref:typename:Initializer	access:private
GrammarLexer::_literalNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_literalNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_literalNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_modeNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_modeNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_modeNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_ruleNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_ruleNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_ruleNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_serializedATN	gen_src/GrammarLexer.cpp	/^std::vector<uint16_t> GrammarLexer::_serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>
GrammarLexer::_serializedATN	gen_src/GrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
GrammarLexer::_sharedContextCache	gen_src/GrammarLexer.cpp	/^atn::PredictionContextCache GrammarLexer::_sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::PredictionContextCache
GrammarLexer::_sharedContextCache	gen_src/GrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
GrammarLexer::_symbolicNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_symbolicNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_symbolicNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_tokenNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_tokenNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_vocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary GrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
GrammarLexer::_vocabulary	gen_src/GrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
GrammarLexer::getATN	gen_src/GrammarLexer.cpp	/^const atn::ATN& GrammarLexer::getATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const atn::ATN &	signature:() const
GrammarLexer::getATN	gen_src/GrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
GrammarLexer::getChannelNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getChannelNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getChannelNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getGrammarFileName	gen_src/GrammarLexer.cpp	/^std::string GrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:std::string	signature:() const
GrammarLexer::getGrammarFileName	gen_src/GrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:std::string	access:public	signature:() const
GrammarLexer::getModeNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getModeNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getModeNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getRuleNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getRuleNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getRuleNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getSerializedATN	gen_src/GrammarLexer.cpp	/^const std::vector<uint16_t> GrammarLexer::getSerializedATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
GrammarLexer::getSerializedATN	gen_src/GrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
GrammarLexer::getTokenNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getTokenNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getTokenNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getVocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary& GrammarLexer::getVocabulary() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
GrammarLexer::getVocabulary	gen_src/GrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
GrammarLexer::~GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::~GrammarLexer() {$/;"	kind:f	class:GrammarLexer	signature:()
GrammarLexer::~GrammarLexer	gen_src/GrammarLexer.h	/^  ~GrammarLexer();$/;"	kind:p	class:GrammarLexer	access:public	signature:()
GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::GrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:GrammarParser	signature:(TokenStream * input)
GrammarParser	gen_src/GrammarParser.h	/^  GrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:GrammarParser	access:public	signature:(antlr4::TokenStream * input)
GrammarParser	gen_src/GrammarParser.h	/^class  GrammarParser : public antlr4::Parser {$/;"	kind:c	inherits:antlr4::Parser
GrammarParser::AssignmentContext	gen_src/GrammarParser.h	/^  class  AssignmentContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::AssignmentContext::AssignmentContext	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext::AssignmentContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::AssignmentContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::AssignmentContext::AssignmentContext	gen_src/GrammarParser.h	/^    AssignmentContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::AssignmentContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::AssignmentContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::AssignmentContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::AssignmentContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::AssignmentContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::AssignmentContext::expr() {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::AssignmentContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::AssignmentContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::AssignmentContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:size_t	signature:() const
GrammarParser::AssignmentContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::AssignmentContext::identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::AssignmentContext::identExpr() {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
GrammarParser::AssignmentContext::identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:IdentExprContext *	access:public	signature:()
GrammarParser::BuiltinTypenameContext	gen_src/GrammarParser.h	/^  class  BuiltinTypenameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::BuiltinTypenameContext::BuiltinTypenameContext	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext::BuiltinTypenameContext(ParserRuleContext *parent, size_t /;"	kind:f	class:GrammarParser::BuiltinTypenameContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::BuiltinTypenameContext::BuiltinTypenameContext	gen_src/GrammarParser.h	/^    BuiltinTypenameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::BuiltinTypenameContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::BuiltinTypenameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::BuiltinTypenameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::BuiltinTypenameContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::BuiltinTypenameContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::BuiltinTypenameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::BuiltinTypenameContext	typeref:typename:size_t	signature:() const
GrammarParser::BuiltinTypenameContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::DoWhileStatementContext	gen_src/GrammarParser.h	/^  class  DoWhileStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::DoWhileStatementContext::DoWhileStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext::DoWhileStatementContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::DoWhileStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::DoWhileStatementContext::DoWhileStatementContext	gen_src/GrammarParser.h	/^    DoWhileStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::DoWhileStatementContext::TokDo	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::DoWhileStatementContext::TokDo() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::DoWhileStatementContext::TokDo	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDo();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::DoWhileStatementContext::TokWhile	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::DoWhileStatementContext::TokWhile() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::DoWhileStatementContext::TokWhile	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokWhile();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::DoWhileStatementContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::DoWhileStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::DoWhileStatementContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::DoWhileStatementContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::DoWhileStatementContext::expr() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::DoWhileStatementContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::DoWhileStatementContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::DoWhileStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:size_t	signature:() const
GrammarParser::DoWhileStatementContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::DoWhileStatementContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::DoWhileStatementContext::statements() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::DoWhileStatementContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::ElseStatementsContext	gen_src/GrammarParser.h	/^  class  ElseStatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ElseStatementsContext::ElseStatementsContext	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext::ElseStatementsContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::ElseStatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ElseStatementsContext::ElseStatementsContext	gen_src/GrammarParser.h	/^    ElseStatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ElseStatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ElseStatementsContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ElseStatementsContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ElseStatementsContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ElseStatementsContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ElseStatementsContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:size_t	signature:() const
GrammarParser::ElseStatementsContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ElseStatementsContext::ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::ElseStatementsContext::ifChainStatement()/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
GrammarParser::ElseStatementsContext::ifChainStatement	gen_src/GrammarParser.h	/^    IfChainStatementContext *ifChainStatement();$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:IfChainStatementContext *	access:public	signature:()
GrammarParser::ElseStatementsContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::ElseStatementsContext::statements() {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::ElseStatementsContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::ExprAddSubContext	gen_src/GrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/GrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprAddSubContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprAddSubContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprAddSubContext::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprAddSubContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::ExprAddSubContext::exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::ExprAddSubContext::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
GrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
GrammarParser::ExprAddSubContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprAddSubContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprCompareContext	gen_src/GrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprCompareContext::ExprCompareContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprCompareContext::ExprCompareContext	gen_src/GrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprCompareContext::TokOpAddSub	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprCompareContext::TokOpAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprCompareContext::TokOpAddSub	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprCompareContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprCompareContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprCompareContext::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprCompareContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::ExprCompareContext::exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::ExprCompareContext::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprCompareContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::ExprCompareContext::exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::ExprCompareContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprCompareContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprContext	gen_src/GrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprContext::ExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprContext::ExprContext	gen_src/GrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprContext::TokOpLogical	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprContext::TokOpLogical	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprContext::expr() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::ExprContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::ExprContext::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::ExprContext::exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::ExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprLogicalContext	gen_src/GrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/GrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprLogicalContext::TokOpCompare	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprLogicalContext::TokOpCompare	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprLogicalContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprLogicalContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprLogicalContext::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprLogicalContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::ExprLogicalContext::exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::ExprLogicalContext::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprLogicalContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::ExprLogicalContext::exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::ExprLogicalContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprLogicalContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprMulDivModEtcContext::TokOpUnary	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprMulDivModEtcContext::TokOpUnary() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprMulDivModEtcContext::TokOpUnary	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpUnary();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprMulDivModEtcContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprMulDivModEtcContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::funcCall	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext* GrammarParser::ExprMulDivModEtcContext::funcCall() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::FuncCallContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::funcCall	gen_src/GrammarParser.h	/^    FuncCallContext *funcCall();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:FuncCallContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprMulDivModEtcContext::identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::ExprMulDivModEtcContext::identExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentExprContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::lenExpr	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext* GrammarParser::ExprMulDivModEtcContext::lenExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::LenExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::lenExpr	gen_src/GrammarParser.h	/^    LenExprContext *lenExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:LenExprContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::ExprMulDivModEtcContext::numExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::sizeofExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext* GrammarParser::ExprMulDivModEtcContext::sizeofExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::SizeofExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::sizeofExpr	gen_src/GrammarParser.h	/^    SizeofExprContext *sizeofExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:SizeofExprContext *	access:public	signature:()
GrammarParser::FuncArgExprContext	gen_src/GrammarParser.h	/^  class  FuncArgExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::FuncArgExprContext::FuncArgExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext::FuncArgExprContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::FuncArgExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncArgExprContext::FuncArgExprContext	gen_src/GrammarParser.h	/^    FuncArgExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncArgExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncArgExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncArgExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::FuncArgExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::FuncArgExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncArgExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:size_t	signature:() const
GrammarParser::FuncArgExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::FuncArgExprContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncArgExprContext::identName() {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::FuncArgExprContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::FuncCallContext	gen_src/GrammarParser.h	/^  class  FuncCallContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::FuncCallContext::FuncCallContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext::FuncCallContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::FuncCallContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncCallContext::FuncCallContext	gen_src/GrammarParser.h	/^    FuncCallContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncCallContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncCallContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncCallContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::FuncCallContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::FuncCallContext::funcArgExpr	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext* GrammarParser::FuncCallContext::funcArgExpr(size_t i) {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:GrammarParser::FuncArgExprContext *	signature:(size_t i)
GrammarParser::FuncCallContext::funcArgExpr	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncArgExprContext *> GrammarParser::FuncCallContext::funcArgExpr() {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:std::vector<GrammarParser::FuncArgExprContext * >	signature:()
GrammarParser::FuncCallContext::funcArgExpr	gen_src/GrammarParser.h	/^    FuncArgExprContext* funcArgExpr(size_t i);$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:FuncArgExprContext *	access:public	signature:(size_t i)
GrammarParser::FuncCallContext::funcArgExpr	gen_src/GrammarParser.h	/^    std::vector<FuncArgExprContext *> funcArgExpr();$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:std::vector<FuncArgExprContext * >	access:public	signature:()
GrammarParser::FuncCallContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncCallContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:size_t	signature:() const
GrammarParser::FuncCallContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::FuncCallContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncCallContext::identName() {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::FuncCallContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::FuncDeclContext	gen_src/GrammarParser.h	/^  class  FuncDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::FuncDeclContext::FuncDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext::FuncDeclContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::FuncDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncDeclContext::FuncDeclContext	gen_src/GrammarParser.h	/^    FuncDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncDeclContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::FuncDeclContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::FuncDeclContext::funcVarDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext* GrammarParser::FuncDeclContext::funcVarDecl(size_t i) {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::FuncVarDeclContext *	signature:(size_t i)
GrammarParser::FuncDeclContext::funcVarDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncVarDeclContext *> GrammarParser::FuncDeclContext::funcVarDecl() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:std::vector<GrammarParser::FuncVarDeclContext * >	signature:()
GrammarParser::FuncDeclContext::funcVarDecl	gen_src/GrammarParser.h	/^    FuncVarDeclContext* funcVarDecl(size_t i);$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:FuncVarDeclContext *	access:public	signature:(size_t i)
GrammarParser::FuncDeclContext::funcVarDecl	gen_src/GrammarParser.h	/^    std::vector<FuncVarDeclContext *> funcVarDecl();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:std::vector<FuncVarDeclContext * >	access:public	signature:()
GrammarParser::FuncDeclContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:size_t	signature:() const
GrammarParser::FuncDeclContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::FuncDeclContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncDeclContext::identName() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::FuncDeclContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::FuncDeclContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::FuncDeclContext::statements() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::FuncDeclContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::FuncVarDeclContext	gen_src/GrammarParser.h	/^  class  FuncVarDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::FuncVarDeclContext::FuncVarDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext::FuncVarDeclContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::FuncVarDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncVarDeclContext::FuncVarDeclContext	gen_src/GrammarParser.h	/^    FuncVarDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::FuncVarDeclContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncVarDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::FuncVarDeclContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::FuncVarDeclContext::builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::FuncVarDeclContext::builtinTypename() {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
GrammarParser::FuncVarDeclContext::builtinTypename	gen_src/GrammarParser.h	/^    BuiltinTypenameContext *builtinTypename();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
GrammarParser::FuncVarDeclContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncVarDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:size_t	signature:() const
GrammarParser::FuncVarDeclContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::FuncVarDeclContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncVarDeclContext::identName() {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::FuncVarDeclContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::FuncVarDeclContext::nonSizedArrayIdentName	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext* GrammarParser::FuncVarDeclContext::nonSizedArrayId/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::NonSizedArrayIdentNameContext *	signature:()
GrammarParser::FuncVarDeclContext::nonSizedArrayIdentName	gen_src/GrammarParser.h	/^    NonSizedArrayIdentNameContext *nonSizedArrayIdentName();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:NonSizedArrayIdentNameContext *	access:public	signature:()
GrammarParser::GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::GrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:GrammarParser	signature:(TokenStream * input)
GrammarParser::GrammarParser	gen_src/GrammarParser.h	/^  GrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:GrammarParser	access:public	signature:(antlr4::TokenStream * input)
GrammarParser::IdentDeclContext	gen_src/GrammarParser.h	/^  class  IdentDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IdentDeclContext::IdentDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext::IdentDeclContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentDeclContext::IdentDeclContext	gen_src/GrammarParser.h	/^    IdentDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentDeclContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IdentDeclContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IdentDeclContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:size_t	signature:() const
GrammarParser::IdentDeclContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::IdentDeclContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::IdentDeclContext::identName() {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::IdentDeclContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::IdentDeclContext::subscriptConst	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext* GrammarParser::IdentDeclContext::subscriptConst() {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:GrammarParser::SubscriptConstContext *	signature:()
GrammarParser::IdentDeclContext::subscriptConst	gen_src/GrammarParser.h	/^    SubscriptConstContext *subscriptConst();$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:SubscriptConstContext *	access:public	signature:()
GrammarParser::IdentExprContext	gen_src/GrammarParser.h	/^  class  IdentExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IdentExprContext::IdentExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext::IdentExprContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentExprContext::IdentExprContext	gen_src/GrammarParser.h	/^    IdentExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IdentExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IdentExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:size_t	signature:() const
GrammarParser::IdentExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::IdentExprContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::IdentExprContext::identName() {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::IdentExprContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::IdentExprContext::subscriptExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext* GrammarParser::IdentExprContext::subscriptExpr() {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:GrammarParser::SubscriptExprContext *	signature:()
GrammarParser::IdentExprContext::subscriptExpr	gen_src/GrammarParser.h	/^    SubscriptExprContext *subscriptExpr();$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:SubscriptExprContext *	access:public	signature:()
GrammarParser::IdentNameContext	gen_src/GrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IdentNameContext::IdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentNameContext::IdentNameContext	gen_src/GrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentNameContext::TokIdent	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::IdentNameContext::TokIdent	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::IdentNameContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IdentNameContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IdentNameContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
GrammarParser::IdentNameContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::IfChainStatementContext	gen_src/GrammarParser.h	/^  class  IfChainStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IfChainStatementContext::IfChainStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext::IfChainStatementContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::IfChainStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IfChainStatementContext::IfChainStatementContext	gen_src/GrammarParser.h	/^    IfChainStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IfChainStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IfChainStatementContext::TokElse	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfChainStatementContext::TokElse() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::IfChainStatementContext::TokElse	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokElse();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::IfChainStatementContext::TokIf	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfChainStatementContext::TokIf() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::IfChainStatementContext::TokIf	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIf();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::IfChainStatementContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IfChainStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IfChainStatementContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IfChainStatementContext::elseStatements	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext* GrammarParser::IfChainStatementContext::elseStatements() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::ElseStatementsContext *	signature:()
GrammarParser::IfChainStatementContext::elseStatements	gen_src/GrammarParser.h	/^    ElseStatementsContext *elseStatements();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:ElseStatementsContext *	access:public	signature:()
GrammarParser::IfChainStatementContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::IfChainStatementContext::expr() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::IfChainStatementContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::IfChainStatementContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IfChainStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:size_t	signature:() const
GrammarParser::IfChainStatementContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::IfChainStatementContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::IfChainStatementContext::statements() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::IfChainStatementContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::IfStatementContext	gen_src/GrammarParser.h	/^  class  IfStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IfStatementContext::IfStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext::IfStatementContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::IfStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IfStatementContext::IfStatementContext	gen_src/GrammarParser.h	/^    IfStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IfStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IfStatementContext::TokIf	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfStatementContext::TokIf() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::IfStatementContext::TokIf	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIf();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::IfStatementContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IfStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IfStatementContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IfStatementContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::IfStatementContext::expr() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::IfStatementContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::IfStatementContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IfStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:size_t	signature:() const
GrammarParser::IfStatementContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::IfStatementContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::IfStatementContext::statements() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::IfStatementContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::Initializer	gen_src/GrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:GrammarParser	access:private
GrammarParser::Initializer::Initializer	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer::Initializer() {$/;"	kind:f	class:GrammarParser::Initializer	signature:()
GrammarParser::Initializer::Initializer	gen_src/GrammarParser.h	/^    Initializer();$/;"	kind:p	struct:GrammarParser::Initializer	access:public	signature:()
GrammarParser::LenExprContext	gen_src/GrammarParser.h	/^  class  LenExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::LenExprContext::LenExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext::LenExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LenExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::LenExprContext::LenExprContext	gen_src/GrammarParser.h	/^    LenExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LenExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::LenExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LenExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::LenExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::LenExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LenExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:size_t	signature:() const
GrammarParser::LenExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::LenExprContext::identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::LenExprContext::identExpr() {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
GrammarParser::LenExprContext::identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:IdentExprContext *	access:public	signature:()
GrammarParser::LexWhitespace	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::NonSizedArrayIdentNameContext	gen_src/GrammarParser.h	/^  class  NonSizedArrayIdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::NonSizedArrayIdentNameContext::NonSizedArrayIdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext::NonSizedArrayIdentNameContext(ParserRuleContext *p/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::NonSizedArrayIdentNameContext::NonSizedArrayIdentNameContext	gen_src/GrammarParser.h	/^    NonSizedArrayIdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::NonSizedArrayIdentNameContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NonSizedArrayIdentNameContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::NonSizedArrayIdentNameContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::NonSizedArrayIdentNameContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NonSizedArrayIdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:size_t	signature:() const
GrammarParser::NonSizedArrayIdentNameContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::NonSizedArrayIdentNameContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::NonSizedArrayIdentNameContext::identName() {$/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::NonSizedArrayIdentNameContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::NumExprContext	gen_src/GrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::NumExprContext::NumExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::NumExprContext::NumExprContext	gen_src/GrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::NumExprContext::TokDecNum	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::NumExprContext::TokDecNum	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::NumExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::NumExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::NumExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
GrammarParser::NumExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ProgramContext	gen_src/GrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ProgramContext::ProgramContext	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ProgramContext::ProgramContext	gen_src/GrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ProgramContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ProgramContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ProgramContext::funcDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext* GrammarParser::ProgramContext::funcDecl(size_t i) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:GrammarParser::FuncDeclContext *	signature:(size_t i)
GrammarParser::ProgramContext::funcDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncDeclContext *> GrammarParser::ProgramContext::funcDecl() {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:std::vector<GrammarParser::FuncDeclContext * >	signature:()
GrammarParser::ProgramContext::funcDecl	gen_src/GrammarParser.h	/^    FuncDeclContext* funcDecl(size_t i);$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:FuncDeclContext *	access:public	signature:(size_t i)
GrammarParser::ProgramContext::funcDecl	gen_src/GrammarParser.h	/^    std::vector<FuncDeclContext *> funcDecl();$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:std::vector<FuncDeclContext * >	access:public	signature:()
GrammarParser::ProgramContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
GrammarParser::ProgramContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::RuleAssignment	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleBuiltinTypename	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleDoWhileStatement	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleElseStatements	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExpr	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprAddSub	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprCompare	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprLogical	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprMulDivModEtc	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleFuncArgExpr	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleFuncCall	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleFuncDecl	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleFuncVarDecl	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIdentDecl	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIdentExpr	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIdentName	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIfChainStatement	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIfStatement	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleLenExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleNonSizedArrayIdentName	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleNumExpr	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleProgram	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleSizeofExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleStatement	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleStatements	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleSubscriptConst	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleSubscriptExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleVarDecl	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleWhileStatement	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::SizeofExprContext	gen_src/GrammarParser.h	/^  class  SizeofExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::SizeofExprContext::SizeofExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext::SizeofExprContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::SizeofExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::SizeofExprContext::SizeofExprContext	gen_src/GrammarParser.h	/^    SizeofExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SizeofExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::SizeofExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SizeofExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::SizeofExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::SizeofExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SizeofExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:size_t	signature:() const
GrammarParser::SizeofExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::SizeofExprContext::identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::SizeofExprContext::identExpr() {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
GrammarParser::SizeofExprContext::identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:IdentExprContext *	access:public	signature:()
GrammarParser::StatementContext	gen_src/GrammarParser.h	/^  class  StatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::StatementContext::StatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext::StatementContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::StatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::StatementContext::StatementContext	gen_src/GrammarParser.h	/^    StatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::StatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::StatementContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::StatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::StatementContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::StatementContext::assignment	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext* GrammarParser::StatementContext::assignment() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::AssignmentContext *	signature:()
GrammarParser::StatementContext::assignment	gen_src/GrammarParser.h	/^    AssignmentContext *assignment();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:AssignmentContext *	access:public	signature:()
GrammarParser::StatementContext::doWhileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext* GrammarParser::StatementContext::doWhileStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::DoWhileStatementContext *	signature:()
GrammarParser::StatementContext::doWhileStatement	gen_src/GrammarParser.h	/^    DoWhileStatementContext *doWhileStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:DoWhileStatementContext *	access:public	signature:()
GrammarParser::StatementContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::StatementContext::expr() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::StatementContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::StatementContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::StatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:size_t	signature:() const
GrammarParser::StatementContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::StatementContext::ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::StatementContext::ifChainStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
GrammarParser::StatementContext::ifChainStatement	gen_src/GrammarParser.h	/^    IfChainStatementContext *ifChainStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:IfChainStatementContext *	access:public	signature:()
GrammarParser::StatementContext::ifStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext* GrammarParser::StatementContext::ifStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::IfStatementContext *	signature:()
GrammarParser::StatementContext::ifStatement	gen_src/GrammarParser.h	/^    IfStatementContext *ifStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:IfStatementContext *	access:public	signature:()
GrammarParser::StatementContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::StatementContext::statements() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::StatementContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::StatementContext::varDecl	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext* GrammarParser::StatementContext::varDecl() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::VarDeclContext *	signature:()
GrammarParser::StatementContext::varDecl	gen_src/GrammarParser.h	/^    VarDeclContext *varDecl();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:VarDeclContext *	access:public	signature:()
GrammarParser::StatementContext::whileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext* GrammarParser::StatementContext::whileStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::WhileStatementContext *	signature:()
GrammarParser::StatementContext::whileStatement	gen_src/GrammarParser.h	/^    WhileStatementContext *whileStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:WhileStatementContext *	access:public	signature:()
GrammarParser::StatementsContext	gen_src/GrammarParser.h	/^  class  StatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::StatementsContext::StatementsContext	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext::StatementsContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::StatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::StatementsContext::StatementsContext	gen_src/GrammarParser.h	/^    StatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::StatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::StatementsContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::StatementsContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::StatementsContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::StatementsContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::StatementsContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:size_t	signature:() const
GrammarParser::StatementsContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::StatementsContext::statement	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext* GrammarParser::StatementsContext::statement(size_t i) {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:GrammarParser::StatementContext *	signature:(size_t i)
GrammarParser::StatementsContext::statement	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::StatementContext *> GrammarParser::StatementsContext::statement() {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:std::vector<GrammarParser::StatementContext * >	signature:()
GrammarParser::StatementsContext::statement	gen_src/GrammarParser.h	/^    StatementContext* statement(size_t i);$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:StatementContext *	access:public	signature:(size_t i)
GrammarParser::StatementsContext::statement	gen_src/GrammarParser.h	/^    std::vector<StatementContext *> statement();$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:std::vector<StatementContext * >	access:public	signature:()
GrammarParser::SubscriptConstContext	gen_src/GrammarParser.h	/^  class  SubscriptConstContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::SubscriptConstContext::SubscriptConstContext	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext::SubscriptConstContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::SubscriptConstContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::SubscriptConstContext::SubscriptConstContext	gen_src/GrammarParser.h	/^    SubscriptConstContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SubscriptConstContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::SubscriptConstContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SubscriptConstContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::SubscriptConstContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::SubscriptConstContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SubscriptConstContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:size_t	signature:() const
GrammarParser::SubscriptConstContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::SubscriptConstContext::numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::SubscriptConstContext::numExpr() {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
GrammarParser::SubscriptConstContext::numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:NumExprContext *	access:public	signature:()
GrammarParser::SubscriptExprContext	gen_src/GrammarParser.h	/^  class  SubscriptExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::SubscriptExprContext::SubscriptExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext::SubscriptExprContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::SubscriptExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::SubscriptExprContext::SubscriptExprContext	gen_src/GrammarParser.h	/^    SubscriptExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SubscriptExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::SubscriptExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SubscriptExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::SubscriptExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::SubscriptExprContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::SubscriptExprContext::expr() {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::SubscriptExprContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::SubscriptExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SubscriptExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:size_t	signature:() const
GrammarParser::SubscriptExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::T__0	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__1	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__10	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__11	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__2	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__3	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__4	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__5	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__6	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__7	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__8	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__9	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokDecNum	gen_src/GrammarParser.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokDo	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokElse	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokIdent	gen_src/GrammarParser.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokIf	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpAddSub	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpBitwise	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpCompare	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpLogical	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpMulDivMod	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpUnary	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokWhile	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::VarDeclContext	gen_src/GrammarParser.h	/^  class  VarDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::VarDeclContext::VarDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext::VarDeclContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::VarDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::VarDeclContext::VarDeclContext	gen_src/GrammarParser.h	/^    VarDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::VarDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::VarDeclContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::VarDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::VarDeclContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::VarDeclContext::builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::VarDeclContext::builtinTypename() {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
GrammarParser::VarDeclContext::builtinTypename	gen_src/GrammarParser.h	/^    BuiltinTypenameContext *builtinTypename();$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
GrammarParser::VarDeclContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::VarDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:size_t	signature:() const
GrammarParser::VarDeclContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::VarDeclContext::identDecl	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext* GrammarParser::VarDeclContext::identDecl(size_t i) {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:GrammarParser::IdentDeclContext *	signature:(size_t i)
GrammarParser::VarDeclContext::identDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::IdentDeclContext *> GrammarParser::VarDeclContext::identDecl() {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:std::vector<GrammarParser::IdentDeclContext * >	signature:()
GrammarParser::VarDeclContext::identDecl	gen_src/GrammarParser.h	/^    IdentDeclContext* identDecl(size_t i);$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:IdentDeclContext *	access:public	signature:(size_t i)
GrammarParser::VarDeclContext::identDecl	gen_src/GrammarParser.h	/^    std::vector<IdentDeclContext *> identDecl();$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:std::vector<IdentDeclContext * >	access:public	signature:()
GrammarParser::WhileStatementContext	gen_src/GrammarParser.h	/^  class  WhileStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::WhileStatementContext::TokWhile	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::WhileStatementContext::TokWhile() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::WhileStatementContext::TokWhile	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokWhile();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::WhileStatementContext::WhileStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext::WhileStatementContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::WhileStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::WhileStatementContext::WhileStatementContext	gen_src/GrammarParser.h	/^    WhileStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::WhileStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::WhileStatementContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::WhileStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::WhileStatementContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::WhileStatementContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::WhileStatementContext::expr() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::WhileStatementContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::WhileStatementContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::WhileStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:size_t	signature:() const
GrammarParser::WhileStatementContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::WhileStatementContext::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::WhileStatementContext::statements() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::WhileStatementContext::statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::__anonea8e543f0103	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
GrammarParser::__anonea8e543f0203	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
GrammarParser::_atn	gen_src/GrammarParser.cpp	/^atn::ATN GrammarParser::_atn;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::ATN
GrammarParser::_atn	gen_src/GrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::ATN	access:private
GrammarParser::_decisionToDFA	gen_src/GrammarParser.cpp	/^std::vector<dfa::DFA> GrammarParser::_decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<dfa::DFA>
GrammarParser::_decisionToDFA	gen_src/GrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
GrammarParser::_init	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer GrammarParser::_init;$/;"	kind:m	class:GrammarParser	typeref:typename:GrammarParser::Initializer
GrammarParser::_init	gen_src/GrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarParser	typeref:typename:Initializer	access:private
GrammarParser::_literalNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_literalNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_literalNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_ruleNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_ruleNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_ruleNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_serializedATN	gen_src/GrammarParser.cpp	/^std::vector<uint16_t> GrammarParser::_serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>
GrammarParser::_serializedATN	gen_src/GrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>	access:private
GrammarParser::_sharedContextCache	gen_src/GrammarParser.cpp	/^atn::PredictionContextCache GrammarParser::_sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::PredictionContextCache
GrammarParser::_sharedContextCache	gen_src/GrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
GrammarParser::_symbolicNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_symbolicNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_symbolicNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_tokenNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_tokenNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_vocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary GrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
GrammarParser::_vocabulary	gen_src/GrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
GrammarParser::assignment	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext* GrammarParser::assignment() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::AssignmentContext *	signature:()
GrammarParser::assignment	gen_src/GrammarParser.h	/^  AssignmentContext* assignment();$/;"	kind:p	class:GrammarParser	typeref:typename:AssignmentContext *	access:public	signature:()
GrammarParser::builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::builtinTypename() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
GrammarParser::builtinTypename	gen_src/GrammarParser.h	/^  BuiltinTypenameContext* builtinTypename();$/;"	kind:p	class:GrammarParser	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
GrammarParser::doWhileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext* GrammarParser::doWhileStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::DoWhileStatementContext *	signature:()
GrammarParser::doWhileStatement	gen_src/GrammarParser.h	/^  DoWhileStatementContext* doWhileStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:DoWhileStatementContext *	access:public	signature:()
GrammarParser::elseStatements	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext* GrammarParser::elseStatements() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ElseStatementsContext *	signature:()
GrammarParser::elseStatements	gen_src/GrammarParser.h	/^  ElseStatementsContext* elseStatements();$/;"	kind:p	class:GrammarParser	typeref:typename:ElseStatementsContext *	access:public	signature:()
GrammarParser::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:(int precedence)
GrammarParser::expr	gen_src/GrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::expr	gen_src/GrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
GrammarParser::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:(int precedence)
GrammarParser::exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
GrammarParser::exprAddSubSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
GrammarParser::exprAddSubSempred	gen_src/GrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
GrammarParser::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:(int precedence)
GrammarParser::exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
GrammarParser::exprCompareSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
GrammarParser::exprCompareSempred	gen_src/GrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
GrammarParser::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:(int precedence)
GrammarParser::exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
GrammarParser::exprLogicalSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
GrammarParser::exprLogicalSempred	gen_src/GrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
GrammarParser::exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
GrammarParser::exprMulDivModEtc	gen_src/GrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
GrammarParser::exprSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
GrammarParser::exprSempred	gen_src/GrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
GrammarParser::funcArgExpr	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext* GrammarParser::funcArgExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncArgExprContext *	signature:()
GrammarParser::funcArgExpr	gen_src/GrammarParser.h	/^  FuncArgExprContext* funcArgExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncArgExprContext *	access:public	signature:()
GrammarParser::funcCall	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext* GrammarParser::funcCall() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncCallContext *	signature:()
GrammarParser::funcCall	gen_src/GrammarParser.h	/^  FuncCallContext* funcCall();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncCallContext *	access:public	signature:()
GrammarParser::funcDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext* GrammarParser::funcDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncDeclContext *	signature:()
GrammarParser::funcDecl	gen_src/GrammarParser.h	/^  FuncDeclContext* funcDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncDeclContext *	access:public	signature:()
GrammarParser::funcVarDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext* GrammarParser::funcVarDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncVarDeclContext *	signature:()
GrammarParser::funcVarDecl	gen_src/GrammarParser.h	/^  FuncVarDeclContext* funcVarDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncVarDeclContext *	access:public	signature:()
GrammarParser::getATN	gen_src/GrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:GrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
GrammarParser::getGrammarFileName	gen_src/GrammarParser.cpp	/^std::string GrammarParser::getGrammarFileName() const {$/;"	kind:f	class:GrammarParser	typeref:typename:std::string	signature:() const
GrammarParser::getGrammarFileName	gen_src/GrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:std::string	access:public	signature:() const
GrammarParser::getRuleNames	gen_src/GrammarParser.cpp	/^const std::vector<std::string>& GrammarParser::getRuleNames() const {$/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarParser::getRuleNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarParser::getTokenNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarParser::getVocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary& GrammarParser::getVocabulary() const {$/;"	kind:f	class:GrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
GrammarParser::getVocabulary	gen_src/GrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
GrammarParser::identDecl	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext* GrammarParser::identDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentDeclContext *	signature:()
GrammarParser::identDecl	gen_src/GrammarParser.h	/^  IdentDeclContext* identDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentDeclContext *	access:public	signature:()
GrammarParser::identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::identExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentExprContext *	signature:()
GrammarParser::identExpr	gen_src/GrammarParser.h	/^  IdentExprContext* identExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentExprContext *	access:public	signature:()
GrammarParser::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::identName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::identName	gen_src/GrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::ifChainStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
GrammarParser::ifChainStatement	gen_src/GrammarParser.h	/^  IfChainStatementContext* ifChainStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:IfChainStatementContext *	access:public	signature:()
GrammarParser::ifStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext* GrammarParser::ifStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IfStatementContext *	signature:()
GrammarParser::ifStatement	gen_src/GrammarParser.h	/^  IfStatementContext* ifStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:IfStatementContext *	access:public	signature:()
GrammarParser::lenExpr	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext* GrammarParser::lenExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LenExprContext *	signature:()
GrammarParser::lenExpr	gen_src/GrammarParser.h	/^  LenExprContext* lenExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:LenExprContext *	access:public	signature:()
GrammarParser::nonSizedArrayIdentName	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext* GrammarParser::nonSizedArrayIdentName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NonSizedArrayIdentNameContext *	signature:()
GrammarParser::nonSizedArrayIdentName	gen_src/GrammarParser.h	/^  NonSizedArrayIdentNameContext* nonSizedArrayIdentName();$/;"	kind:p	class:GrammarParser	typeref:typename:NonSizedArrayIdentNameContext *	access:public	signature:()
GrammarParser::numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::numExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NumExprContext *	signature:()
GrammarParser::numExpr	gen_src/GrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
GrammarParser::program	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext* GrammarParser::program() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ProgramContext *	signature:()
GrammarParser::program	gen_src/GrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:GrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
GrammarParser::sempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
GrammarParser::sempred	gen_src/GrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
GrammarParser::sizeofExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext* GrammarParser::sizeofExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SizeofExprContext *	signature:()
GrammarParser::sizeofExpr	gen_src/GrammarParser.h	/^  SizeofExprContext* sizeofExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:SizeofExprContext *	access:public	signature:()
GrammarParser::statement	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext* GrammarParser::statement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::StatementContext *	signature:()
GrammarParser::statement	gen_src/GrammarParser.h	/^  StatementContext* statement();$/;"	kind:p	class:GrammarParser	typeref:typename:StatementContext *	access:public	signature:()
GrammarParser::statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::statements() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::StatementsContext *	signature:()
GrammarParser::statements	gen_src/GrammarParser.h	/^  StatementsContext* statements();$/;"	kind:p	class:GrammarParser	typeref:typename:StatementsContext *	access:public	signature:()
GrammarParser::subscriptConst	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext* GrammarParser::subscriptConst() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SubscriptConstContext *	signature:()
GrammarParser::subscriptConst	gen_src/GrammarParser.h	/^  SubscriptConstContext* subscriptConst();$/;"	kind:p	class:GrammarParser	typeref:typename:SubscriptConstContext *	access:public	signature:()
GrammarParser::subscriptExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext* GrammarParser::subscriptExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SubscriptExprContext *	signature:()
GrammarParser::subscriptExpr	gen_src/GrammarParser.h	/^  SubscriptExprContext* subscriptExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:SubscriptExprContext *	access:public	signature:()
GrammarParser::varDecl	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext* GrammarParser::varDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::VarDeclContext *	signature:()
GrammarParser::varDecl	gen_src/GrammarParser.h	/^  VarDeclContext* varDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:VarDeclContext *	access:public	signature:()
GrammarParser::whileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext* GrammarParser::whileStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::WhileStatementContext *	signature:()
GrammarParser::whileStatement	gen_src/GrammarParser.h	/^  WhileStatementContext* whileStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:WhileStatementContext *	access:public	signature:()
GrammarParser::~GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::~GrammarParser() {$/;"	kind:f	class:GrammarParser	signature:()
GrammarParser::~GrammarParser	gen_src/GrammarParser.h	/^  ~GrammarParser();$/;"	kind:p	class:GrammarParser	access:public	signature:()
GrammarVisitor	gen_src/GrammarVisitor.h	/^class  GrammarVisitor : public antlr4::tree::AbstractParseTreeVisitor {$/;"	kind:c	inherits:antlr4::tree::AbstractParseTreeVisitor
GrammarVisitor::visitAssignment	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitAssignment(GrammarParser::AssignmentContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * context)
GrammarVisitor::visitBuiltinTypename	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitBuiltinTypename(GrammarParser::BuiltinTypenameContext *context) =/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * context)
GrammarVisitor::visitDoWhileStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitDoWhileStatement(GrammarParser::DoWhileStatementContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * context)
GrammarVisitor::visitElseStatements	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitElseStatements(GrammarParser::ElseStatementsContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * context)
GrammarVisitor::visitExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * context)
GrammarVisitor::visitExprAddSub	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * context)
GrammarVisitor::visitExprCompare	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * context)
GrammarVisitor::visitExprLogical	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * context)
GrammarVisitor::visitExprMulDivModEtc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * context)
GrammarVisitor::visitFuncArgExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncArgExpr(GrammarParser::FuncArgExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * context)
GrammarVisitor::visitFuncCall	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncCall(GrammarParser::FuncCallContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * context)
GrammarVisitor::visitFuncDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncDecl(GrammarParser::FuncDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * context)
GrammarVisitor::visitFuncVarDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncVarDecl(GrammarParser::FuncVarDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * context)
GrammarVisitor::visitIdentDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentDecl(GrammarParser::IdentDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * context)
GrammarVisitor::visitIdentExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentExpr(GrammarParser::IdentExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * context)
GrammarVisitor::visitIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * context)
GrammarVisitor::visitIfChainStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIfChainStatement(GrammarParser::IfChainStatementContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * context)
GrammarVisitor::visitIfStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIfStatement(GrammarParser::IfStatementContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * context)
GrammarVisitor::visitLenExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLenExpr(GrammarParser::LenExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * context)
GrammarVisitor::visitNonSizedArrayIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNonSizedArrayIdentName(GrammarParser::NonSizedArrayIdentNameConte/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * context)
GrammarVisitor::visitNumExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * context)
GrammarVisitor::visitProgram	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * context)
GrammarVisitor::visitSizeofExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSizeofExpr(GrammarParser::SizeofExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * context)
GrammarVisitor::visitStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitStatement(GrammarParser::StatementContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * context)
GrammarVisitor::visitStatements	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitStatements(GrammarParser::StatementsContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * context)
GrammarVisitor::visitSubscriptConst	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSubscriptConst(GrammarParser::SubscriptConstContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * context)
GrammarVisitor::visitSubscriptExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSubscriptExpr(GrammarParser::SubscriptExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * context)
GrammarVisitor::visitVarDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitVarDecl(GrammarParser::VarDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * context)
GrammarVisitor::visitWhileStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitWhileStatement(GrammarParser::WhileStatementContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * context)
Ident	ident_table_class.hpp	/^typedef std::string* Ident;$/;"	kind:t	typeref:typename:std::string *
IdentDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext::IdentDeclContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentDeclContext	gen_src/GrammarParser.h	/^    IdentDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentDeclContext	gen_src/GrammarParser.h	/^  class  IdentDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext::IdentExprContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentExprContext	gen_src/GrammarParser.h	/^    IdentExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentExprContext	gen_src/GrammarParser.h	/^  class  IdentExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/GrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/GrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentTable	ident_table_class.hpp	/^	inline IdentTable()$/;"	kind:f	class:IdentTable	access:public	signature:()
IdentTable	ident_table_class.hpp	/^class IdentTable$/;"	kind:c
IdentTable::IdentTable	ident_table_class.hpp	/^	inline IdentTable()$/;"	kind:f	class:IdentTable	access:public	signature:()
IdentTable::__table	ident_table_class.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:IdentTable	typeref:typename:std::map<Ident,Type>	access:private
IdentTable::at	ident_table_class.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
IdentTable::at	ident_table_class.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
IdentTable::contains	ident_table_class.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
IdentTable::gen_getter_by_con_ref	ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:IdentTable	access:public	signature:(table)
IdentTable::insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
IdentTable::insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
IfChainStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext::IfChainStatementContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::IfChainStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
IfChainStatementContext	gen_src/GrammarParser.h	/^    IfChainStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IfChainStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IfChainStatementContext	gen_src/GrammarParser.h	/^  class  IfChainStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
IfStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext::IfStatementContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::IfStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
IfStatementContext	gen_src/GrammarParser.h	/^    IfStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IfStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IfStatementContext	gen_src/GrammarParser.h	/^  class  IfStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
Initializer	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:GrammarLexer::Initializer	signature:()
Initializer	gen_src/GrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:GrammarLexer::Initializer	access:public	signature:()
Initializer	gen_src/GrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:GrammarLexer	access:private
Initializer	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer::Initializer() {$/;"	kind:f	class:GrammarParser::Initializer	signature:()
Initializer	gen_src/GrammarParser.h	/^    Initializer();$/;"	kind:p	struct:GrammarParser::Initializer	access:public	signature:()
Initializer	gen_src/GrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:GrammarParser	access:private
InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
LenExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext::LenExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LenExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
LenExprContext	gen_src/GrammarParser.h	/^    LenExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LenExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
LenExprContext	gen_src/GrammarParser.h	/^  class  LenExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
LexWhitespace	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
LexWhitespace	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
Mul	vm_code_class.hpp	/^	Mul,$/;"	kind:e	enum:VmInstrBinOp	access:public
NonSizedArrayIdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext::NonSizedArrayIdentNameContext(ParserRuleContext *p/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
NonSizedArrayIdentNameContext	gen_src/GrammarParser.h	/^    NonSizedArrayIdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
NonSizedArrayIdentNameContext	gen_src/GrammarParser.h	/^  class  NonSizedArrayIdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
NumExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/GrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/GrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
OneLevelTable	scoped_ident_table_class.hpp	/^	typedef IdentTable<Type> OneLevelTable;$/;"	kind:t	class:ScopedIdentTable	typeref:typename:IdentTable<Type>	access:public
PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
ProgramContext	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/GrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/GrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
RuleAssignment	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleBuiltinTypename	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleDoWhileStatement	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleElseStatements	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExpr	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprAddSub	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprCompare	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprLogical	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprMulDivModEtc	gen_src/GrammarParser.h	/^    RuleExprCompare = 18, RuleExprAddSub = 19, RuleExprMulDivModEtc = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleFuncArgExpr	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleFuncCall	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleFuncDecl	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleFuncVarDecl	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIdentDecl	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIdentExpr	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIdentName	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIfChainStatement	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIfStatement	gen_src/GrammarParser.h	/^    RuleIfStatement = 11, RuleIfChainStatement = 12, RuleElseStatements = 13, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleLenExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleNonSizedArrayIdentName	gen_src/GrammarParser.h	/^    RuleBuiltinTypename = 8, RuleNonSizedArrayIdentName = 9, RuleAssignment = 10, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleNumExpr	gen_src/GrammarParser.h	/^    RuleIdentExpr = 21, RuleIdentDecl = 22, RuleIdentName = 23, RuleNumExpr = 24, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleProgram	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleFuncDecl = 1, RuleFuncCall = 2, RuleFuncArgExpr = 3, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleSizeofExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleStatement	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleStatements	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleSubscriptConst	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleSubscriptExpr	gen_src/GrammarParser.h	/^    RuleLenExpr = 25, RuleSizeofExpr = 26, RuleSubscriptExpr = 27, RuleSubscriptConst = 28$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleVarDecl	gen_src/GrammarParser.h	/^    RuleStatements = 4, RuleStatement = 5, RuleVarDecl = 6, RuleFuncVarDecl = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleWhileStatement	gen_src/GrammarParser.h	/^    RuleWhileStatement = 14, RuleDoWhileStatement = 15, RuleExpr = 16, RuleExprLogical = 17, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
S16	vm_code_class.hpp	/^	S16,$/;"	kind:e	enum:VmInstrLdStOp	access:public
S32	vm_code_class.hpp	/^	S32,$/;"	kind:e	enum:VmInstrLdStOp	access:public
S64	symbol_table_classes.hpp	/^	S64,$/;"	kind:e	enum:BuiltinTypename	access:public
S8	vm_code_class.hpp	/^	S8$/;"	kind:e	enum:VmInstrLdStOp	access:public
SDiv	vm_code_class.hpp	/^	SDiv,$/;"	kind:e	enum:VmInstrBinOp	access:public
SMod	vm_code_class.hpp	/^	SMod,$/;"	kind:e	enum:VmInstrBinOp	access:public
ScalarVarName	symbol_table_classes.hpp	/^	ScalarVarName,$/;"	kind:e	enum:SymType	access:public
ScopedIdentTable	scoped_ident_table_class.hpp	/^	inline ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
ScopedIdentTable	scoped_ident_table_class.hpp	/^class ScopedIdentTable$/;"	kind:c
ScopedIdentTable::OneLevelTable	scoped_ident_table_class.hpp	/^	typedef IdentTable<Type> OneLevelTable;$/;"	kind:t	class:ScopedIdentTable	typeref:typename:IdentTable<Type>	access:public
ScopedIdentTable::ScopedIdentTable	scoped_ident_table_class.hpp	/^	inline ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
ScopedIdentTable::__scope_num	scoped_ident_table_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:protected
ScopedIdentTable::__table	scoped_ident_table_class.hpp	/^	std::vector<OneLevelTable> __table;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:std::vector<OneLevelTable>	access:protected
ScopedIdentTable::at	scoped_ident_table_class.hpp	/^	inline auto& at(size_t table_index)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:auto &	access:public	signature:(size_t table_index)
ScopedIdentTable::at	scoped_ident_table_class.hpp	/^	inline const auto& at(size_t table_index) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:const auto &	access:public	signature:(size_t table_index) const
ScopedIdentTable::builtin_scope_level	scoped_ident_table_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
ScopedIdentTable::find	scoped_ident_table_class.hpp	/^	Type* find(Ident some_name) __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
ScopedIdentTable::find_in_this_level	scoped_ident_table_class.hpp	/^	inline Type* find_in_this_level(Ident some_name)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
ScopedIdentTable::gen_getter_by_con_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
ScopedIdentTable::gen_getter_by_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
ScopedIdentTable::gen_getter_by_val	scoped_ident_table_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(scope_num)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, $/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,const Type & to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,Type && to_insert_or_assign)
ScopedIdentTable::mkscope	scoped_ident_table_class.hpp	/^	void mkscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
ScopedIdentTable::name_is_builtin	scoped_ident_table_class.hpp	/^	bool name_is_builtin(Ident some_name) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
ScopedIdentTable::not_found_level	scoped_ident_table_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
ScopedIdentTable::rmscope	scoped_ident_table_class.hpp	/^	void rmscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
ScopedIdentTable::scope_lev	scoped_ident_table_class.hpp	/^	inline s64 scope_lev() const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:s64	access:public	signature:() const
ScopedIdentTable::~ScopedIdentTable	scoped_ident_table_class.hpp	/^	virtual ~ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
SizeofExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext::SizeofExprContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::SizeofExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
SizeofExprContext	gen_src/GrammarParser.h	/^    SizeofExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SizeofExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
SizeofExprContext	gen_src/GrammarParser.h	/^  class  SizeofExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
StatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext::StatementContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::StatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
StatementContext	gen_src/GrammarParser.h	/^    StatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::StatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
StatementContext	gen_src/GrammarParser.h	/^  class  StatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
StatementsContext	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext::StatementsContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::StatementsContext	signature:(ParserRuleContext * parent,size_t invokingState)
StatementsContext	gen_src/GrammarParser.h	/^    StatementsContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::StatementsContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
StatementsContext	gen_src/GrammarParser.h	/^  class  StatementsContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrSplitHelperBase && to_move)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrSplitHelperBase & to_copy)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:()
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrType && s_to_split)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrType & s_to_split)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperBase$/;"	kind:c	namespace:liborangepower::strings
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrSplitHelperNoEscapes && to_move)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:()
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrType && s_to_split)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrType & s_to_split)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperNoEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrSplitHelperWithEscapes && to_move)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:()
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrType && s_to_split)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrType & s_to_split)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperWithEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
StrType	liborangepower_src/str_split_helper_classes.hpp	/^	typedef SomeStrType StrType;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:SomeStrType	access:public
Sub	vm_code_class.hpp	/^	Sub,$/;"	kind:e	enum:VmInstrBinOp	access:public
SubscriptConstContext	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext::SubscriptConstContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::SubscriptConstContext	signature:(ParserRuleContext * parent,size_t invokingState)
SubscriptConstContext	gen_src/GrammarParser.h	/^    SubscriptConstContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SubscriptConstContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
SubscriptConstContext	gen_src/GrammarParser.h	/^  class  SubscriptConstContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
SubscriptExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext::SubscriptExprContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::SubscriptExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
SubscriptExprContext	gen_src/GrammarParser.h	/^    SubscriptExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::SubscriptExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
SubscriptExprContext	gen_src/GrammarParser.h	/^  class  SubscriptExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
SymType	symbol_table_classes.hpp	/^enum class SymType : int$/;"	kind:g	typeref:typename:int
Symbol	symbol_table_classes.hpp	/^	inline Symbol()$/;"	kind:f	class:Symbol	access:public	signature:()
Symbol	symbol_table_classes.hpp	/^	inline Symbol(Ident s_name, SymType s_type,$/;"	kind:f	class:Symbol	access:public	signature:(Ident s_name,SymType s_type,BuiltinTypename s_var_type,size_t s_size)
Symbol	symbol_table_classes.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	access:public	signature:(Symbol && to_move)
Symbol	symbol_table_classes.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	access:public	signature:(const Symbol & to_copy)
Symbol	symbol_table_classes.hpp	/^class Symbol$/;"	kind:c
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol()$/;"	kind:f	class:Symbol	access:public	signature:()
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(Ident s_name, SymType s_type,$/;"	kind:f	class:Symbol	access:public	signature:(Ident s_name,SymType s_type,BuiltinTypename s_var_type,size_t s_size)
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	access:public	signature:(Symbol && to_move)
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	access:public	signature:(const Symbol & to_copy)
Symbol::__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Symbol	typeref:typename:Ident	access:private
Symbol::__size	symbol_table_classes.hpp	/^	size_t __size;$/;"	kind:m	class:Symbol	typeref:typename:size_t	access:private
Symbol::__type	symbol_table_classes.hpp	/^	SymType __type;$/;"	kind:m	class:Symbol	typeref:typename:SymType	access:private
Symbol::__var_type	symbol_table_classes.hpp	/^	BuiltinTypename __var_type;$/;"	kind:m	class:Symbol	typeref:typename:BuiltinTypename	access:private
Symbol::gen_getter_and_setter_by_con_ref	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
Symbol::gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(size);$/;"	kind:p	class:Symbol	access:public	signature:(size)
Symbol::gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(type);$/;"	kind:p	class:Symbol	access:public	signature:(type)
Symbol::gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(var_type);$/;"	kind:p	class:Symbol	access:public	signature:(var_type)
Symbol::gen_setter_by_rval_ref	symbol_table_classes.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
Symbol::operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
Symbol::operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
SymbolTable	symbol_table_classes.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable	symbol_table_classes.hpp	/^	SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
SymbolTable	symbol_table_classes.hpp	/^class SymbolTable : public ScopedIdentTable<Symbol>$/;"	kind:c	inherits:ScopedIdentTable<Symbol>
SymbolTable::SymbolTable	symbol_table_classes.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable::SymbolTable	symbol_table_classes.hpp	/^	SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
SymbolTable::~SymbolTable	symbol_table_classes.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable::~SymbolTable	symbol_table_classes.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
T__0	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__0	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__1	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__1	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__10	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__10	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__11	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__11	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__2	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__2	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__3	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__3	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__4	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__4	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__5	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__5	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__6	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__6	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__7	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__7	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__8	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__8	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__9	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__9	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokDecNum	gen_src/GrammarLexer.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokDecNum	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokDecNum	gen_src/GrammarParser.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokDecNum	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokDo	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokDo	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::DoWhileStatementContext::TokDo() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokDo	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokDo	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDo();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokElse	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokElse	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfChainStatementContext::TokElse() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokElse	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokElse	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokElse();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIdent	gen_src/GrammarLexer.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokIdent	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
TokIdent	gen_src/GrammarParser.h	/^    TokDecNum = 24, TokIdent = 25$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokIdent	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIf	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokIf	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfChainStatementContext::TokIf() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokIf	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IfStatementContext::TokIf() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokIf	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, TokIf = 13, TokElse = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokIf	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIf();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIf	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIf();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpAddSub	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpAddSub	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprCompareContext::TokOpAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpAddSub	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpAddSub	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpBitwise	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpBitwise	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpBitwise	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpBitwise	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpCompare	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpCompare	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpCompare	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpCompare	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpLogical	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpLogical	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpLogical	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpLogical	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpMulDivMod	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpMulDivMod	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpMulDivMod	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpMulDivMod	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpUnary	gen_src/GrammarLexer.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpUnary	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprMulDivModEtcContext::TokOpUnary() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpUnary	gen_src/GrammarParser.h	/^    TokOpAddSub = 20, TokOpMulDivMod = 21, TokOpBitwise = 22, TokOpUnary = 23, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpUnary	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpUnary();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokWhile	gen_src/GrammarLexer.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokWhile	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::DoWhileStatementContext::TokWhile() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokWhile	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::WhileStatementContext::TokWhile() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:tree::TerminalNode *	signature:()
TokWhile	gen_src/GrammarParser.h	/^    TokWhile = 15, TokDo = 16, LexWhitespace = 17, TokOpLogical = 18, TokOpCompare = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokWhile	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokWhile();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokWhile	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokWhile();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
U16	vm_code_class.hpp	/^	U16,$/;"	kind:e	enum:VmInstrLdStOp	access:public
U32	vm_code_class.hpp	/^	U32,$/;"	kind:e	enum:VmInstrLdStOp	access:public
U8	vm_code_class.hpp	/^	U8,$/;"	kind:e	enum:VmInstrLdStOp	access:public
UDiv	vm_code_class.hpp	/^	UDiv,$/;"	kind:e	enum:VmInstrBinOp	access:public
UMod	vm_code_class.hpp	/^	UMod,$/;"	kind:e	enum:VmInstrBinOp	access:public
VarDeclContext	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext::VarDeclContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::VarDeclContext	signature:(ParserRuleContext * parent,size_t invokingState)
VarDeclContext	gen_src/GrammarParser.h	/^    VarDeclContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::VarDeclContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
VarDeclContext	gen_src/GrammarParser.h	/^  class  VarDeclContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
VmCode	vm_code_class.hpp	/^class VmCode$/;"	kind:c
VmCode::__anon799b73ed010a	vm_code_class.hpp	/^	{$/;"	kind:u	class:VmCode	access:public
VmCode::__anon799b73ed010a::bin_op	vm_code_class.hpp	/^		VmInstrBinOp bin_op;$/;"	kind:m	union:VmCode::__anon799b73ed010a	typeref:typename:VmInstrBinOp	access:public
VmCode::__anon799b73ed010a::ldst_op	vm_code_class.hpp	/^		VmInstrLdStOp ldst_op;$/;"	kind:m	union:VmCode::__anon799b73ed010a	typeref:typename:VmInstrLdStOp	access:public
VmCode::immediate	vm_code_class.hpp	/^	s64 immediate;$/;"	kind:m	class:VmCode	typeref:typename:s64	access:public
VmCode::next	vm_code_class.hpp	/^	VmCode * next, * prev;$/;"	kind:m	class:VmCode	typeref:typename:VmCode *	access:public
VmCode::op	vm_code_class.hpp	/^	VmInstrOp op;$/;"	kind:m	class:VmCode	typeref:typename:VmInstrOp	access:public
VmCode::prev	vm_code_class.hpp	/^	VmCode * next, * prev;$/;"	kind:m	class:VmCode	typeref:typename:VmCode **	access:public
VmInstrBinOp	vm_code_class.hpp	/^enum class VmInstrBinOp : u16$/;"	kind:g	typeref:typename:u16
VmInstrLdStOp	vm_code_class.hpp	/^enum class VmInstrLdStOp : u16$/;"	kind:g	typeref:typename:u16
VmInstrOp	vm_code_class.hpp	/^enum class VmInstrOp : u16$/;"	kind:g	typeref:typename:u16
WhileStatementContext	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext::WhileStatementContext(ParserRuleContext *parent, size_t in/;"	kind:f	class:GrammarParser::WhileStatementContext	signature:(ParserRuleContext * parent,size_t invokingState)
WhileStatementContext	gen_src/GrammarParser.h	/^    WhileStatementContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::WhileStatementContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
WhileStatementContext	gen_src/GrammarParser.h	/^  class  WhileStatementContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
__anon799b73ed010a	vm_code_class.hpp	/^	{$/;"	kind:u	class:VmCode	access:public
__anonc774599a0102	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::program	file:
__anonc774599a0202	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::funcDecl	file:
__anonc774599a0302	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::funcCall	file:
__anonc774599a0402	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::funcArgExpr	file:
__anonc774599a0502	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::statements	file:
__anonc774599a0602	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::statement	file:
__anonc774599a0702	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::varDecl	file:
__anonc774599a0802	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::funcVarDecl	file:
__anonc774599a0902	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::builtinTypename	file:
__anonc774599a0a02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::nonSizedArrayIdentName	file:
__anonc774599a0b02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::assignment	file:
__anonc774599a0c02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::ifStatement	file:
__anonc774599a0d02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::ifChainStatement	file:
__anonc774599a0e02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::elseStatements	file:
__anonc774599a0f02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::whileStatement	file:
__anonc774599a1002	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::doWhileStatement	file:
__anonc774599a1102	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::expr	file:
__anonc774599a1202	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprLogical	file:
__anonc774599a1302	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprCompare	file:
__anonc774599a1402	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprAddSub	file:
__anonc774599a1502	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprMulDivModEtc	file:
__anonc774599a1602	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::identExpr	file:
__anonc774599a1702	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::identDecl	file:
__anonc774599a1802	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::identName	file:
__anonc774599a1902	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::numExpr	file:
__anonc774599a1a02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::lenExpr	file:
__anonc774599a1b02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::sizeofExpr	file:
__anonc774599a1c02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::subscriptExpr	file:
__anonc774599a1d02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::subscriptConst	file:
__anoncd6878f20103	gen_src/GrammarLexer.h	/^  enum {$/;"	kind:g	class:GrammarLexer	access:public
__anone389622d0102	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::parse_json	typeref:typename:bool	file:	signature:(Json::CharReaderBuilder& actual_rbuilder)
__anone389622d0202	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::write_json	file:	signature:(Json::StreamWriterBuilder& some_wbuilder)
__anone389622d0302	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0402	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0502	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0602	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anonea8e543f0103	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
__anonea8e543f0203	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
__code	symbol_table_classes.hpp	/^	VmCode __code;$/;"	kind:m	class:Function	typeref:typename:VmCode	access:private
__curr_func	compiler_class.hpp	/^	Function* __curr_func;$/;"	kind:m	class:Compiler	typeref:typename:Function *	access:protected
__func_tbl	compiler_class.hpp	/^	FunctionTable __func_tbl;$/;"	kind:m	class:Compiler	typeref:typename:FunctionTable	access:protected
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
__int_pool	allocation_stuff.cpp	/^	static std::map<int, std::unique_ptr<int>> __int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>	file:	access:private
__int_pool	allocation_stuff.cpp	/^std::map<int, std::unique_ptr<int>> DupStuff::__int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>
__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Function	typeref:typename:Ident	access:private
__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Symbol	typeref:typename:Ident	access:private
__num_stack	compiler_class.hpp	/^	std::stack<s64> __num_stack;$/;"	kind:m	class:Compiler	typeref:typename:std::stack<s64>	access:protected
__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__scope_num	scoped_ident_table_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:protected
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
__size	symbol_table_classes.hpp	/^	size_t __size;$/;"	kind:m	class:Symbol	typeref:typename:size_t	access:private
__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
__str_pool	allocation_stuff.cpp	/^		__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
__str_stack	compiler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:Compiler	typeref:typename:std::stack<std::string * >	access:protected
__sym_tbl	symbol_table_classes.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:Function	typeref:typename:SymbolTable	access:private
__table	ident_table_class.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:IdentTable	typeref:typename:std::map<Ident,Type>	access:private
__table	scoped_ident_table_class.hpp	/^	std::vector<OneLevelTable> __table;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:std::vector<OneLevelTable>	access:protected
__type	symbol_table_classes.hpp	/^	SymType __type;$/;"	kind:m	class:Symbol	typeref:typename:SymType	access:private
__var_type	symbol_table_classes.hpp	/^	BuiltinTypename __var_type;$/;"	kind:m	class:Symbol	typeref:typename:BuiltinTypename	access:private
__vm_code_pool	allocation_stuff.cpp	/^	static std::vector<std::unique_ptr<VmCode>> __vm_code_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::vector<std::unique_ptr<VmCode>>	file:	access:private
__vm_code_pool	allocation_stuff.cpp	/^std::vector<std::unique_ptr<VmCode>> DupStuff::__vm_code_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::vector<std::unique_ptr<VmCode>>
_align2	liborangepower_src/misc_defines.hpp	/^#define _align2 /;"	kind:d
_align4	liborangepower_src/misc_defines.hpp	/^#define _align4 /;"	kind:d
_atn	gen_src/GrammarLexer.cpp	/^atn::ATN GrammarLexer::_atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::ATN
_atn	gen_src/GrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
_atn	gen_src/GrammarParser.cpp	/^atn::ATN GrammarParser::_atn;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::ATN
_atn	gen_src/GrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::ATN	access:private
_channelNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_channelNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_channelNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_decisionToDFA	gen_src/GrammarLexer.cpp	/^std::vector<dfa::DFA> GrammarLexer::_decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/GrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_decisionToDFA	gen_src/GrammarParser.cpp	/^std::vector<dfa::DFA> GrammarParser::_decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/GrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_init	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer GrammarLexer::_init;$/;"	kind:m	class:GrammarLexer	typeref:typename:GrammarLexer::Initializer
_init	gen_src/GrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarLexer	typeref:typename:Initializer	access:private
_init	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer GrammarParser::_init;$/;"	kind:m	class:GrammarParser	typeref:typename:GrammarParser::Initializer
_init	gen_src/GrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarParser	typeref:typename:Initializer	access:private
_literalNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_literalNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_literalNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_literalNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_literalNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_literalNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_modeNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_modeNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_modeNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_ruleNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_ruleNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_serializedATN	gen_src/GrammarLexer.cpp	/^std::vector<uint16_t> GrammarLexer::_serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/GrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
_serializedATN	gen_src/GrammarParser.cpp	/^std::vector<uint16_t> GrammarParser::_serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/GrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>	access:private
_sharedContextCache	gen_src/GrammarLexer.cpp	/^atn::PredictionContextCache GrammarLexer::_sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/GrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_sharedContextCache	gen_src/GrammarParser.cpp	/^atn::PredictionContextCache GrammarParser::_sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/GrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_symbolicNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_symbolicNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_symbolicNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_symbolicNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_vocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary GrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/GrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
_vocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary GrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/GrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::AssignmentContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::BuiltinTypenameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::BuiltinTypenameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::DoWhileStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ElseStatementsContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncArgExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncCallContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::FuncVarDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IfChainStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IfStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LenExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NonSizedArrayIdentNameContext::accept(tree::ParseTreeVisitor *visit/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SizeofExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::StatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::StatementsContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SubscriptConstContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::SubscriptExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::VarDeclContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::WhileStatementContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
alignas_regular	liborangepower_src/misc_defines.hpp	/^#define alignas_regular /;"	kind:d
allocation_stuff_hpp	allocation_stuff.hpp	/^#define allocation_stuff_hpp$/;"	kind:d
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
append_vm_code	allocation_stuff.cpp	/^	friend VmCode* append_vm_code(Function& func);$/;"	kind:p	class:DupStuff	typeref:typename:VmCode *	file:	access:private	signature:(Function & func)
append_vm_code	allocation_stuff.cpp	/^VmCode* append_vm_code(Function& func)$/;"	kind:f	typeref:typename:VmCode *	signature:(Function & func)
append_vm_code	allocation_stuff.hpp	/^VmCode* append_vm_code(Function& func);$/;"	kind:p	typeref:typename:VmCode *	signature:(Function & func)
arg	vm_code_class.hpp	/^	arg,$/;"	kind:e	enum:VmInstrOp	access:public
argx	vm_code_class.hpp	/^	argx,$/;"	kind:e	enum:VmInstrOp	access:public
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
asm_comment	liborangepower_src/misc_defines.hpp	/^#define asm_comment(/;"	kind:d	signature:(stuff)
assignment	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext* GrammarParser::StatementContext::assignment() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::AssignmentContext *	signature:()
assignment	gen_src/GrammarParser.cpp	/^GrammarParser::AssignmentContext* GrammarParser::assignment() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::AssignmentContext *	signature:()
assignment	gen_src/GrammarParser.h	/^    AssignmentContext *assignment();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:AssignmentContext *	access:public	signature:()
assignment	gen_src/GrammarParser.h	/^  AssignmentContext* assignment();$/;"	kind:p	class:GrammarParser	typeref:typename:AssignmentContext *	access:public	signature:()
at	ident_table_class.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
at	ident_table_class.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	scoped_ident_table_class.hpp	/^	inline auto& at(size_t table_index)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:auto &	access:public	signature:(size_t table_index)
at	scoped_ident_table_class.hpp	/^	inline const auto& at(size_t table_index) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:const auto &	access:public	signature:(size_t table_index) const
back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
beq	vm_code_class.hpp	/^	beq,$/;"	kind:e	enum:VmInstrOp	access:public
bin_op	vm_code_class.hpp	/^		VmInstrBinOp bin_op;$/;"	kind:m	union:VmCode::__anon799b73ed010a	typeref:typename:VmInstrBinOp	access:public
binop	vm_code_class.hpp	/^	binop,$/;"	kind:e	enum:VmInstrOp	access:public
bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
bne	vm_code_class.hpp	/^	bne,$/;"	kind:e	enum:VmInstrOp	access:public
bprange_to_mask	liborangepower_src/misc_defines.hpp	/^#define bprange_to_mask(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
bprange_to_shifted_mask	liborangepower_src/misc_defines.hpp	/^#define bprange_to_shifted_mask(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::FuncVarDeclContext::builtinTypename() {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::VarDeclContext::builtinTypename() {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
builtinTypename	gen_src/GrammarParser.cpp	/^GrammarParser::BuiltinTypenameContext* GrammarParser::builtinTypename() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::BuiltinTypenameContext *	signature:()
builtinTypename	gen_src/GrammarParser.h	/^    BuiltinTypenameContext *builtinTypename();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
builtinTypename	gen_src/GrammarParser.h	/^    BuiltinTypenameContext *builtinTypename();$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
builtinTypename	gen_src/GrammarParser.h	/^  BuiltinTypenameContext* builtinTypename();$/;"	kind:p	class:GrammarParser	typeref:typename:BuiltinTypenameContext *	access:public	signature:()
builtin_scope_level	scoped_ident_table_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
call	vm_code_class.hpp	/^	call,$/;"	kind:e	enum:VmInstrOp	access:public
clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:p	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
compiler_class_hpp	compiler_class.hpp	/^#define compiler_class_hpp$/;"	kind:d
constant	vm_code_class.hpp	/^	constant,$/;"	kind:e	enum:VmInstrOp	access:public
containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
contains	ident_table_class.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
cstm_intdup	allocation_stuff.cpp	/^	friend int* cstm_intdup(int to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:int *	file:	access:private	signature:(int to_dup)
cstm_intdup	allocation_stuff.cpp	/^int* cstm_intdup(int to_dup)$/;"	kind:f	typeref:typename:int *	signature:(int to_dup)
cstm_intdup	allocation_stuff.hpp	/^int* cstm_intdup(int to_dup);$/;"	kind:p	typeref:typename:int *	signature:(int to_dup)
cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.cpp	/^std::string* cstm_strdup(const std::string& to_dup)$/;"	kind:f	typeref:typename:std::string *	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.hpp	/^std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	typeref:typename:std::string *	signature:(const std::string & to_dup)
curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
curr_func	compiler_class.hpp	/^	inline auto& curr_func()$/;"	kind:f	class:Compiler	typeref:typename:auto &	access:protected	signature:()
custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
disp_char	vm_code_class.hpp	/^	disp_char,$/;"	kind:e	enum:VmInstrOp	access:public
disp_num	vm_code_class.hpp	/^	disp_num,$/;"	kind:e	enum:VmInstrOp	access:public
disp_num_unsigned	vm_code_class.hpp	/^	disp_num_unsigned,$/;"	kind:e	enum:VmInstrOp	access:public
disp_str	vm_code_class.hpp	/^	disp_str,$/;"	kind:e	enum:VmInstrOp	access:public
doWhileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext* GrammarParser::StatementContext::doWhileStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::DoWhileStatementContext *	signature:()
doWhileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::DoWhileStatementContext* GrammarParser::doWhileStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::DoWhileStatementContext *	signature:()
doWhileStatement	gen_src/GrammarParser.h	/^    DoWhileStatementContext *doWhileStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:DoWhileStatementContext *	access:public	signature:()
doWhileStatement	gen_src/GrammarParser.h	/^  DoWhileStatementContext* doWhileStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:DoWhileStatementContext *	access:public	signature:()
dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
elseStatements	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext* GrammarParser::IfChainStatementContext::elseStatements() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::ElseStatementsContext *	signature:()
elseStatements	gen_src/GrammarParser.cpp	/^GrammarParser::ElseStatementsContext* GrammarParser::elseStatements() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ElseStatementsContext *	signature:()
elseStatements	gen_src/GrammarParser.h	/^    ElseStatementsContext *elseStatements();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:ElseStatementsContext *	access:public	signature:()
elseStatements	gen_src/GrammarParser.h	/^  ElseStatementsContext* elseStatements();$/;"	kind:p	class:GrammarParser	typeref:typename:ElseStatementsContext *	access:public	signature:()
end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::AssignmentContext::expr() {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::DoWhileStatementContext::expr() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprContext::expr() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::IfChainStatementContext::expr() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::IfStatementContext::expr() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::StatementContext::expr() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::SubscriptExprContext::expr() {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::WhileStatementContext::expr() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:(int precedence)
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprAddSubContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprCompareContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:(int precedence)
exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
exprAddSubSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprAddSubSempred	gen_src/GrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprCompareContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprLogicalContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:(int precedence)
exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
exprCompareSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprCompareSempred	gen_src/GrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprLogicalContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:(int precedence)
exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
exprLogicalSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprLogicalSempred	gen_src/GrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::ExprAddSubContext::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprMulDivModEtc	gen_src/GrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
exprSempred	gen_src/GrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
find	scoped_ident_table_class.hpp	/^	Type* find(Ident some_name) __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
find_in_this_level	scoped_ident_table_class.hpp	/^	inline Type* find_in_this_level(Ident some_name)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:size_t	access:public	signature:(size_t & i)
find_start_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	size_t find_start_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
funcArgExpr	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext* GrammarParser::FuncCallContext::funcArgExpr(size_t i) {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:GrammarParser::FuncArgExprContext *	signature:(size_t i)
funcArgExpr	gen_src/GrammarParser.cpp	/^GrammarParser::FuncArgExprContext* GrammarParser::funcArgExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncArgExprContext *	signature:()
funcArgExpr	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncArgExprContext *> GrammarParser::FuncCallContext::funcArgExpr() {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:std::vector<GrammarParser::FuncArgExprContext * >	signature:()
funcArgExpr	gen_src/GrammarParser.h	/^    FuncArgExprContext* funcArgExpr(size_t i);$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:FuncArgExprContext *	access:public	signature:(size_t i)
funcArgExpr	gen_src/GrammarParser.h	/^    std::vector<FuncArgExprContext *> funcArgExpr();$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:std::vector<FuncArgExprContext * >	access:public	signature:()
funcArgExpr	gen_src/GrammarParser.h	/^  FuncArgExprContext* funcArgExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncArgExprContext *	access:public	signature:()
funcCall	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext* GrammarParser::ExprMulDivModEtcContext::funcCall() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::FuncCallContext *	signature:()
funcCall	gen_src/GrammarParser.cpp	/^GrammarParser::FuncCallContext* GrammarParser::funcCall() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncCallContext *	signature:()
funcCall	gen_src/GrammarParser.h	/^    FuncCallContext *funcCall();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:FuncCallContext *	access:public	signature:()
funcCall	gen_src/GrammarParser.h	/^  FuncCallContext* funcCall();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncCallContext *	access:public	signature:()
funcDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext* GrammarParser::ProgramContext::funcDecl(size_t i) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:GrammarParser::FuncDeclContext *	signature:(size_t i)
funcDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncDeclContext* GrammarParser::funcDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncDeclContext *	signature:()
funcDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncDeclContext *> GrammarParser::ProgramContext::funcDecl() {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:std::vector<GrammarParser::FuncDeclContext * >	signature:()
funcDecl	gen_src/GrammarParser.h	/^    FuncDeclContext* funcDecl(size_t i);$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:FuncDeclContext *	access:public	signature:(size_t i)
funcDecl	gen_src/GrammarParser.h	/^    std::vector<FuncDeclContext *> funcDecl();$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:std::vector<FuncDeclContext * >	access:public	signature:()
funcDecl	gen_src/GrammarParser.h	/^  FuncDeclContext* funcDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncDeclContext *	access:public	signature:()
funcVarDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext* GrammarParser::FuncDeclContext::funcVarDecl(size_t i) {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::FuncVarDeclContext *	signature:(size_t i)
funcVarDecl	gen_src/GrammarParser.cpp	/^GrammarParser::FuncVarDeclContext* GrammarParser::funcVarDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::FuncVarDeclContext *	signature:()
funcVarDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::FuncVarDeclContext *> GrammarParser::FuncDeclContext::funcVarDecl() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:std::vector<GrammarParser::FuncVarDeclContext * >	signature:()
funcVarDecl	gen_src/GrammarParser.h	/^    FuncVarDeclContext* funcVarDecl(size_t i);$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:FuncVarDeclContext *	access:public	signature:(size_t i)
funcVarDecl	gen_src/GrammarParser.h	/^    std::vector<FuncVarDeclContext *> funcVarDecl();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:std::vector<FuncVarDeclContext * >	access:public	signature:()
funcVarDecl	gen_src/GrammarParser.h	/^  FuncVarDeclContext* funcVarDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:FuncVarDeclContext *	access:public	signature:()
gen_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_getter_and_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_con_ref(/;"	kind:d	signature:(stuff)
gen_getter_and_setter_by_con_ref	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
gen_getter_and_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_val(/;"	kind:d	signature:(stuff)
gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(name);$/;"	kind:p	class:Function	access:public	signature:(name)
gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(size);$/;"	kind:p	class:Symbol	access:public	signature:(size)
gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(type);$/;"	kind:p	class:Symbol	access:public	signature:(type)
gen_getter_and_setter_by_val	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_val(var_type);$/;"	kind:p	class:Symbol	access:public	signature:(var_type)
gen_getter_by_con_ref	ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:IdentTable	access:public	signature:(table)
gen_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
gen_getter_by_con_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
gen_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
gen_getter_by_ref	symbol_table_classes.hpp	/^	gen_getter_by_ref(code);$/;"	kind:p	class:Function	access:public	signature:(code)
gen_getter_by_ref	symbol_table_classes.hpp	/^	gen_getter_by_ref(sym_tbl);$/;"	kind:p	class:Function	access:public	signature:(sym_tbl)
gen_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_val(/;"	kind:d	signature:(suffix)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
gen_getter_by_val	scoped_ident_table_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(scope_num)
gen_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	symbol_table_classes.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
gen_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_val(/;"	kind:d	signature:(suffix)
gen_static_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_val(/;"	kind:d	signature:(suffix)
gen_static_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_val(/;"	kind:d	signature:(suffix)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_float_pt_vec2_extra_class_contents(/;"	kind:d	signature:(specific_type)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_specific_vec2_class_contents(/;"	kind:d	signature:(specific_type)
getATN	gen_src/GrammarLexer.cpp	/^const atn::ATN& GrammarLexer::getATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const atn::ATN &	signature:() const
getATN	gen_src/GrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getATN	gen_src/GrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:GrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getChannelNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getChannelNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getChannelNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getGrammarFileName	gen_src/GrammarLexer.cpp	/^std::string GrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/GrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:std::string	access:public	signature:() const
getGrammarFileName	gen_src/GrammarParser.cpp	/^std::string GrammarParser::getGrammarFileName() const {$/;"	kind:f	class:GrammarParser	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/GrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:std::string	access:public	signature:() const
getModeNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getModeNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getModeNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::AssignmentContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::BuiltinTypenameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::BuiltinTypenameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::DoWhileStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ElseStatementsContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncArgExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncCallContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::FuncVarDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IfChainStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IfStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LenExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NonSizedArrayIdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SizeofExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::StatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::StatementsContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SubscriptConstContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::SubscriptExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::SubscriptExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::VarDeclContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::WhileStatementContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::BuiltinTypenameContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::SubscriptExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:size_t	access:public	signature:() const
getRuleNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getRuleNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleNames	gen_src/GrammarParser.cpp	/^const std::vector<std::string>& GrammarParser::getRuleNames() const {$/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getSerializedATN	gen_src/GrammarLexer.cpp	/^const std::vector<uint16_t> GrammarLexer::getSerializedATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
getSerializedATN	gen_src/GrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
getTokenNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getTokenNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getTokenNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getTokenNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getVocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary& GrammarLexer::getVocabulary() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/GrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
getVocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary& GrammarParser::getVocabulary() const {$/;"	kind:f	class:GrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/GrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType get_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_num	vm_code_class.hpp	/^	get_num,$/;"	kind:e	enum:VmInstrOp	access:public
get_pc	vm_code_class.hpp	/^	get_pc,$/;"	kind:e	enum:VmInstrOp	access:public
get_stdin_from_file	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_from_file()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
get_substr_size	liborangepower_src/str_split_helper_classes.hpp	/^	static inline size_t get_substr_size(const size_t start, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(const size_t start,const size_t pos_after_end)
get_top_num	compiler_class.hpp	/^	inline auto get_top_num()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
get_top_str	compiler_class.hpp	/^	inline auto get_top_str()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
identDecl	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext* GrammarParser::VarDeclContext::identDecl(size_t i) {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:GrammarParser::IdentDeclContext *	signature:(size_t i)
identDecl	gen_src/GrammarParser.cpp	/^GrammarParser::IdentDeclContext* GrammarParser::identDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentDeclContext *	signature:()
identDecl	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::IdentDeclContext *> GrammarParser::VarDeclContext::identDecl() {$/;"	kind:f	class:GrammarParser::VarDeclContext	typeref:typename:std::vector<GrammarParser::IdentDeclContext * >	signature:()
identDecl	gen_src/GrammarParser.h	/^    IdentDeclContext* identDecl(size_t i);$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:IdentDeclContext *	access:public	signature:(size_t i)
identDecl	gen_src/GrammarParser.h	/^    std::vector<IdentDeclContext *> identDecl();$/;"	kind:p	class:GrammarParser::VarDeclContext	typeref:typename:std::vector<IdentDeclContext * >	access:public	signature:()
identDecl	gen_src/GrammarParser.h	/^  IdentDeclContext* identDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentDeclContext *	access:public	signature:()
identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::AssignmentContext::identExpr() {$/;"	kind:f	class:GrammarParser::AssignmentContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::ExprMulDivModEtcContext::identExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::LenExprContext::identExpr() {$/;"	kind:f	class:GrammarParser::LenExprContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::SizeofExprContext::identExpr() {$/;"	kind:f	class:GrammarParser::SizeofExprContext	typeref:typename:GrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/GrammarParser.cpp	/^GrammarParser::IdentExprContext* GrammarParser::identExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentExprContext *	signature:()
identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::AssignmentContext	typeref:typename:IdentExprContext *	access:public	signature:()
identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentExprContext *	access:public	signature:()
identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::LenExprContext	typeref:typename:IdentExprContext *	access:public	signature:()
identExpr	gen_src/GrammarParser.h	/^    IdentExprContext *identExpr();$/;"	kind:p	class:GrammarParser::SizeofExprContext	typeref:typename:IdentExprContext *	access:public	signature:()
identExpr	gen_src/GrammarParser.h	/^  IdentExprContext* identExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentExprContext *	access:public	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncArgExprContext::identName() {$/;"	kind:f	class:GrammarParser::FuncArgExprContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncCallContext::identName() {$/;"	kind:f	class:GrammarParser::FuncCallContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncDeclContext::identName() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::FuncVarDeclContext::identName() {$/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::IdentDeclContext::identName() {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::IdentExprContext::identName() {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::NonSizedArrayIdentNameContext::identName() {$/;"	kind:f	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::identName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncArgExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncCallContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::NonSizedArrayIdentNameContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
ident_table_class_hpp	ident_table_class.hpp	/^#define ident_table_class_hpp$/;"	kind:d
ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::ElseStatementsContext::ifChainStatement()/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::StatementContext::ifChainStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
ifChainStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfChainStatementContext* GrammarParser::ifChainStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IfChainStatementContext *	signature:()
ifChainStatement	gen_src/GrammarParser.h	/^    IfChainStatementContext *ifChainStatement();$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:IfChainStatementContext *	access:public	signature:()
ifChainStatement	gen_src/GrammarParser.h	/^    IfChainStatementContext *ifChainStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:IfChainStatementContext *	access:public	signature:()
ifChainStatement	gen_src/GrammarParser.h	/^  IfChainStatementContext* ifChainStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:IfChainStatementContext *	access:public	signature:()
ifStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext* GrammarParser::StatementContext::ifStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::IfStatementContext *	signature:()
ifStatement	gen_src/GrammarParser.cpp	/^GrammarParser::IfStatementContext* GrammarParser::ifStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IfStatementContext *	signature:()
ifStatement	gen_src/GrammarParser.h	/^    IfStatementContext *ifStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:IfStatementContext *	access:public	signature:()
ifStatement	gen_src/GrammarParser.h	/^  IfStatementContext* ifStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:IfStatementContext *	access:public	signature:()
immediate	vm_code_class.hpp	/^	s64 immediate;$/;"	kind:m	class:VmCode	typeref:typename:s64	access:public
in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
increment_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline void increment_i(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(size_t & i)
index_in_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool index_in_to_split(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(StrType&& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(StrType && n_to_split)
init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(const StrType& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(const StrType & n_to_split)
init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, $/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,Type && to_insert_or_assign)
integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
internal_line_num	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_line_num = 1;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_num_consec_backslashes = 0;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_prev_i;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	StrType internal_to_split;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType	access:protected
json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
jump	vm_code_class.hpp	/^	jump,$/;"	kind:e	enum:VmInstrOp	access:public
ld	vm_code_class.hpp	/^	ld,$/;"	kind:e	enum:VmInstrOp	access:public
ldst_op	vm_code_class.hpp	/^		VmInstrLdStOp ldst_op;$/;"	kind:m	union:VmCode::__anon799b73ed010a	typeref:typename:VmInstrLdStOp	access:public
ldx	vm_code_class.hpp	/^	ldx,$/;"	kind:e	enum:VmInstrOp	access:public
lenExpr	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext* GrammarParser::ExprMulDivModEtcContext::lenExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::LenExprContext *	signature:()
lenExpr	gen_src/GrammarParser.cpp	/^GrammarParser::LenExprContext* GrammarParser::lenExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LenExprContext *	signature:()
lenExpr	gen_src/GrammarParser.h	/^    LenExprContext *lenExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:LenExprContext *	access:public	signature:()
lenExpr	gen_src/GrammarParser.h	/^  LenExprContext* lenExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:LenExprContext *	access:public	signature:()
liborangepower	liborangepower_src/array_2d_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/array_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/json_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/json_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/memwhatever_wrappers.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_input_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_output_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_types.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_utility_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/prev_curr_pair_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/quoted_str_converter_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/range_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/str_split_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/time_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/vec2_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower::bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
liborangepower::bitwise::clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
liborangepower::bitwise::get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
liborangepower::bitwise::get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
liborangepower::containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s___arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::Array2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::Array2dHelper::__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
liborangepower::containers::Array2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::Array2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::Array2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s___arr)
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayCsz2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCsz2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::ArrayCsz2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr)
liborangepower::containers::ArrayCsz2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
liborangepower::containers::ArrayCszHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCszHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayCszHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::PrevCurrPair::back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
liborangepower::containers::PrevCurrPair::curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::PrevCurrPair::has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::PrevCurrPair::prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
liborangepower::containers::Vec2::operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
liborangepower::containers::Vec2::operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
liborangepower::containers::Vec2::operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
liborangepower::containers::Vec2::operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
liborangepower::containers::Vec2::operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
liborangepower::containers::Vec2::x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
liborangepower::containers::Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
liborangepower::containers::Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
liborangepower::containers::Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
liborangepower::containers::Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
liborangepower::containers::Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
liborangepower::containers::Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
liborangepower::containers::Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
liborangepower::containers::Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
liborangepower::containers::custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
liborangepower::containers::operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
liborangepower::containers::vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::containers::vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
liborangepower::integer_types::s16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
liborangepower::integer_types::s32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
liborangepower::integer_types::s64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
liborangepower::integer_types::s8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
liborangepower::integer_types::u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
liborangepower::integer_types::u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
liborangepower::integer_types::u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
liborangepower::integer_types::u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
liborangepower::integer_types::uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
liborangepower::json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
liborangepower::json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
liborangepower::misc_input::get_stdin_from_file	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_from_file()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
liborangepower::misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:p	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
liborangepower::misc_util::custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
liborangepower::misc_util::init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
liborangepower::printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
liborangepower::printout_etc::AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::AnyPrintoutBackend::osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
liborangepower::printout_etc::osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
liborangepower::printout_etc::strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
liborangepower::range::clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
liborangepower::range::in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
liborangepower::range::in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
liborangepower::range::vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
liborangepower::strings	liborangepower_src/str_split_helper_classes.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
liborangepower::strings::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperBase$/;"	kind:c	namespace:liborangepower::strings
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrSplitHelperBase && to_move)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrSplitHelperBase & to_copy)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:()
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperBase::StrType	liborangepower_src/str_split_helper_classes.hpp	/^	typedef SomeStrType StrType;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:SomeStrType	access:public
liborangepower::strings::StrSplitHelperBase::find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::find_start_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	size_t find_start_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::get_substr_size	liborangepower_src/str_split_helper_classes.hpp	/^	static inline size_t get_substr_size(const size_t start, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(const size_t start,const size_t pos_after_end)
liborangepower::strings::StrSplitHelperBase::increment_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline void increment_i(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::index_in_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool index_in_to_split(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(StrType&& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(StrType && n_to_split)
liborangepower::strings::StrSplitHelperBase::init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(const StrType& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(const StrType & n_to_split)
liborangepower::strings::StrSplitHelperBase::internal_line_num	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_line_num = 1;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_num_consec_backslashes = 0;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_prev_i;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	StrType internal_to_split;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType	access:protected
liborangepower::strings::StrSplitHelperBase::line_num	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t line_num() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::list_of_special_endpoint_pairs	liborangepower_src/str_split_helper_classes.hpp	/^		list_of_special_endpoint_pairs() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const std::vector<val_typ_pair> &	access:protected	signature:() const
liborangepower::strings::StrSplitHelperBase::make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline  auto make_vt_pair(value_type&& t, value_type&& u)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(value_type && t,value_type && u)
liborangepower::strings::StrSplitHelperBase::make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline auto make_vt_pair(const value_type& t, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(const value_type & t,const value_type & u)
liborangepower::strings::StrSplitHelperBase::num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t num_consec_backslashes() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(StrSplitHelperBase && to_move)
liborangepower::strings::StrSplitHelperBase::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(const StrSplitHelperBase & to_copy)
liborangepower::strings::StrSplitHelperBase::prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline const StrType& to_split() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const StrType &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_any_special_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	bool to_split_at_is_end_of_word(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_indiv_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual bool to_split_at_is_indiv_word(size_t i) const = 0;$/;"	kind:p	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef std::pair<value_type, value_type> val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:std::pair<value_type,value_type>	access:public
liborangepower::strings::StrSplitHelperBase::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename StrType::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType::value_type	access:public
liborangepower::strings::StrSplitHelperBase::vt_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_any_special_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_first_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_first_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_second_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_second_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperNoEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
liborangepower::strings::StrSplitHelperNoEscapes::Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrSplitHelperNoEscapes && to_move)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:()
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperNoEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(StrSplitHelperNoEscapes && to_move)
liborangepower::strings::StrSplitHelperNoEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
liborangepower::strings::StrSplitHelperNoEscapes::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:Base::value_type	access:public
liborangepower::strings::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperWithEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
liborangepower::strings::StrSplitHelperWithEscapes::Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrSplitHelperWithEscapes && to_move)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:()
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperWithEscapes::find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperWithEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(StrSplitHelperWithEscapes && to_move)
liborangepower::strings::StrSplitHelperWithEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
liborangepower::strings::StrSplitHelperWithEscapes::val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::val_typ_pair val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::val_typ_pair	access:public
liborangepower::strings::StrSplitHelperWithEscapes::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::value_type	access:public
liborangepower::time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
liborangepower::time::Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Prng::InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
liborangepower::time::Prng::Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
liborangepower::time::Prng::SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
liborangepower::time::Prng::__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
liborangepower::time::Prng::__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
liborangepower::time::Prng::get_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType get_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool use_cap=false)
liborangepower::time::Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Profiler::end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
liborangepower::time::Profiler::start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
liborangepower::time::put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower::time::put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower_array_2d_helper_classes_hpp	liborangepower_src/array_2d_helper_classes.hpp	/^#define liborangepower_array_2d_helper_classes_hpp$/;"	kind:d
liborangepower_array_helper_classes_hpp	liborangepower_src/array_helper_classes.hpp	/^#define liborangepower_array_helper_classes_hpp$/;"	kind:d
liborangepower_gen_getter_setter_defines_hpp	liborangepower_src/gen_getter_setter_defines.hpp	/^#define liborangepower_gen_getter_setter_defines_hpp$/;"	kind:d
liborangepower_json_stuff_hpp	liborangepower_src/json_stuff.hpp	/^#define liborangepower_json_stuff_hpp$/;"	kind:d
liborangepower_lexer_classes_hpp	liborangepower_src/quoted_str_converter_stuff.hpp	/^#define liborangepower_lexer_classes_hpp$/;"	kind:d
liborangepower_memwhatever_wrappers_hpp	liborangepower_src/memwhatever_wrappers.hpp	/^#define liborangepower_memwhatever_wrappers_hpp$/;"	kind:d
liborangepower_misc_bitwise_funcs_hpp	liborangepower_src/misc_bitwise_funcs.hpp	/^#define liborangepower_misc_bitwise_funcs_hpp$/;"	kind:d
liborangepower_misc_defines_hpp	liborangepower_src/misc_defines.hpp	/^#define liborangepower_misc_defines_hpp$/;"	kind:d
liborangepower_misc_includes_hpp	liborangepower_src/misc_includes.hpp	/^#define liborangepower_misc_includes_hpp$/;"	kind:d
liborangepower_misc_input_classes_hpp	liborangepower_src/misc_input_classes.hpp	/^#define liborangepower_misc_input_classes_hpp$/;"	kind:d
liborangepower_misc_output_classes_hpp	liborangepower_src/misc_output_classes.hpp	/^#define liborangepower_misc_output_classes_hpp$/;"	kind:d
liborangepower_misc_types_hpp	liborangepower_src/misc_types.hpp	/^#define liborangepower_misc_types_hpp$/;"	kind:d
liborangepower_misc_utility_funcs_hpp	liborangepower_src/misc_utility_funcs.hpp	/^#define liborangepower_misc_utility_funcs_hpp$/;"	kind:d
liborangepower_prev_curr_pair_class_hpp	liborangepower_src/prev_curr_pair_class.hpp	/^#define liborangepower_prev_curr_pair_class_hpp$/;"	kind:d
liborangepower_range_funcs_hpp	liborangepower_src/range_funcs.hpp	/^#define liborangepower_range_funcs_hpp$/;"	kind:d
liborangepower_str_split_helper_classes_hpp	liborangepower_src/str_split_helper_classes.hpp	/^#define liborangepower_str_split_helper_classes_hpp$/;"	kind:d
liborangepower_time_stuff_hpp	liborangepower_src/time_stuff.hpp	/^#define liborangepower_time_stuff_hpp$/;"	kind:d
liborangepower_vec2_classes_hpp	liborangepower_src/vec2_classes.hpp	/^#define liborangepower_vec2_classes_hpp$/;"	kind:d
line_num	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t line_num() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
list_of_special_endpoint_pairs	liborangepower_src/str_split_helper_classes.hpp	/^		list_of_special_endpoint_pairs() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const std::vector<val_typ_pair> &	access:protected	signature:() const
main	main.cpp	/^int main(int argc, char** argv)$/;"	kind:f	typeref:typename:int	signature:(int argc,char ** argv)
make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline  auto make_vt_pair(value_type&& t, value_type&& u)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(value_type && t,value_type && u)
make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline auto make_vt_pair(const value_type& t, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(const value_type & t,const value_type & u)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
misc_includes_hpp	misc_includes.hpp	/^#define misc_includes_hpp$/;"	kind:d
misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
mkscope	scoped_ident_table_class.hpp	/^	void mkscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
name_is_builtin	scoped_ident_table_class.hpp	/^	bool name_is_builtin(Ident some_name) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
next	vm_code_class.hpp	/^	VmCode * next, * prev;$/;"	kind:m	class:VmCode	typeref:typename:VmCode *	access:public
nonSizedArrayIdentName	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext* GrammarParser::FuncVarDeclContext::nonSizedArrayId/;"	kind:f	class:GrammarParser::FuncVarDeclContext	typeref:typename:GrammarParser::NonSizedArrayIdentNameContext *	signature:()
nonSizedArrayIdentName	gen_src/GrammarParser.cpp	/^GrammarParser::NonSizedArrayIdentNameContext* GrammarParser::nonSizedArrayIdentName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NonSizedArrayIdentNameContext *	signature:()
nonSizedArrayIdentName	gen_src/GrammarParser.h	/^    NonSizedArrayIdentNameContext *nonSizedArrayIdentName();$/;"	kind:p	class:GrammarParser::FuncVarDeclContext	typeref:typename:NonSizedArrayIdentNameContext *	access:public	signature:()
nonSizedArrayIdentName	gen_src/GrammarParser.h	/^  NonSizedArrayIdentNameContext* nonSizedArrayIdentName();$/;"	kind:p	class:GrammarParser	typeref:typename:NonSizedArrayIdentNameContext *	access:public	signature:()
not_found_level	scoped_ident_table_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::ExprMulDivModEtcContext::numExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::SubscriptConstContext::numExpr() {$/;"	kind:f	class:GrammarParser::SubscriptConstContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::numExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NumExprContext *	signature:()
numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::SubscriptConstContext	typeref:typename:NumExprContext *	access:public	signature:()
numExpr	gen_src/GrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t num_consec_backslashes() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
op	vm_code_class.hpp	/^	VmInstrOp op;$/;"	kind:m	class:VmCode	typeref:typename:VmInstrOp	access:public
operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool use_cap=false)
operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(StrSplitHelperBase && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(const StrSplitHelperBase & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(StrSplitHelperNoEscapes && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(StrSplitHelperWithEscapes && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
operator =	symbol_table_classes.hpp	/^	inline Function& operator = (Function&& to_move) = default;$/;"	kind:p	class:Function	typeref:typename:Function &	access:public	signature:(Function && to_move)
operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
pop_num	compiler_class.hpp	/^	inline auto pop_num()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
pop_str	compiler_class.hpp	/^	inline auto pop_str()$/;"	kind:f	class:Compiler	typeref:typename:auto	access:protected	signature:()
prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
prev	vm_code_class.hpp	/^	VmCode * next, * prev;$/;"	kind:m	class:VmCode	typeref:typename:VmCode **	access:public
prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
prev_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
prev_prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
prev_prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
program	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext* GrammarParser::program() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ProgramContext *	signature:()
program	gen_src/GrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:GrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
push_num	compiler_class.hpp	/^	inline void push_num(s64 to_push)$/;"	kind:f	class:Compiler	typeref:typename:void	access:protected	signature:(s64 to_push)
push_str	compiler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:Compiler	typeref:typename:void	access:protected	signature:(std::string * to_push)
put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
ret	vm_code_class.hpp	/^	ret,$/;"	kind:e	enum:VmInstrOp	access:public
rmscope	scoped_ident_table_class.hpp	/^	void rmscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
s16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
s32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
s64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
s8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
scope_lev	scoped_ident_table_class.hpp	/^	inline s64 scope_lev() const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:s64	access:public	signature:() const
scoped_ident_table_class_hpp	scoped_ident_table_class.hpp	/^#define scoped_ident_table_class_hpp$/;"	kind:d
sempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
sempred	gen_src/GrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
sizeofExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext* GrammarParser::ExprMulDivModEtcContext::sizeofExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::SizeofExprContext *	signature:()
sizeofExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SizeofExprContext* GrammarParser::sizeofExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SizeofExprContext *	signature:()
sizeofExpr	gen_src/GrammarParser.h	/^    SizeofExprContext *sizeofExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:SizeofExprContext *	access:public	signature:()
sizeofExpr	gen_src/GrammarParser.h	/^  SizeofExprContext* sizeofExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:SizeofExprContext *	access:public	signature:()
st	vm_code_class.hpp	/^	st,$/;"	kind:e	enum:VmInstrOp	access:public
start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
statement	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext* GrammarParser::StatementsContext::statement(size_t i) {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:GrammarParser::StatementContext *	signature:(size_t i)
statement	gen_src/GrammarParser.cpp	/^GrammarParser::StatementContext* GrammarParser::statement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::StatementContext *	signature:()
statement	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::StatementContext *> GrammarParser::StatementsContext::statement() {$/;"	kind:f	class:GrammarParser::StatementsContext	typeref:typename:std::vector<GrammarParser::StatementContext * >	signature:()
statement	gen_src/GrammarParser.h	/^    StatementContext* statement(size_t i);$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:StatementContext *	access:public	signature:(size_t i)
statement	gen_src/GrammarParser.h	/^    std::vector<StatementContext *> statement();$/;"	kind:p	class:GrammarParser::StatementsContext	typeref:typename:std::vector<StatementContext * >	access:public	signature:()
statement	gen_src/GrammarParser.h	/^  StatementContext* statement();$/;"	kind:p	class:GrammarParser	typeref:typename:StatementContext *	access:public	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::DoWhileStatementContext::statements() {$/;"	kind:f	class:GrammarParser::DoWhileStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::ElseStatementsContext::statements() {$/;"	kind:f	class:GrammarParser::ElseStatementsContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::FuncDeclContext::statements() {$/;"	kind:f	class:GrammarParser::FuncDeclContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::IfChainStatementContext::statements() {$/;"	kind:f	class:GrammarParser::IfChainStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::IfStatementContext::statements() {$/;"	kind:f	class:GrammarParser::IfStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::StatementContext::statements() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::WhileStatementContext::statements() {$/;"	kind:f	class:GrammarParser::WhileStatementContext	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.cpp	/^GrammarParser::StatementsContext* GrammarParser::statements() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::StatementsContext *	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::DoWhileStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::ElseStatementsContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::FuncDeclContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::IfChainStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::IfStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^    StatementsContext *statements();$/;"	kind:p	class:GrammarParser::WhileStatementContext	typeref:typename:StatementsContext *	access:public	signature:()
statements	gen_src/GrammarParser.h	/^  StatementsContext* statements();$/;"	kind:p	class:GrammarParser	typeref:typename:StatementsContext *	access:public	signature:()
stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strings	liborangepower_src/str_split_helper_classes.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
stx	vm_code_class.hpp	/^	stx,$/;"	kind:e	enum:VmInstrOp	access:public
subscriptConst	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext* GrammarParser::IdentDeclContext::subscriptConst() {$/;"	kind:f	class:GrammarParser::IdentDeclContext	typeref:typename:GrammarParser::SubscriptConstContext *	signature:()
subscriptConst	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptConstContext* GrammarParser::subscriptConst() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SubscriptConstContext *	signature:()
subscriptConst	gen_src/GrammarParser.h	/^    SubscriptConstContext *subscriptConst();$/;"	kind:p	class:GrammarParser::IdentDeclContext	typeref:typename:SubscriptConstContext *	access:public	signature:()
subscriptConst	gen_src/GrammarParser.h	/^  SubscriptConstContext* subscriptConst();$/;"	kind:p	class:GrammarParser	typeref:typename:SubscriptConstContext *	access:public	signature:()
subscriptExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext* GrammarParser::IdentExprContext::subscriptExpr() {$/;"	kind:f	class:GrammarParser::IdentExprContext	typeref:typename:GrammarParser::SubscriptExprContext *	signature:()
subscriptExpr	gen_src/GrammarParser.cpp	/^GrammarParser::SubscriptExprContext* GrammarParser::subscriptExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::SubscriptExprContext *	signature:()
subscriptExpr	gen_src/GrammarParser.h	/^    SubscriptExprContext *subscriptExpr();$/;"	kind:p	class:GrammarParser::IdentExprContext	typeref:typename:SubscriptExprContext *	access:public	signature:()
subscriptExpr	gen_src/GrammarParser.h	/^  SubscriptExprContext* subscriptExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:SubscriptExprContext *	access:public	signature:()
sym_tbl	compiler_class.hpp	/^	inline auto& sym_tbl()$/;"	kind:f	class:Compiler	typeref:typename:auto &	access:protected	signature:()
symbol_table_classes_hpp	symbol_table_classes.hpp	/^#define symbol_table_classes_hpp$/;"	kind:d
time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline const StrType& to_split() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const StrType &	access:public	signature:() const
to_split_at_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_any_special_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	bool to_split_at_is_end_of_word(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
to_split_at_is_indiv_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual bool to_split_at_is_indiv_word(size_t i) const = 0;$/;"	kind:p	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef std::pair<value_type, value_type> val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:std::pair<value_type,value_type>	access:public
val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::val_typ_pair val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::val_typ_pair	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:Base::value_type	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::value_type	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename StrType::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType::value_type	access:public
var	vm_code_class.hpp	/^	var,$/;"	kind:e	enum:VmInstrOp	access:public
varDecl	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext* GrammarParser::StatementContext::varDecl() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::VarDeclContext *	signature:()
varDecl	gen_src/GrammarParser.cpp	/^GrammarParser::VarDeclContext* GrammarParser::varDecl() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::VarDeclContext *	signature:()
varDecl	gen_src/GrammarParser.h	/^    VarDeclContext *varDecl();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:VarDeclContext *	access:public	signature:()
varDecl	gen_src/GrammarParser.h	/^  VarDeclContext* varDecl();$/;"	kind:p	class:GrammarParser	typeref:typename:VarDeclContext *	access:public	signature:()
varx	vm_code_class.hpp	/^	varx,$/;"	kind:e	enum:VmInstrOp	access:public
vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
visitAssignment	compiler_class.cpp	/^antlrcpp::Any Compiler::visitAssignment$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::AssignmentContext * ctx)
visitAssignment	compiler_class.hpp	/^	antlrcpp::Any visitAssignment$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * ctx)
visitAssignment	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitAssignment(GrammarParser::AssignmentContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * ctx)
visitAssignment	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitAssignment(GrammarParser::AssignmentContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::AssignmentContext * context)
visitBuiltinTypename	compiler_class.cpp	/^antlrcpp::Any Compiler::visitBuiltinTypename$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::BuiltinTypenameContext * ctx)
visitBuiltinTypename	compiler_class.hpp	/^	antlrcpp::Any visitBuiltinTypename$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * ctx)
visitBuiltinTypename	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitBuiltinTypename(GrammarParser::BuiltinTypenameContext *ctx) overrid/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * ctx)
visitBuiltinTypename	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitBuiltinTypename(GrammarParser::BuiltinTypenameContext *context) =/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::BuiltinTypenameContext * context)
visitDoWhileStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitDoWhileStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::DoWhileStatementContext * ctx)
visitDoWhileStatement	compiler_class.hpp	/^	antlrcpp::Any visitDoWhileStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * ctx)
visitDoWhileStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitDoWhileStatement(GrammarParser::DoWhileStatementContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * ctx)
visitDoWhileStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitDoWhileStatement(GrammarParser::DoWhileStatementContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::DoWhileStatementContext * context)
visitElseStatements	compiler_class.cpp	/^antlrcpp::Any Compiler::visitElseStatements$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ElseStatementsContext * ctx)
visitElseStatements	compiler_class.hpp	/^	antlrcpp::Any visitElseStatements$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * ctx)
visitElseStatements	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitElseStatements(GrammarParser::ElseStatementsContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * ctx)
visitElseStatements	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitElseStatements(GrammarParser::ElseStatementsContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ElseStatementsContext * context)
visitExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprContext * ctx)
visitExpr	compiler_class.hpp	/^	antlrcpp::Any visitExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
visitExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
visitExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * context)
visitExprAddSub	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprAddSub$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	compiler_class.hpp	/^	antlrcpp::Any visitExprAddSub$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * context)
visitExprCompare	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprCompare$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	compiler_class.hpp	/^	antlrcpp::Any visitExprCompare$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * context)
visitExprLogical	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprLogical$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	compiler_class.hpp	/^	antlrcpp::Any visitExprLogical$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * context)
visitExprMulDivModEtc	compiler_class.cpp	/^antlrcpp::Any Compiler::visitExprMulDivModEtc$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	compiler_class.hpp	/^	antlrcpp::Any visitExprMulDivModEtc$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * context)
visitFuncArgExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncArgExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncArgExprContext * ctx)
visitFuncArgExpr	compiler_class.hpp	/^	antlrcpp::Any visitFuncArgExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * ctx)
visitFuncArgExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncArgExpr(GrammarParser::FuncArgExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * ctx)
visitFuncArgExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncArgExpr(GrammarParser::FuncArgExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncArgExprContext * context)
visitFuncCall	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncCall$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncCallContext * ctx)
visitFuncCall	compiler_class.hpp	/^	antlrcpp::Any visitFuncCall$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * ctx)
visitFuncCall	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncCall(GrammarParser::FuncCallContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * ctx)
visitFuncCall	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncCall(GrammarParser::FuncCallContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncCallContext * context)
visitFuncDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncDeclContext * ctx)
visitFuncDecl	compiler_class.hpp	/^	antlrcpp::Any visitFuncDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * ctx)
visitFuncDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncDecl(GrammarParser::FuncDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * ctx)
visitFuncDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncDecl(GrammarParser::FuncDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncDeclContext * context)
visitFuncVarDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitFuncVarDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::FuncVarDeclContext * ctx)
visitFuncVarDecl	compiler_class.hpp	/^	antlrcpp::Any visitFuncVarDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * ctx)
visitFuncVarDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitFuncVarDecl(GrammarParser::FuncVarDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * ctx)
visitFuncVarDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitFuncVarDecl(GrammarParser::FuncVarDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::FuncVarDeclContext * context)
visitIdentDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentDeclContext * ctx)
visitIdentDecl	compiler_class.hpp	/^	antlrcpp::Any visitIdentDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * ctx)
visitIdentDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentDecl(GrammarParser::IdentDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * ctx)
visitIdentDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentDecl(GrammarParser::IdentDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentDeclContext * context)
visitIdentExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentExprContext * ctx)
visitIdentExpr	compiler_class.hpp	/^	antlrcpp::Any visitIdentExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * ctx)
visitIdentExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentExpr(GrammarParser::IdentExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * ctx)
visitIdentExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentExpr(GrammarParser::IdentExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentExprContext * context)
visitIdentName	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIdentName$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	compiler_class.hpp	/^	antlrcpp::Any visitIdentName$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * context)
visitIfChainStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIfChainStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IfChainStatementContext * ctx)
visitIfChainStatement	compiler_class.hpp	/^	antlrcpp::Any visitIfChainStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * ctx)
visitIfChainStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIfChainStatement(GrammarParser::IfChainStatementContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * ctx)
visitIfChainStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIfChainStatement(GrammarParser::IfChainStatementContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfChainStatementContext * context)
visitIfStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitIfStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IfStatementContext * ctx)
visitIfStatement	compiler_class.hpp	/^	antlrcpp::Any visitIfStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * ctx)
visitIfStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIfStatement(GrammarParser::IfStatementContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * ctx)
visitIfStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIfStatement(GrammarParser::IfStatementContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IfStatementContext * context)
visitLenExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitLenExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LenExprContext * ctx)
visitLenExpr	compiler_class.hpp	/^	antlrcpp::Any visitLenExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * ctx)
visitLenExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLenExpr(GrammarParser::LenExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * ctx)
visitLenExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLenExpr(GrammarParser::LenExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LenExprContext * context)
visitNonSizedArrayIdentName	compiler_class.cpp	/^antlrcpp::Any Compiler::visitNonSizedArrayIdentName$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
visitNonSizedArrayIdentName	compiler_class.hpp	/^	antlrcpp::Any visitNonSizedArrayIdentName$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
visitNonSizedArrayIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNonSizedArrayIdentName(GrammarParser::NonSizedArrayIdentNameContext/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * ctx)
visitNonSizedArrayIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNonSizedArrayIdentName(GrammarParser::NonSizedArrayIdentNameConte/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NonSizedArrayIdentNameContext * context)
visitNumExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitNumExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	compiler_class.hpp	/^	antlrcpp::Any visitNumExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * context)
visitProgram	compiler_class.cpp	/^antlrcpp::Any Compiler::visitProgram$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	compiler_class.hpp	/^	antlrcpp::Any visitProgram$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * context)
visitSizeofExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSizeofExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SizeofExprContext * ctx)
visitSizeofExpr	compiler_class.hpp	/^	antlrcpp::Any visitSizeofExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * ctx)
visitSizeofExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSizeofExpr(GrammarParser::SizeofExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * ctx)
visitSizeofExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSizeofExpr(GrammarParser::SizeofExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SizeofExprContext * context)
visitStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::StatementContext * ctx)
visitStatement	compiler_class.hpp	/^	antlrcpp::Any visitStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * ctx)
visitStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitStatement(GrammarParser::StatementContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * ctx)
visitStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitStatement(GrammarParser::StatementContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementContext * context)
visitStatements	compiler_class.cpp	/^antlrcpp::Any Compiler::visitStatements$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::StatementsContext * ctx)
visitStatements	compiler_class.hpp	/^	antlrcpp::Any visitStatements$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * ctx)
visitStatements	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitStatements(GrammarParser::StatementsContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * ctx)
visitStatements	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitStatements(GrammarParser::StatementsContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::StatementsContext * context)
visitSubscriptConst	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSubscriptConst$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SubscriptConstContext * ctx)
visitSubscriptConst	compiler_class.hpp	/^	antlrcpp::Any visitSubscriptConst$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * ctx)
visitSubscriptConst	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubscriptConst(GrammarParser::SubscriptConstContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * ctx)
visitSubscriptConst	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSubscriptConst(GrammarParser::SubscriptConstContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptConstContext * context)
visitSubscriptExpr	compiler_class.cpp	/^antlrcpp::Any Compiler::visitSubscriptExpr$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::SubscriptExprContext * ctx)
visitSubscriptExpr	compiler_class.hpp	/^	antlrcpp::Any visitSubscriptExpr$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * ctx)
visitSubscriptExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitSubscriptExpr(GrammarParser::SubscriptExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * ctx)
visitSubscriptExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitSubscriptExpr(GrammarParser::SubscriptExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::SubscriptExprContext * context)
visitVarDecl	compiler_class.cpp	/^antlrcpp::Any Compiler::visitVarDecl$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::VarDeclContext * ctx)
visitVarDecl	compiler_class.hpp	/^	antlrcpp::Any visitVarDecl$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * ctx)
visitVarDecl	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitVarDecl(GrammarParser::VarDeclContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * ctx)
visitVarDecl	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitVarDecl(GrammarParser::VarDeclContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::VarDeclContext * context)
visitWhileStatement	compiler_class.cpp	/^antlrcpp::Any Compiler::visitWhileStatement$/;"	kind:f	class:Compiler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::WhileStatementContext * ctx)
visitWhileStatement	compiler_class.hpp	/^	antlrcpp::Any visitWhileStatement$/;"	kind:p	class:Compiler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * ctx)
visitWhileStatement	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitWhileStatement(GrammarParser::WhileStatementContext *ctx) override /;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * ctx)
visitWhileStatement	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitWhileStatement(GrammarParser::WhileStatementContext *context) = 0/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::WhileStatementContext * context)
vm_code_class_hpp	vm_code_class.hpp	/^#define vm_code_class_hpp$/;"	kind:d
vt_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_any_special_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_first_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_first_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_second_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_second_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
whileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext* GrammarParser::StatementContext::whileStatement() {$/;"	kind:f	class:GrammarParser::StatementContext	typeref:typename:GrammarParser::WhileStatementContext *	signature:()
whileStatement	gen_src/GrammarParser.cpp	/^GrammarParser::WhileStatementContext* GrammarParser::whileStatement() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::WhileStatementContext *	signature:()
whileStatement	gen_src/GrammarParser.h	/^    WhileStatementContext *whileStatement();$/;"	kind:p	class:GrammarParser::StatementContext	typeref:typename:WhileStatementContext *	access:public	signature:()
whileStatement	gen_src/GrammarParser.h	/^  WhileStatementContext* whileStatement();$/;"	kind:p	class:GrammarParser	typeref:typename:WhileStatementContext *	access:public	signature:()
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
width_to_msb_pos	liborangepower_src/misc_defines.hpp	/^#define width_to_msb_pos(/;"	kind:d	signature:(some_width)
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
~Compiler	compiler_class.cpp	/^Compiler::~Compiler()$/;"	kind:f	class:Compiler	signature:()
~Compiler	compiler_class.hpp	/^	virtual ~Compiler();$/;"	kind:p	class:Compiler	access:public	signature:()
~FunctionTable	symbol_table_classes.cpp	/^FunctionTable::~FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
~FunctionTable	symbol_table_classes.hpp	/^	virtual ~FunctionTable();$/;"	kind:p	class:FunctionTable	access:public	signature:()
~GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::~GrammarLexer() {$/;"	kind:f	class:GrammarLexer	signature:()
~GrammarLexer	gen_src/GrammarLexer.h	/^  ~GrammarLexer();$/;"	kind:p	class:GrammarLexer	access:public	signature:()
~GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::~GrammarParser() {$/;"	kind:f	class:GrammarParser	signature:()
~GrammarParser	gen_src/GrammarParser.h	/^  ~GrammarParser();$/;"	kind:p	class:GrammarParser	access:public	signature:()
~ScopedIdentTable	scoped_ident_table_class.hpp	/^	virtual ~ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
~SymbolTable	symbol_table_classes.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
~SymbolTable	symbol_table_classes.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
