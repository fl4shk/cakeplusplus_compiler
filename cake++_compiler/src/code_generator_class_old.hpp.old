#ifndef code_generator_class_hpp
#define code_generator_class_hpp

#include "misc_includes.hpp"
#include "gen_src/GrammarLexer.h"
#include "gen_src/GrammarParser.h"
#include "gen_src/GrammarVisitor.h"

#include "symbol_table_classes.hpp"

class CodeGenerator
{
protected:		// variables
	// Table of functions
	FunctionTable __func_tbl;

	// Current function
	Function* __curr_func;

	std::stack<s64> __num_stack;
	std::stack<Ident> __str_stack;
	std::stack<BuiltinTypename> __builtin_typename_stack;

public:		// functions
	CodeGenerator();
	virtual ~CodeGenerator();

	//void generate(AstNode* prog_node);
	void generate();


protected:		// functions
	void __visit_child(AstNode* p);
	void visit_all_children(AstNode* p);
	void visit_prog(AstNode* p);
	void __visit_func_decl_statements(AstNode* p);
	//void visit_cls_decl(AstNode* p);
	void visit_func_arg_decl(AstNode* p);
	void visit_func_arg_expr(AstNode* p);
	void visit_stmt(AstNode* p);
	void visit_ident_decl(AstNode* p);
	void visit_expr(AstNode* p);


	void visit_subop_bin(AstNode* p);
	void visit_subop_un(AstNode* p);

	inline auto& curr_func()
	{
		return *__curr_func;
	}
	inline auto& sym_tbl()
	{
		return curr_func().sym_tbl();
	}

	inline void err(const std::string& msg)
	{
		printerr("Error:  ", msg, "\n");
		exit(1);
	}

	inline void push_num(s64 to_push)
	{
		__num_stack.push(to_push);
	}
	inline auto pop_num()
	{
		auto ret = __num_stack.top(); 
		__num_stack.pop();
		return ret;
	}
	inline auto get_top_num()
	{
		return __num_stack.top();
	}

	inline void push_str(std::string* to_push)
	{
		__str_stack.push(to_push);
	}
	inline auto pop_str()
	{
		auto ret = __str_stack.top(); 
		__str_stack.pop();
		return ret;
	}
	inline auto get_top_str()
	{
		return __str_stack.top();
	}

	inline void push_builtin_typename(BuiltinTypename to_push)
	{
		__builtin_typename_stack.push(to_push);
	}
	inline auto pop_builtin_typename()
	{
		auto ret = __builtin_typename_stack.top(); 
		__builtin_typename_stack.pop();
		return ret;
	}
	inline auto get_top_builtin_typename()
	{
		return __builtin_typename_stack.top();
	}
};


#endif		// code_generator_class_hpp
