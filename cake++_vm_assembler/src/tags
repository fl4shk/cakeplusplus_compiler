!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/249c3c0/
Add	assembler_class.hpp	/^	Add,$/;"	kind:e	enum:VmInstrBinOp	access:public
AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s___arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s___arr)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
Assembler	assembler_class.hpp	/^class Assembler : public GrammarVisitor$/;"	kind:c	inherits:GrammarVisitor
Assembler::__num_stack	assembler_class.hpp	/^	std::stack<s64> __num_stack;$/;"	kind:m	class:Assembler	typeref:typename:std::stack<s64>	access:private
Assembler::__str_stack	assembler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:Assembler	typeref:typename:std::stack<std::string * >	access:private
Assembler::__sym_tbl	assembler_class.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:Assembler	typeref:typename:SymbolTable	access:private
Assembler::get_top_num	assembler_class.hpp	/^	inline s64 get_top_num()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
Assembler::get_top_str	assembler_class.hpp	/^	inline s64 get_top_str()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
Assembler::pop_num	assembler_class.hpp	/^	inline s64 pop_num()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
Assembler::pop_str	assembler_class.hpp	/^	inline s64 pop_str()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
Assembler::push_num	assembler_class.hpp	/^	inline void push_num(s64 to_push)$/;"	kind:f	class:Assembler	typeref:typename:void	access:private	signature:(s64 to_push)
Assembler::push_str	assembler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:Assembler	typeref:typename:void	access:private	signature:(std::string * to_push)
Assembler::visitComment	assembler_class.cpp	/^antlrcpp::Any Assembler::visitComment$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::CommentContext * ctx)
Assembler::visitComment	assembler_class.hpp	/^	antlrcpp::Any visitComment$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * ctx)
Assembler::visitCurrPc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitCurrPc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::CurrPcContext * ctx)
Assembler::visitCurrPc	assembler_class.hpp	/^	antlrcpp::Any visitCurrPc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * ctx)
Assembler::visitExpr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExpr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprContext * ctx)
Assembler::visitExpr	assembler_class.hpp	/^	antlrcpp::Any visitExpr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
Assembler::visitExprAddSub	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprAddSub$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprAddSubContext * ctx)
Assembler::visitExprAddSub	assembler_class.hpp	/^	antlrcpp::Any visitExprAddSub$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
Assembler::visitExprCompare	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprCompare$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprCompareContext * ctx)
Assembler::visitExprCompare	assembler_class.hpp	/^	antlrcpp::Any visitExprCompare$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
Assembler::visitExprLogical	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprLogical$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprLogicalContext * ctx)
Assembler::visitExprLogical	assembler_class.hpp	/^	antlrcpp::Any visitExprLogical$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
Assembler::visitExprMulDivModEtc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprMulDivModEtc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
Assembler::visitExprMulDivModEtc	assembler_class.hpp	/^	antlrcpp::Any visitExprMulDivModEtc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
Assembler::visitIdentName	assembler_class.cpp	/^antlrcpp::Any Assembler::visitIdentName$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentNameContext * ctx)
Assembler::visitIdentName	assembler_class.hpp	/^	antlrcpp::Any visitIdentName$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
Assembler::visitInstrArg	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrArg$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrArgContext * ctx)
Assembler::visitInstrArg	assembler_class.hpp	/^	antlrcpp::Any visitInstrArg$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * ctx)
Assembler::visitInstrArgX	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrArgX$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrArgXContext * ctx)
Assembler::visitInstrArgX	assembler_class.hpp	/^	antlrcpp::Any visitInstrArgX$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * ctx)
Assembler::visitInstrBeq	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBeq$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBeqContext * ctx)
Assembler::visitInstrBeq	assembler_class.hpp	/^	antlrcpp::Any visitInstrBeq$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * ctx)
Assembler::visitInstrBinop	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBinop$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBinopContext * ctx)
Assembler::visitInstrBinop	assembler_class.hpp	/^	antlrcpp::Any visitInstrBinop$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * ctx)
Assembler::visitInstrBne	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBne$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBneContext * ctx)
Assembler::visitInstrBne	assembler_class.hpp	/^	antlrcpp::Any visitInstrBne$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * ctx)
Assembler::visitInstrCall	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrCall$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrCallContext * ctx)
Assembler::visitInstrCall	assembler_class.hpp	/^	antlrcpp::Any visitInstrCall$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * ctx)
Assembler::visitInstrConstant	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrConstant$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrConstantContext * ctx)
Assembler::visitInstrConstant	assembler_class.hpp	/^	antlrcpp::Any visitInstrConstant$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * ctx)
Assembler::visitInstrDispChar	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispChar$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispCharContext * ctx)
Assembler::visitInstrDispChar	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispChar$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * ctx)
Assembler::visitInstrDispNum	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispNum$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispNumContext * ctx)
Assembler::visitInstrDispNum	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispNum$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * ctx)
Assembler::visitInstrDispNumUnsigned	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispNumUnsigned$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
Assembler::visitInstrDispNumUnsigned	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispNumUnsigned$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
Assembler::visitInstrDispStr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispStr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispStrContext * ctx)
Assembler::visitInstrDispStr	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispStr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * ctx)
Assembler::visitInstrGetArgSpace	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetArgSpace$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
Assembler::visitInstrGetArgSpace	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetArgSpace$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
Assembler::visitInstrGetNum	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetNum$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetNumContext * ctx)
Assembler::visitInstrGetNum	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetNum$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * ctx)
Assembler::visitInstrGetPc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetPc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetPcContext * ctx)
Assembler::visitInstrGetPc	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetPc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * ctx)
Assembler::visitInstrJump	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrJump$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrJumpContext * ctx)
Assembler::visitInstrJump	assembler_class.hpp	/^	antlrcpp::Any visitInstrJump$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * ctx)
Assembler::visitInstrLd	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrLd$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrLdContext * ctx)
Assembler::visitInstrLd	assembler_class.hpp	/^	antlrcpp::Any visitInstrLd$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * ctx)
Assembler::visitInstrLdx	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrLdx$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrLdxContext * ctx)
Assembler::visitInstrLdx	assembler_class.hpp	/^	antlrcpp::Any visitInstrLdx$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * ctx)
Assembler::visitInstrQuit	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrQuit$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrQuitContext * ctx)
Assembler::visitInstrQuit	assembler_class.hpp	/^	antlrcpp::Any visitInstrQuit$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * ctx)
Assembler::visitInstrRet	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrRet$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrRetContext * ctx)
Assembler::visitInstrRet	assembler_class.hpp	/^	antlrcpp::Any visitInstrRet$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * ctx)
Assembler::visitInstrSetArgSpace	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrSetArgSpace$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
Assembler::visitInstrSetArgSpace	assembler_class.hpp	/^	antlrcpp::Any visitInstrSetArgSpace$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
Assembler::visitInstrSt	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrSt$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrStContext * ctx)
Assembler::visitInstrSt	assembler_class.hpp	/^	antlrcpp::Any visitInstrSt$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * ctx)
Assembler::visitInstrStx	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrStx$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrStxContext * ctx)
Assembler::visitInstrStx	assembler_class.hpp	/^	antlrcpp::Any visitInstrStx$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * ctx)
Assembler::visitInstrVar	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrVar$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrVarContext * ctx)
Assembler::visitInstrVar	assembler_class.hpp	/^	antlrcpp::Any visitInstrVar$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * ctx)
Assembler::visitInstrVarX	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrVarX$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrVarXContext * ctx)
Assembler::visitInstrVarX	assembler_class.hpp	/^	antlrcpp::Any visitInstrVarX$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * ctx)
Assembler::visitInstruction	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstruction$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstructionContext * ctx)
Assembler::visitInstruction	assembler_class.hpp	/^	antlrcpp::Any visitInstruction$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * ctx)
Assembler::visitLabel	assembler_class.cpp	/^antlrcpp::Any Assembler::visitLabel$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LabelContext * ctx)
Assembler::visitLabel	assembler_class.hpp	/^	antlrcpp::Any visitLabel$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * ctx)
Assembler::visitLine	assembler_class.cpp	/^antlrcpp::Any Assembler::visitLine$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LineContext * ctx)
Assembler::visitLine	assembler_class.hpp	/^	antlrcpp::Any visitLine$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * ctx)
Assembler::visitNumExpr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitNumExpr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NumExprContext * ctx)
Assembler::visitNumExpr	assembler_class.hpp	/^	antlrcpp::Any visitNumExpr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
Assembler::visitProgram	assembler_class.cpp	/^antlrcpp::Any Assembler::visitProgram$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ProgramContext * ctx)
Assembler::visitProgram	assembler_class.hpp	/^	antlrcpp::Any visitProgram$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
Basic	assembler_class.hpp	/^	Basic,$/;"	kind:e	enum:VmInstrLdStOp	access:public
BitAnd	assembler_class.hpp	/^	BitAnd,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitAsr	assembler_class.hpp	/^	BitAsr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitLsl	assembler_class.hpp	/^	BitLsl,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitLsr	assembler_class.hpp	/^	BitLsr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitOr	assembler_class.hpp	/^	BitOr,$/;"	kind:e	enum:VmInstrBinOp	access:public
BitXor	assembler_class.hpp	/^	BitXor,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpEq	assembler_class.hpp	/^	CmpEq,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpNe	assembler_class.hpp	/^	CmpNe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpSGe	assembler_class.hpp	/^	CmpSGe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpSGt	assembler_class.hpp	/^	CmpSGt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpSLe	assembler_class.hpp	/^	CmpSLe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpSLt	assembler_class.hpp	/^	CmpSLt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpUGe	assembler_class.hpp	/^	CmpUGe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpUGt	assembler_class.hpp	/^	CmpUGt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpULe	assembler_class.hpp	/^	CmpULe,$/;"	kind:e	enum:VmInstrBinOp	access:public
CmpULt	assembler_class.hpp	/^	CmpULt,$/;"	kind:e	enum:VmInstrBinOp	access:public
CommentContext	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext::CommentContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::CommentContext	signature:(ParserRuleContext * parent,size_t invokingState)
CommentContext	gen_src/GrammarParser.h	/^    CommentContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::CommentContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CommentContext	gen_src/GrammarParser.h	/^  class  CommentContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
CurrPcContext	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext::CurrPcContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::CurrPcContext	signature:(ParserRuleContext * parent,size_t invokingState)
CurrPcContext	gen_src/GrammarParser.h	/^    CurrPcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::CurrPcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
CurrPcContext	gen_src/GrammarParser.h	/^  class  CurrPcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
DupStuff	allocation_stuff.cpp	/^class DupStuff$/;"	kind:c	file:
DupStuff::__int_pool	allocation_stuff.cpp	/^	static std::map<int, std::unique_ptr<int>> __int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>	file:	access:private
DupStuff::__int_pool	allocation_stuff.cpp	/^std::map<int, std::unique_ptr<int>> DupStuff::__int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>
DupStuff::__str_pool	allocation_stuff.cpp	/^		__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
DupStuff::__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
DupStuff::cstm_intdup	allocation_stuff.cpp	/^	friend int* cstm_intdup(int to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:int *	file:	access:private	signature:(int to_dup)
DupStuff::cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
ExprAddSubContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/GrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprAddSubContext	gen_src/GrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprCompareContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/GrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprCompareContext	gen_src/GrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/GrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprContext	gen_src/GrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprLogicalContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/GrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprLogicalContext	gen_src/GrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
ExprMulDivModEtcContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
FunctionTable	symbol_table_classes.cpp	/^FunctionTable::FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
FunctionTable::FunctionTable	symbol_table_classes.cpp	/^FunctionTable::FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
FunctionTable::~FunctionTable	symbol_table_classes.cpp	/^FunctionTable::~FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
GrammarBaseVisitor	gen_src/GrammarBaseVisitor.h	/^class  GrammarBaseVisitor : public GrammarVisitor {$/;"	kind:c	inherits:GrammarVisitor
GrammarBaseVisitor::visitComment	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitComment(GrammarParser::CommentContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * ctx)
GrammarBaseVisitor::visitCurrPc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitCurrPc(GrammarParser::CurrPcContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * ctx)
GrammarBaseVisitor::visitExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
GrammarBaseVisitor::visitExprAddSub	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
GrammarBaseVisitor::visitExprCompare	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
GrammarBaseVisitor::visitExprLogical	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
GrammarBaseVisitor::visitExprMulDivModEtc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
GrammarBaseVisitor::visitIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
GrammarBaseVisitor::visitInstrArg	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrArg(GrammarParser::InstrArgContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * ctx)
GrammarBaseVisitor::visitInstrArgX	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrArgX(GrammarParser::InstrArgXContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * ctx)
GrammarBaseVisitor::visitInstrBeq	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBeq(GrammarParser::InstrBeqContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * ctx)
GrammarBaseVisitor::visitInstrBinop	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBinop(GrammarParser::InstrBinopContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * ctx)
GrammarBaseVisitor::visitInstrBne	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBne(GrammarParser::InstrBneContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * ctx)
GrammarBaseVisitor::visitInstrCall	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrCall(GrammarParser::InstrCallContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * ctx)
GrammarBaseVisitor::visitInstrConstant	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrConstant(GrammarParser::InstrConstantContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * ctx)
GrammarBaseVisitor::visitInstrDispChar	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispChar(GrammarParser::InstrDispCharContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * ctx)
GrammarBaseVisitor::visitInstrDispNum	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispNum(GrammarParser::InstrDispNumContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * ctx)
GrammarBaseVisitor::visitInstrDispNumUnsigned	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispNumUnsigned(GrammarParser::InstrDispNumUnsignedContext *ct/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
GrammarBaseVisitor::visitInstrDispStr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispStr(GrammarParser::InstrDispStrContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * ctx)
GrammarBaseVisitor::visitInstrGetArgSpace	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetArgSpace(GrammarParser::InstrGetArgSpaceContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
GrammarBaseVisitor::visitInstrGetNum	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetNum(GrammarParser::InstrGetNumContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * ctx)
GrammarBaseVisitor::visitInstrGetPc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetPc(GrammarParser::InstrGetPcContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * ctx)
GrammarBaseVisitor::visitInstrJump	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrJump(GrammarParser::InstrJumpContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * ctx)
GrammarBaseVisitor::visitInstrLd	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrLd(GrammarParser::InstrLdContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * ctx)
GrammarBaseVisitor::visitInstrLdx	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrLdx(GrammarParser::InstrLdxContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * ctx)
GrammarBaseVisitor::visitInstrQuit	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrQuit(GrammarParser::InstrQuitContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * ctx)
GrammarBaseVisitor::visitInstrRet	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrRet(GrammarParser::InstrRetContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * ctx)
GrammarBaseVisitor::visitInstrSetArgSpace	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrSetArgSpace(GrammarParser::InstrSetArgSpaceContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
GrammarBaseVisitor::visitInstrSt	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrSt(GrammarParser::InstrStContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * ctx)
GrammarBaseVisitor::visitInstrStx	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrStx(GrammarParser::InstrStxContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * ctx)
GrammarBaseVisitor::visitInstrVar	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrVar(GrammarParser::InstrVarContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * ctx)
GrammarBaseVisitor::visitInstrVarX	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrVarX(GrammarParser::InstrVarXContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * ctx)
GrammarBaseVisitor::visitInstruction	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstruction(GrammarParser::InstructionContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * ctx)
GrammarBaseVisitor::visitLabel	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLabel(GrammarParser::LabelContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * ctx)
GrammarBaseVisitor::visitLine	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLine(GrammarParser::LineContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * ctx)
GrammarBaseVisitor::visitNumExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
GrammarBaseVisitor::visitProgram	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::GrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:GrammarLexer	signature:(CharStream * input)
GrammarLexer	gen_src/GrammarLexer.h	/^  GrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:GrammarLexer	access:public	signature:(antlr4::CharStream * input)
GrammarLexer	gen_src/GrammarLexer.h	/^class  GrammarLexer : public antlr4::Lexer {$/;"	kind:c	inherits:antlr4::Lexer
GrammarLexer::GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::GrammarLexer(CharStream *input) : Lexer(input) {$/;"	kind:f	class:GrammarLexer	signature:(CharStream * input)
GrammarLexer::GrammarLexer	gen_src/GrammarLexer.h	/^  GrammarLexer(antlr4::CharStream *input);$/;"	kind:p	class:GrammarLexer	access:public	signature:(antlr4::CharStream * input)
GrammarLexer::Initializer	gen_src/GrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:GrammarLexer	access:private
GrammarLexer::Initializer::Initializer	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:GrammarLexer::Initializer	signature:()
GrammarLexer::Initializer::Initializer	gen_src/GrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:GrammarLexer::Initializer	access:public	signature:()
GrammarLexer::LexWhitespace	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__0	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__1	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__10	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__11	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__12	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__13	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__14	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__15	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__16	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__17	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__18	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__19	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__2	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__20	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__21	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__22	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__23	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__24	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__25	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__26	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__27	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__28	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__29	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__3	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__4	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__5	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__6	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__7	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__8	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::T__9	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokBinOp	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokBuiltinTypename	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokDecNum	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokIdent	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokNonNewline	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpAddSub	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpBitwise	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpCompare	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpLogical	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpMulDivMod	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::TokOpUnary	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
GrammarLexer::__anoncd6878f20103	gen_src/GrammarLexer.h	/^  enum {$/;"	kind:g	class:GrammarLexer	access:public
GrammarLexer::_atn	gen_src/GrammarLexer.cpp	/^atn::ATN GrammarLexer::_atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::ATN
GrammarLexer::_atn	gen_src/GrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
GrammarLexer::_channelNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_channelNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_channelNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_decisionToDFA	gen_src/GrammarLexer.cpp	/^std::vector<dfa::DFA> GrammarLexer::_decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<dfa::DFA>
GrammarLexer::_decisionToDFA	gen_src/GrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
GrammarLexer::_init	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer GrammarLexer::_init;$/;"	kind:m	class:GrammarLexer	typeref:typename:GrammarLexer::Initializer
GrammarLexer::_init	gen_src/GrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarLexer	typeref:typename:Initializer	access:private
GrammarLexer::_literalNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_literalNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_literalNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_modeNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_modeNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_modeNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_ruleNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_ruleNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_ruleNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_serializedATN	gen_src/GrammarLexer.cpp	/^std::vector<uint16_t> GrammarLexer::_serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>
GrammarLexer::_serializedATN	gen_src/GrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
GrammarLexer::_sharedContextCache	gen_src/GrammarLexer.cpp	/^atn::PredictionContextCache GrammarLexer::_sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::PredictionContextCache
GrammarLexer::_sharedContextCache	gen_src/GrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
GrammarLexer::_symbolicNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_symbolicNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_symbolicNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_tokenNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
GrammarLexer::_tokenNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
GrammarLexer::_vocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary GrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
GrammarLexer::_vocabulary	gen_src/GrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
GrammarLexer::getATN	gen_src/GrammarLexer.cpp	/^const atn::ATN& GrammarLexer::getATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const atn::ATN &	signature:() const
GrammarLexer::getATN	gen_src/GrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
GrammarLexer::getChannelNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getChannelNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getChannelNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getGrammarFileName	gen_src/GrammarLexer.cpp	/^std::string GrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:std::string	signature:() const
GrammarLexer::getGrammarFileName	gen_src/GrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:std::string	access:public	signature:() const
GrammarLexer::getModeNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getModeNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getModeNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getRuleNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getRuleNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getRuleNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getSerializedATN	gen_src/GrammarLexer.cpp	/^const std::vector<uint16_t> GrammarLexer::getSerializedATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
GrammarLexer::getSerializedATN	gen_src/GrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
GrammarLexer::getTokenNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getTokenNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarLexer::getTokenNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarLexer::getVocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary& GrammarLexer::getVocabulary() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
GrammarLexer::getVocabulary	gen_src/GrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
GrammarLexer::~GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::~GrammarLexer() {$/;"	kind:f	class:GrammarLexer	signature:()
GrammarLexer::~GrammarLexer	gen_src/GrammarLexer.h	/^  ~GrammarLexer();$/;"	kind:p	class:GrammarLexer	access:public	signature:()
GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::GrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:GrammarParser	signature:(TokenStream * input)
GrammarParser	gen_src/GrammarParser.h	/^  GrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:GrammarParser	access:public	signature:(antlr4::TokenStream * input)
GrammarParser	gen_src/GrammarParser.h	/^class  GrammarParser : public antlr4::Parser {$/;"	kind:c	inherits:antlr4::Parser
GrammarParser::CommentContext	gen_src/GrammarParser.h	/^  class  CommentContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::CommentContext::CommentContext	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext::CommentContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::CommentContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::CommentContext::CommentContext	gen_src/GrammarParser.h	/^    CommentContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::CommentContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::CommentContext::TokNonNewline	gen_src/GrammarParser.cpp	/^std::vector<tree::TerminalNode *> GrammarParser::CommentContext::TokNonNewline() {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
GrammarParser::CommentContext::TokNonNewline	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::CommentContext::TokNonNewline(size_t i) {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
GrammarParser::CommentContext::TokNonNewline	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode* TokNonNewline(size_t i);$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
GrammarParser::CommentContext::TokNonNewline	gen_src/GrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokNonNewline();$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
GrammarParser::CommentContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::CommentContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::CommentContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::CommentContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::CommentContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:size_t	signature:() const
GrammarParser::CommentContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::CurrPcContext	gen_src/GrammarParser.h	/^  class  CurrPcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::CurrPcContext::CurrPcContext	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext::CurrPcContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::CurrPcContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::CurrPcContext::CurrPcContext	gen_src/GrammarParser.h	/^    CurrPcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::CurrPcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::CurrPcContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::CurrPcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::CurrPcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::CurrPcContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::CurrPcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::CurrPcContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::CurrPcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::CurrPcContext	typeref:typename:size_t	signature:() const
GrammarParser::CurrPcContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::CurrPcContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprAddSubContext	gen_src/GrammarParser.h	/^  class  ExprAddSubContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext::ExprAddSubContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::ExprAddSubContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprAddSubContext::ExprAddSubContext	gen_src/GrammarParser.h	/^    ExprAddSubContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprAddSubContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprAddSubContext::TokOpBitwise	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprAddSubContext::TokOpMulDivMod	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprAddSubContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprAddSubContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprAddSubContext::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprAddSubContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::ExprAddSubContext::exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::ExprAddSubContext::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
GrammarParser::ExprAddSubContext::exprMulDivModEtc	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
GrammarParser::ExprAddSubContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprAddSubContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprCompareContext	gen_src/GrammarParser.h	/^  class  ExprCompareContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprCompareContext::ExprCompareContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext::ExprCompareContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprCompareContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprCompareContext::ExprCompareContext	gen_src/GrammarParser.h	/^    ExprCompareContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprCompareContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprCompareContext::TokOpAddSub	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprCompareContext::TokOpAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprCompareContext::TokOpAddSub	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprCompareContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprCompareContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprCompareContext::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprCompareContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::ExprCompareContext::exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::ExprCompareContext::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprCompareContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::ExprCompareContext::exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::ExprCompareContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprCompareContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprContext	gen_src/GrammarParser.h	/^  class  ExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprContext::ExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext::ExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprContext::ExprContext	gen_src/GrammarParser.h	/^    ExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprContext::TokOpLogical	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprContext::TokOpLogical	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprContext::expr() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::ExprContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::ExprContext::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::ExprContext::exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::ExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprLogicalContext	gen_src/GrammarParser.h	/^  class  ExprLogicalContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext::ExprLogicalContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::ExprLogicalContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprLogicalContext::ExprLogicalContext	gen_src/GrammarParser.h	/^    ExprLogicalContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprLogicalContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprLogicalContext::TokOpCompare	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprLogicalContext::TokOpCompare	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprLogicalContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprLogicalContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprLogicalContext::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprLogicalContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::ExprLogicalContext::exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::ExprLogicalContext::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprLogicalContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::ExprLogicalContext::exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::ExprLogicalContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprLogicalContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^  class  ExprMulDivModEtcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprMulDivModEtcContext::ExprMulDivModEtcContext	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ExprMulDivModEtcContext::TokOpUnary	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprMulDivModEtcContext::TokOpUnary() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::ExprMulDivModEtcContext::TokOpUnary	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpUnary();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ExprMulDivModEtcContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ExprMulDivModEtcContext::currPc	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext* GrammarParser::ExprMulDivModEtcContext::currPc() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::CurrPcContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::currPc	gen_src/GrammarParser.h	/^    CurrPcContext *currPc();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:CurrPcContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
GrammarParser::ExprMulDivModEtcContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ExprMulDivModEtcContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::ExprMulDivModEtcContext::identName() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::ExprMulDivModEtcContext::numExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
GrammarParser::ExprMulDivModEtcContext::numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
GrammarParser::GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::GrammarParser(TokenStream *input) : Parser(input) {$/;"	kind:f	class:GrammarParser	signature:(TokenStream * input)
GrammarParser::GrammarParser	gen_src/GrammarParser.h	/^  GrammarParser(antlr4::TokenStream *input);$/;"	kind:p	class:GrammarParser	access:public	signature:(antlr4::TokenStream * input)
GrammarParser::IdentNameContext	gen_src/GrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::IdentNameContext::IdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentNameContext::IdentNameContext	gen_src/GrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::IdentNameContext::TokIdent	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::IdentNameContext::TokIdent	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::IdentNameContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::IdentNameContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::IdentNameContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
GrammarParser::IdentNameContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::Initializer	gen_src/GrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:GrammarParser	access:private
GrammarParser::Initializer::Initializer	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer::Initializer() {$/;"	kind:f	class:GrammarParser::Initializer	signature:()
GrammarParser::Initializer::Initializer	gen_src/GrammarParser.h	/^    Initializer();$/;"	kind:p	struct:GrammarParser::Initializer	access:public	signature:()
GrammarParser::InstrArgContext	gen_src/GrammarParser.h	/^  class  InstrArgContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrArgContext::InstrArgContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext::InstrArgContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrArgContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrArgContext::InstrArgContext	gen_src/GrammarParser.h	/^    InstrArgContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrArgContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrArgContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrArgContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrArgContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrArgContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrArgContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrArgContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrArgContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrArgContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrArgContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrArgContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrArgXContext	gen_src/GrammarParser.h	/^  class  InstrArgXContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrArgXContext::InstrArgXContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext::InstrArgXContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrArgXContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrArgXContext::InstrArgXContext	gen_src/GrammarParser.h	/^    InstrArgXContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrArgXContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrArgXContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrArgXContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrArgXContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrArgXContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrArgXContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrArgXContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrArgXContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrArgXContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrArgXContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrArgXContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrBeqContext	gen_src/GrammarParser.h	/^  class  InstrBeqContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrBeqContext::InstrBeqContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext::InstrBeqContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrBeqContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBeqContext::InstrBeqContext	gen_src/GrammarParser.h	/^    InstrBeqContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBeqContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBeqContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBeqContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBeqContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBeqContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrBeqContext::expr() {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::InstrBeqContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::InstrBeqContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBeqContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrBeqContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrBeqContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrBeqContext::identName() {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::InstrBeqContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::InstrBinopContext	gen_src/GrammarParser.h	/^  class  InstrBinopContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrBinopContext::InstrBinopContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext::InstrBinopContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::InstrBinopContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBinopContext::InstrBinopContext	gen_src/GrammarParser.h	/^    InstrBinopContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBinopContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBinopContext::TokBinOp	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrBinopContext::TokBinOp() {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::InstrBinopContext::TokBinOp	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBinOp();$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::InstrBinopContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBinopContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBinopContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBinopContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBinopContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrBinopContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrBneContext	gen_src/GrammarParser.h	/^  class  InstrBneContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrBneContext::InstrBneContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext::InstrBneContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrBneContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBneContext::InstrBneContext	gen_src/GrammarParser.h	/^    InstrBneContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBneContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrBneContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBneContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBneContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrBneContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrBneContext::expr() {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::InstrBneContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::InstrBneContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBneContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrBneContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrBneContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrBneContext::identName() {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::InstrBneContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::InstrCallContext	gen_src/GrammarParser.h	/^  class  InstrCallContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrCallContext::InstrCallContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext::InstrCallContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrCallContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrCallContext::InstrCallContext	gen_src/GrammarParser.h	/^    InstrCallContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrCallContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrCallContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrCallContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrCallContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrCallContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrCallContext::expr() {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::InstrCallContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::InstrCallContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrCallContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrCallContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrCallContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrCallContext::identName() {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::InstrCallContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::InstrConstantContext	gen_src/GrammarParser.h	/^  class  InstrConstantContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrConstantContext::InstrConstantContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext::InstrConstantContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::InstrConstantContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrConstantContext::InstrConstantContext	gen_src/GrammarParser.h	/^    InstrConstantContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrConstantContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrConstantContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrConstantContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrConstantContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrConstantContext::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrConstantContext::expr() {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::InstrConstantContext::expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::InstrConstantContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrConstantContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrConstantContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrDispCharContext	gen_src/GrammarParser.h	/^  class  InstrDispCharContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrDispCharContext::InstrDispCharContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext::InstrDispCharContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::InstrDispCharContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispCharContext::InstrDispCharContext	gen_src/GrammarParser.h	/^    InstrDispCharContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispCharContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispCharContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispCharContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispCharContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispCharContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispCharContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispCharContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispCharContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispCharContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrDispCharContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispCharContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrDispNumContext	gen_src/GrammarParser.h	/^  class  InstrDispNumContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrDispNumContext::InstrDispNumContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext::InstrDispNumContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:GrammarParser::InstrDispNumContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispNumContext::InstrDispNumContext	gen_src/GrammarParser.h	/^    InstrDispNumContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispNumContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispNumContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispNumContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispNumContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispNumContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispNumContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispNumContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispNumContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispNumContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrDispNumContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispNumContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrDispNumUnsignedContext	gen_src/GrammarParser.h	/^  class  InstrDispNumUnsignedContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrDispNumUnsignedContext::InstrDispNumUnsignedContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext::InstrDispNumUnsignedContext(ParserRuleContext *paren/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispNumUnsignedContext::InstrDispNumUnsignedContext	gen_src/GrammarParser.h	/^    InstrDispNumUnsignedContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispNumUnsignedContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispNumUnsignedContext::accept(tree::ParseTreeVisitor *visitor/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispNumUnsignedContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispNumUnsignedContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispNumUnsignedContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrDispNumUnsignedContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrDispStrContext	gen_src/GrammarParser.h	/^  class  InstrDispStrContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrDispStrContext::InstrDispStrContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext::InstrDispStrContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:GrammarParser::InstrDispStrContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispStrContext::InstrDispStrContext	gen_src/GrammarParser.h	/^    InstrDispStrContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispStrContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrDispStrContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispStrContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispStrContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispStrContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispStrContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrDispStrContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispStrContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispStrContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrDispStrContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispStrContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrGetArgSpaceContext	gen_src/GrammarParser.h	/^  class  InstrGetArgSpaceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrGetArgSpaceContext::InstrGetArgSpaceContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext::InstrGetArgSpaceContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetArgSpaceContext::InstrGetArgSpaceContext	gen_src/GrammarParser.h	/^    InstrGetArgSpaceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetArgSpaceContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetArgSpaceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetArgSpaceContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetArgSpaceContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetArgSpaceContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrGetArgSpaceContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrGetNumContext	gen_src/GrammarParser.h	/^  class  InstrGetNumContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrGetNumContext::InstrGetNumContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext::InstrGetNumContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::InstrGetNumContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetNumContext::InstrGetNumContext	gen_src/GrammarParser.h	/^    InstrGetNumContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetNumContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetNumContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetNumContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetNumContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetNumContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetNumContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetNumContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetNumContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetNumContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrGetNumContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetNumContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrGetPcContext	gen_src/GrammarParser.h	/^  class  InstrGetPcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrGetPcContext::InstrGetPcContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext::InstrGetPcContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::InstrGetPcContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetPcContext::InstrGetPcContext	gen_src/GrammarParser.h	/^    InstrGetPcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetPcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrGetPcContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetPcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetPcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetPcContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetPcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrGetPcContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetPcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetPcContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrGetPcContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetPcContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrJumpContext	gen_src/GrammarParser.h	/^  class  InstrJumpContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrJumpContext::InstrJumpContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext::InstrJumpContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrJumpContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrJumpContext::InstrJumpContext	gen_src/GrammarParser.h	/^    InstrJumpContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrJumpContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrJumpContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrJumpContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrJumpContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrJumpContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrJumpContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrJumpContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrJumpContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrJumpContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrJumpContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrJumpContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrLdContext	gen_src/GrammarParser.h	/^  class  InstrLdContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrLdContext::InstrLdContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext::InstrLdContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrLdContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrLdContext::InstrLdContext	gen_src/GrammarParser.h	/^    InstrLdContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrLdContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrLdContext::TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrLdContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::InstrLdContext::TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::InstrLdContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrLdContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrLdContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrLdContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrLdContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrLdContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrLdxContext	gen_src/GrammarParser.h	/^  class  InstrLdxContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrLdxContext::InstrLdxContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext::InstrLdxContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrLdxContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrLdxContext::InstrLdxContext	gen_src/GrammarParser.h	/^    InstrLdxContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrLdxContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrLdxContext::TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrLdxContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::InstrLdxContext::TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::InstrLdxContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrLdxContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrLdxContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrLdxContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrLdxContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrLdxContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrQuitContext	gen_src/GrammarParser.h	/^  class  InstrQuitContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrQuitContext::InstrQuitContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext::InstrQuitContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrQuitContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrQuitContext::InstrQuitContext	gen_src/GrammarParser.h	/^    InstrQuitContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrQuitContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrQuitContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrQuitContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrQuitContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrQuitContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrQuitContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrQuitContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrQuitContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrQuitContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrQuitContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrQuitContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrRetContext	gen_src/GrammarParser.h	/^  class  InstrRetContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrRetContext::InstrRetContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext::InstrRetContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrRetContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrRetContext::InstrRetContext	gen_src/GrammarParser.h	/^    InstrRetContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrRetContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrRetContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrRetContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrRetContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrRetContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrRetContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrRetContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrRetContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrRetContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrRetContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrRetContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrSetArgSpaceContext	gen_src/GrammarParser.h	/^  class  InstrSetArgSpaceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrSetArgSpaceContext::InstrSetArgSpaceContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext::InstrSetArgSpaceContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrSetArgSpaceContext::InstrSetArgSpaceContext	gen_src/GrammarParser.h	/^    InstrSetArgSpaceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrSetArgSpaceContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrSetArgSpaceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrSetArgSpaceContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrSetArgSpaceContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrSetArgSpaceContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrSetArgSpaceContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrStContext	gen_src/GrammarParser.h	/^  class  InstrStContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrStContext::InstrStContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext::InstrStContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrStContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrStContext::InstrStContext	gen_src/GrammarParser.h	/^    InstrStContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrStContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrStContext::TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrStContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::InstrStContext::TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::InstrStContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrStContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrStContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrStContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrStContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrStContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrStxContext	gen_src/GrammarParser.h	/^  class  InstrStxContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrStxContext::InstrStxContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext::InstrStxContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrStxContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrStxContext::InstrStxContext	gen_src/GrammarParser.h	/^    InstrStxContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrStxContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrStxContext::TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrStxContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::InstrStxContext::TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::InstrStxContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrStxContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrStxContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrStxContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrStxContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrStxContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrVarContext	gen_src/GrammarParser.h	/^  class  InstrVarContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrVarContext::InstrVarContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext::InstrVarContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrVarContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrVarContext::InstrVarContext	gen_src/GrammarParser.h	/^    InstrVarContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrVarContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrVarContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrVarContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrVarContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrVarContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrVarContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrVarContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrVarContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrVarContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrVarContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrVarContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstrVarXContext	gen_src/GrammarParser.h	/^  class  InstrVarXContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstrVarXContext::InstrVarXContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext::InstrVarXContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrVarXContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrVarXContext::InstrVarXContext	gen_src/GrammarParser.h	/^    InstrVarXContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrVarXContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstrVarXContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrVarXContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrVarXContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstrVarXContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrVarXContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstrVarXContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrVarXContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrVarXContext	typeref:typename:size_t	signature:() const
GrammarParser::InstrVarXContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrVarXContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstructionContext	gen_src/GrammarParser.h	/^  class  InstructionContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::InstructionContext::InstructionContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext::InstructionContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::InstructionContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstructionContext::InstructionContext	gen_src/GrammarParser.h	/^    InstructionContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstructionContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::InstructionContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstructionContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::InstructionContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::InstructionContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstructionContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:size_t	signature:() const
GrammarParser::InstructionContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::InstructionContext::instrArg	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext* GrammarParser::InstructionContext::instrArg() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrArgContext *	signature:()
GrammarParser::InstructionContext::instrArg	gen_src/GrammarParser.h	/^    InstrArgContext *instrArg();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrArgContext *	access:public	signature:()
GrammarParser::InstructionContext::instrArgX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext* GrammarParser::InstructionContext::instrArgX() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrArgXContext *	signature:()
GrammarParser::InstructionContext::instrArgX	gen_src/GrammarParser.h	/^    InstrArgXContext *instrArgX();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrArgXContext *	access:public	signature:()
GrammarParser::InstructionContext::instrBeq	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext* GrammarParser::InstructionContext::instrBeq() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBeqContext *	signature:()
GrammarParser::InstructionContext::instrBeq	gen_src/GrammarParser.h	/^    InstrBeqContext *instrBeq();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBeqContext *	access:public	signature:()
GrammarParser::InstructionContext::instrBinop	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext* GrammarParser::InstructionContext::instrBinop() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBinopContext *	signature:()
GrammarParser::InstructionContext::instrBinop	gen_src/GrammarParser.h	/^    InstrBinopContext *instrBinop();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBinopContext *	access:public	signature:()
GrammarParser::InstructionContext::instrBne	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext* GrammarParser::InstructionContext::instrBne() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBneContext *	signature:()
GrammarParser::InstructionContext::instrBne	gen_src/GrammarParser.h	/^    InstrBneContext *instrBne();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBneContext *	access:public	signature:()
GrammarParser::InstructionContext::instrCall	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext* GrammarParser::InstructionContext::instrCall() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrCallContext *	signature:()
GrammarParser::InstructionContext::instrCall	gen_src/GrammarParser.h	/^    InstrCallContext *instrCall();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrCallContext *	access:public	signature:()
GrammarParser::InstructionContext::instrConstant	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext* GrammarParser::InstructionContext::instrConstant() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrConstantContext *	signature:()
GrammarParser::InstructionContext::instrConstant	gen_src/GrammarParser.h	/^    InstrConstantContext *instrConstant();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrConstantContext *	access:public	signature:()
GrammarParser::InstructionContext::instrDispChar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext* GrammarParser::InstructionContext::instrDispChar() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispCharContext *	signature:()
GrammarParser::InstructionContext::instrDispChar	gen_src/GrammarParser.h	/^    InstrDispCharContext *instrDispChar();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispCharContext *	access:public	signature:()
GrammarParser::InstructionContext::instrDispNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext* GrammarParser::InstructionContext::instrDispNum() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispNumContext *	signature:()
GrammarParser::InstructionContext::instrDispNum	gen_src/GrammarParser.h	/^    InstrDispNumContext *instrDispNum();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispNumContext *	access:public	signature:()
GrammarParser::InstructionContext::instrDispNumUnsigned	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext* GrammarParser::InstructionContext::instrDispNumUnsig/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispNumUnsignedContext *	signature:()
GrammarParser::InstructionContext::instrDispNumUnsigned	gen_src/GrammarParser.h	/^    InstrDispNumUnsignedContext *instrDispNumUnsigned();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispNumUnsignedContext *	access:public	signature:()
GrammarParser::InstructionContext::instrDispStr	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext* GrammarParser::InstructionContext::instrDispStr() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispStrContext *	signature:()
GrammarParser::InstructionContext::instrDispStr	gen_src/GrammarParser.h	/^    InstrDispStrContext *instrDispStr();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispStrContext *	access:public	signature:()
GrammarParser::InstructionContext::instrGetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext* GrammarParser::InstructionContext::instrGetArgSpace() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetArgSpaceContext *	signature:()
GrammarParser::InstructionContext::instrGetArgSpace	gen_src/GrammarParser.h	/^    InstrGetArgSpaceContext *instrGetArgSpace();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetArgSpaceContext *	access:public	signature:()
GrammarParser::InstructionContext::instrGetNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext* GrammarParser::InstructionContext::instrGetNum() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetNumContext *	signature:()
GrammarParser::InstructionContext::instrGetNum	gen_src/GrammarParser.h	/^    InstrGetNumContext *instrGetNum();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetNumContext *	access:public	signature:()
GrammarParser::InstructionContext::instrGetPc	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext* GrammarParser::InstructionContext::instrGetPc() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetPcContext *	signature:()
GrammarParser::InstructionContext::instrGetPc	gen_src/GrammarParser.h	/^    InstrGetPcContext *instrGetPc();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetPcContext *	access:public	signature:()
GrammarParser::InstructionContext::instrJump	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext* GrammarParser::InstructionContext::instrJump() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrJumpContext *	signature:()
GrammarParser::InstructionContext::instrJump	gen_src/GrammarParser.h	/^    InstrJumpContext *instrJump();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrJumpContext *	access:public	signature:()
GrammarParser::InstructionContext::instrLd	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext* GrammarParser::InstructionContext::instrLd() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrLdContext *	signature:()
GrammarParser::InstructionContext::instrLd	gen_src/GrammarParser.h	/^    InstrLdContext *instrLd();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrLdContext *	access:public	signature:()
GrammarParser::InstructionContext::instrLdx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext* GrammarParser::InstructionContext::instrLdx() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrLdxContext *	signature:()
GrammarParser::InstructionContext::instrLdx	gen_src/GrammarParser.h	/^    InstrLdxContext *instrLdx();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrLdxContext *	access:public	signature:()
GrammarParser::InstructionContext::instrQuit	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext* GrammarParser::InstructionContext::instrQuit() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrQuitContext *	signature:()
GrammarParser::InstructionContext::instrQuit	gen_src/GrammarParser.h	/^    InstrQuitContext *instrQuit();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrQuitContext *	access:public	signature:()
GrammarParser::InstructionContext::instrRet	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext* GrammarParser::InstructionContext::instrRet() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrRetContext *	signature:()
GrammarParser::InstructionContext::instrRet	gen_src/GrammarParser.h	/^    InstrRetContext *instrRet();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrRetContext *	access:public	signature:()
GrammarParser::InstructionContext::instrSetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext* GrammarParser::InstructionContext::instrSetArgSpace() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrSetArgSpaceContext *	signature:()
GrammarParser::InstructionContext::instrSetArgSpace	gen_src/GrammarParser.h	/^    InstrSetArgSpaceContext *instrSetArgSpace();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrSetArgSpaceContext *	access:public	signature:()
GrammarParser::InstructionContext::instrSt	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext* GrammarParser::InstructionContext::instrSt() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrStContext *	signature:()
GrammarParser::InstructionContext::instrSt	gen_src/GrammarParser.h	/^    InstrStContext *instrSt();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrStContext *	access:public	signature:()
GrammarParser::InstructionContext::instrStx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext* GrammarParser::InstructionContext::instrStx() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrStxContext *	signature:()
GrammarParser::InstructionContext::instrStx	gen_src/GrammarParser.h	/^    InstrStxContext *instrStx();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrStxContext *	access:public	signature:()
GrammarParser::InstructionContext::instrVar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext* GrammarParser::InstructionContext::instrVar() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrVarContext *	signature:()
GrammarParser::InstructionContext::instrVar	gen_src/GrammarParser.h	/^    InstrVarContext *instrVar();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrVarContext *	access:public	signature:()
GrammarParser::InstructionContext::instrVarX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext* GrammarParser::InstructionContext::instrVarX() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrVarXContext *	signature:()
GrammarParser::InstructionContext::instrVarX	gen_src/GrammarParser.h	/^    InstrVarXContext *instrVarX();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrVarXContext *	access:public	signature:()
GrammarParser::LabelContext	gen_src/GrammarParser.h	/^  class  LabelContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::LabelContext::LabelContext	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext::LabelContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LabelContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::LabelContext::LabelContext	gen_src/GrammarParser.h	/^    LabelContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LabelContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::LabelContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LabelContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::LabelContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::LabelContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LabelContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:size_t	signature:() const
GrammarParser::LabelContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::LabelContext::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::LabelContext::identName() {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::LabelContext::identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::LexWhitespace	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::LineContext	gen_src/GrammarParser.h	/^  class  LineContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::LineContext::LineContext	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext::LineContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LineContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::LineContext::LineContext	gen_src/GrammarParser.h	/^    LineContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LineContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::LineContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LineContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::LineContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::LineContext::comment	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext* GrammarParser::LineContext::comment() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::CommentContext *	signature:()
GrammarParser::LineContext::comment	gen_src/GrammarParser.h	/^    CommentContext *comment();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:CommentContext *	access:public	signature:()
GrammarParser::LineContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LineContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:size_t	signature:() const
GrammarParser::LineContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::LineContext::instruction	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext* GrammarParser::LineContext::instruction() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::InstructionContext *	signature:()
GrammarParser::LineContext::instruction	gen_src/GrammarParser.h	/^    InstructionContext *instruction();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:InstructionContext *	access:public	signature:()
GrammarParser::LineContext::label	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext* GrammarParser::LineContext::label() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::LabelContext *	signature:()
GrammarParser::LineContext::label	gen_src/GrammarParser.h	/^    LabelContext *label();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:LabelContext *	access:public	signature:()
GrammarParser::NumExprContext	gen_src/GrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::NumExprContext::NumExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::NumExprContext::NumExprContext	gen_src/GrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::NumExprContext::TokDecNum	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
GrammarParser::NumExprContext::TokDecNum	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
GrammarParser::NumExprContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::NumExprContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::NumExprContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
GrammarParser::NumExprContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ProgramContext	gen_src/GrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
GrammarParser::ProgramContext::ProgramContext	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
GrammarParser::ProgramContext::ProgramContext	gen_src/GrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
GrammarParser::ProgramContext::accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
GrammarParser::ProgramContext::accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
GrammarParser::ProgramContext::getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
GrammarParser::ProgramContext::getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
GrammarParser::ProgramContext::line	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext* GrammarParser::ProgramContext::line(size_t i) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:GrammarParser::LineContext *	signature:(size_t i)
GrammarParser::ProgramContext::line	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::LineContext *> GrammarParser::ProgramContext::line() {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:std::vector<GrammarParser::LineContext * >	signature:()
GrammarParser::ProgramContext::line	gen_src/GrammarParser.h	/^    LineContext* line(size_t i);$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:LineContext *	access:public	signature:(size_t i)
GrammarParser::ProgramContext::line	gen_src/GrammarParser.h	/^    std::vector<LineContext *> line();$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:std::vector<LineContext * >	access:public	signature:()
GrammarParser::RuleComment	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleCurrPc	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExpr	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprAddSub	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprCompare	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprLogical	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleExprMulDivModEtc	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleIdentName	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrArg	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrArgX	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrBeq	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrBinop	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrBne	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrCall	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrConstant	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrDispChar	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrDispNum	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrDispNumUnsigned	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrDispStr	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrGetArgSpace	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrGetNum	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrGetPc	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrJump	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrLd	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrLdx	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrQuit	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrRet	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrSetArgSpace	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrSt	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrStx	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrVar	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstrVarX	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleInstruction	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleLabel	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleLine	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleNumExpr	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::RuleProgram	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
GrammarParser::T__0	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__1	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__10	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__11	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__12	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__13	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__14	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__15	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__16	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__17	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__18	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__19	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__2	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__20	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__21	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__22	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__23	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__24	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__25	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__26	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__27	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__28	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__29	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__3	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__4	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__5	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__6	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__7	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__8	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::T__9	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokBinOp	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokBuiltinTypename	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokDecNum	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokIdent	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokNonNewline	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpAddSub	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpBitwise	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpCompare	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpLogical	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpMulDivMod	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::TokOpUnary	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
GrammarParser::__anonea8e543f0103	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
GrammarParser::__anonea8e543f0203	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
GrammarParser::_atn	gen_src/GrammarParser.cpp	/^atn::ATN GrammarParser::_atn;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::ATN
GrammarParser::_atn	gen_src/GrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::ATN	access:private
GrammarParser::_decisionToDFA	gen_src/GrammarParser.cpp	/^std::vector<dfa::DFA> GrammarParser::_decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<dfa::DFA>
GrammarParser::_decisionToDFA	gen_src/GrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
GrammarParser::_init	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer GrammarParser::_init;$/;"	kind:m	class:GrammarParser	typeref:typename:GrammarParser::Initializer
GrammarParser::_init	gen_src/GrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarParser	typeref:typename:Initializer	access:private
GrammarParser::_literalNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_literalNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_literalNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_ruleNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_ruleNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_ruleNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_serializedATN	gen_src/GrammarParser.cpp	/^std::vector<uint16_t> GrammarParser::_serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>
GrammarParser::_serializedATN	gen_src/GrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>	access:private
GrammarParser::_sharedContextCache	gen_src/GrammarParser.cpp	/^atn::PredictionContextCache GrammarParser::_sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::PredictionContextCache
GrammarParser::_sharedContextCache	gen_src/GrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
GrammarParser::_symbolicNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_symbolicNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_symbolicNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_tokenNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
GrammarParser::_tokenNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
GrammarParser::_vocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary GrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
GrammarParser::_vocabulary	gen_src/GrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
GrammarParser::comment	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext* GrammarParser::comment() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::CommentContext *	signature:()
GrammarParser::comment	gen_src/GrammarParser.h	/^  CommentContext* comment();$/;"	kind:p	class:GrammarParser	typeref:typename:CommentContext *	access:public	signature:()
GrammarParser::currPc	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext* GrammarParser::currPc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::CurrPcContext *	signature:()
GrammarParser::currPc	gen_src/GrammarParser.h	/^  CurrPcContext* currPc();$/;"	kind:p	class:GrammarParser	typeref:typename:CurrPcContext *	access:public	signature:()
GrammarParser::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:()
GrammarParser::expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:(int precedence)
GrammarParser::expr	gen_src/GrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:()
GrammarParser::expr	gen_src/GrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
GrammarParser::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
GrammarParser::exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:(int precedence)
GrammarParser::exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
GrammarParser::exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
GrammarParser::exprAddSubSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
GrammarParser::exprAddSubSempred	gen_src/GrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
GrammarParser::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
GrammarParser::exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:(int precedence)
GrammarParser::exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
GrammarParser::exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
GrammarParser::exprCompareSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
GrammarParser::exprCompareSempred	gen_src/GrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
GrammarParser::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
GrammarParser::exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:(int precedence)
GrammarParser::exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
GrammarParser::exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
GrammarParser::exprLogicalSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
GrammarParser::exprLogicalSempred	gen_src/GrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
GrammarParser::exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
GrammarParser::exprMulDivModEtc	gen_src/GrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
GrammarParser::exprSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
GrammarParser::exprSempred	gen_src/GrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
GrammarParser::getATN	gen_src/GrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:GrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
GrammarParser::getGrammarFileName	gen_src/GrammarParser.cpp	/^std::string GrammarParser::getGrammarFileName() const {$/;"	kind:f	class:GrammarParser	typeref:typename:std::string	signature:() const
GrammarParser::getGrammarFileName	gen_src/GrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:std::string	access:public	signature:() const
GrammarParser::getRuleNames	gen_src/GrammarParser.cpp	/^const std::vector<std::string>& GrammarParser::getRuleNames() const {$/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
GrammarParser::getRuleNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarParser::getTokenNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
GrammarParser::getVocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary& GrammarParser::getVocabulary() const {$/;"	kind:f	class:GrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
GrammarParser::getVocabulary	gen_src/GrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
GrammarParser::identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::identName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentNameContext *	signature:()
GrammarParser::identName	gen_src/GrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
GrammarParser::instrArg	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext* GrammarParser::instrArg() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrArgContext *	signature:()
GrammarParser::instrArg	gen_src/GrammarParser.h	/^  InstrArgContext* instrArg();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrArgContext *	access:public	signature:()
GrammarParser::instrArgX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext* GrammarParser::instrArgX() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrArgXContext *	signature:()
GrammarParser::instrArgX	gen_src/GrammarParser.h	/^  InstrArgXContext* instrArgX();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrArgXContext *	access:public	signature:()
GrammarParser::instrBeq	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext* GrammarParser::instrBeq() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBeqContext *	signature:()
GrammarParser::instrBeq	gen_src/GrammarParser.h	/^  InstrBeqContext* instrBeq();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBeqContext *	access:public	signature:()
GrammarParser::instrBinop	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext* GrammarParser::instrBinop() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBinopContext *	signature:()
GrammarParser::instrBinop	gen_src/GrammarParser.h	/^  InstrBinopContext* instrBinop();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBinopContext *	access:public	signature:()
GrammarParser::instrBne	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext* GrammarParser::instrBne() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBneContext *	signature:()
GrammarParser::instrBne	gen_src/GrammarParser.h	/^  InstrBneContext* instrBne();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBneContext *	access:public	signature:()
GrammarParser::instrCall	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext* GrammarParser::instrCall() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrCallContext *	signature:()
GrammarParser::instrCall	gen_src/GrammarParser.h	/^  InstrCallContext* instrCall();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrCallContext *	access:public	signature:()
GrammarParser::instrConstant	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext* GrammarParser::instrConstant() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrConstantContext *	signature:()
GrammarParser::instrConstant	gen_src/GrammarParser.h	/^  InstrConstantContext* instrConstant();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrConstantContext *	access:public	signature:()
GrammarParser::instrDispChar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext* GrammarParser::instrDispChar() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispCharContext *	signature:()
GrammarParser::instrDispChar	gen_src/GrammarParser.h	/^  InstrDispCharContext* instrDispChar();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispCharContext *	access:public	signature:()
GrammarParser::instrDispNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext* GrammarParser::instrDispNum() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispNumContext *	signature:()
GrammarParser::instrDispNum	gen_src/GrammarParser.h	/^  InstrDispNumContext* instrDispNum();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispNumContext *	access:public	signature:()
GrammarParser::instrDispNumUnsigned	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext* GrammarParser::instrDispNumUnsigned() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispNumUnsignedContext *	signature:()
GrammarParser::instrDispNumUnsigned	gen_src/GrammarParser.h	/^  InstrDispNumUnsignedContext* instrDispNumUnsigned();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispNumUnsignedContext *	access:public	signature:()
GrammarParser::instrDispStr	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext* GrammarParser::instrDispStr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispStrContext *	signature:()
GrammarParser::instrDispStr	gen_src/GrammarParser.h	/^  InstrDispStrContext* instrDispStr();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispStrContext *	access:public	signature:()
GrammarParser::instrGetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext* GrammarParser::instrGetArgSpace() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetArgSpaceContext *	signature:()
GrammarParser::instrGetArgSpace	gen_src/GrammarParser.h	/^  InstrGetArgSpaceContext* instrGetArgSpace();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetArgSpaceContext *	access:public	signature:()
GrammarParser::instrGetNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext* GrammarParser::instrGetNum() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetNumContext *	signature:()
GrammarParser::instrGetNum	gen_src/GrammarParser.h	/^  InstrGetNumContext* instrGetNum();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetNumContext *	access:public	signature:()
GrammarParser::instrGetPc	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext* GrammarParser::instrGetPc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetPcContext *	signature:()
GrammarParser::instrGetPc	gen_src/GrammarParser.h	/^  InstrGetPcContext* instrGetPc();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetPcContext *	access:public	signature:()
GrammarParser::instrJump	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext* GrammarParser::instrJump() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrJumpContext *	signature:()
GrammarParser::instrJump	gen_src/GrammarParser.h	/^  InstrJumpContext* instrJump();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrJumpContext *	access:public	signature:()
GrammarParser::instrLd	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext* GrammarParser::instrLd() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrLdContext *	signature:()
GrammarParser::instrLd	gen_src/GrammarParser.h	/^  InstrLdContext* instrLd();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrLdContext *	access:public	signature:()
GrammarParser::instrLdx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext* GrammarParser::instrLdx() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrLdxContext *	signature:()
GrammarParser::instrLdx	gen_src/GrammarParser.h	/^  InstrLdxContext* instrLdx();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrLdxContext *	access:public	signature:()
GrammarParser::instrQuit	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext* GrammarParser::instrQuit() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrQuitContext *	signature:()
GrammarParser::instrQuit	gen_src/GrammarParser.h	/^  InstrQuitContext* instrQuit();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrQuitContext *	access:public	signature:()
GrammarParser::instrRet	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext* GrammarParser::instrRet() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrRetContext *	signature:()
GrammarParser::instrRet	gen_src/GrammarParser.h	/^  InstrRetContext* instrRet();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrRetContext *	access:public	signature:()
GrammarParser::instrSetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext* GrammarParser::instrSetArgSpace() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrSetArgSpaceContext *	signature:()
GrammarParser::instrSetArgSpace	gen_src/GrammarParser.h	/^  InstrSetArgSpaceContext* instrSetArgSpace();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrSetArgSpaceContext *	access:public	signature:()
GrammarParser::instrSt	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext* GrammarParser::instrSt() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrStContext *	signature:()
GrammarParser::instrSt	gen_src/GrammarParser.h	/^  InstrStContext* instrSt();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrStContext *	access:public	signature:()
GrammarParser::instrStx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext* GrammarParser::instrStx() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrStxContext *	signature:()
GrammarParser::instrStx	gen_src/GrammarParser.h	/^  InstrStxContext* instrStx();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrStxContext *	access:public	signature:()
GrammarParser::instrVar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext* GrammarParser::instrVar() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrVarContext *	signature:()
GrammarParser::instrVar	gen_src/GrammarParser.h	/^  InstrVarContext* instrVar();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrVarContext *	access:public	signature:()
GrammarParser::instrVarX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext* GrammarParser::instrVarX() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrVarXContext *	signature:()
GrammarParser::instrVarX	gen_src/GrammarParser.h	/^  InstrVarXContext* instrVarX();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrVarXContext *	access:public	signature:()
GrammarParser::instruction	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext* GrammarParser::instruction() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstructionContext *	signature:()
GrammarParser::instruction	gen_src/GrammarParser.h	/^  InstructionContext* instruction();$/;"	kind:p	class:GrammarParser	typeref:typename:InstructionContext *	access:public	signature:()
GrammarParser::label	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext* GrammarParser::label() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LabelContext *	signature:()
GrammarParser::label	gen_src/GrammarParser.h	/^  LabelContext* label();$/;"	kind:p	class:GrammarParser	typeref:typename:LabelContext *	access:public	signature:()
GrammarParser::line	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext* GrammarParser::line() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LineContext *	signature:()
GrammarParser::line	gen_src/GrammarParser.h	/^  LineContext* line();$/;"	kind:p	class:GrammarParser	typeref:typename:LineContext *	access:public	signature:()
GrammarParser::numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::numExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NumExprContext *	signature:()
GrammarParser::numExpr	gen_src/GrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
GrammarParser::program	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext* GrammarParser::program() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ProgramContext *	signature:()
GrammarParser::program	gen_src/GrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:GrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
GrammarParser::sempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
GrammarParser::sempred	gen_src/GrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
GrammarParser::~GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::~GrammarParser() {$/;"	kind:f	class:GrammarParser	signature:()
GrammarParser::~GrammarParser	gen_src/GrammarParser.h	/^  ~GrammarParser();$/;"	kind:p	class:GrammarParser	access:public	signature:()
GrammarVisitor	gen_src/GrammarVisitor.h	/^class  GrammarVisitor : public antlr4::tree::AbstractParseTreeVisitor {$/;"	kind:c	inherits:antlr4::tree::AbstractParseTreeVisitor
GrammarVisitor::visitComment	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitComment(GrammarParser::CommentContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * context)
GrammarVisitor::visitCurrPc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitCurrPc(GrammarParser::CurrPcContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * context)
GrammarVisitor::visitExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * context)
GrammarVisitor::visitExprAddSub	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * context)
GrammarVisitor::visitExprCompare	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * context)
GrammarVisitor::visitExprLogical	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * context)
GrammarVisitor::visitExprMulDivModEtc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * context)
GrammarVisitor::visitIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * context)
GrammarVisitor::visitInstrArg	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrArg(GrammarParser::InstrArgContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * context)
GrammarVisitor::visitInstrArgX	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrArgX(GrammarParser::InstrArgXContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * context)
GrammarVisitor::visitInstrBeq	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBeq(GrammarParser::InstrBeqContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * context)
GrammarVisitor::visitInstrBinop	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBinop(GrammarParser::InstrBinopContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * context)
GrammarVisitor::visitInstrBne	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBne(GrammarParser::InstrBneContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * context)
GrammarVisitor::visitInstrCall	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrCall(GrammarParser::InstrCallContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * context)
GrammarVisitor::visitInstrConstant	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrConstant(GrammarParser::InstrConstantContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * context)
GrammarVisitor::visitInstrDispChar	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispChar(GrammarParser::InstrDispCharContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * context)
GrammarVisitor::visitInstrDispNum	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispNum(GrammarParser::InstrDispNumContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * context)
GrammarVisitor::visitInstrDispNumUnsigned	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispNumUnsigned(GrammarParser::InstrDispNumUnsignedContext */;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * context)
GrammarVisitor::visitInstrDispStr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispStr(GrammarParser::InstrDispStrContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * context)
GrammarVisitor::visitInstrGetArgSpace	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetArgSpace(GrammarParser::InstrGetArgSpaceContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * context)
GrammarVisitor::visitInstrGetNum	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetNum(GrammarParser::InstrGetNumContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * context)
GrammarVisitor::visitInstrGetPc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetPc(GrammarParser::InstrGetPcContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * context)
GrammarVisitor::visitInstrJump	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrJump(GrammarParser::InstrJumpContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * context)
GrammarVisitor::visitInstrLd	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrLd(GrammarParser::InstrLdContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * context)
GrammarVisitor::visitInstrLdx	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrLdx(GrammarParser::InstrLdxContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * context)
GrammarVisitor::visitInstrQuit	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrQuit(GrammarParser::InstrQuitContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * context)
GrammarVisitor::visitInstrRet	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrRet(GrammarParser::InstrRetContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * context)
GrammarVisitor::visitInstrSetArgSpace	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrSetArgSpace(GrammarParser::InstrSetArgSpaceContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * context)
GrammarVisitor::visitInstrSt	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrSt(GrammarParser::InstrStContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * context)
GrammarVisitor::visitInstrStx	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrStx(GrammarParser::InstrStxContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * context)
GrammarVisitor::visitInstrVar	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrVar(GrammarParser::InstrVarContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * context)
GrammarVisitor::visitInstrVarX	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrVarX(GrammarParser::InstrVarXContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * context)
GrammarVisitor::visitInstruction	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstruction(GrammarParser::InstructionContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * context)
GrammarVisitor::visitLabel	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLabel(GrammarParser::LabelContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * context)
GrammarVisitor::visitLine	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLine(GrammarParser::LineContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * context)
GrammarVisitor::visitNumExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * context)
GrammarVisitor::visitProgram	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * context)
Ident	ident_table_class.hpp	/^typedef std::string* Ident;$/;"	kind:t	typeref:typename:std::string *
IdentNameContext	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext::IdentNameContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::IdentNameContext	signature:(ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/GrammarParser.h	/^    IdentNameContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::IdentNameContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
IdentNameContext	gen_src/GrammarParser.h	/^  class  IdentNameContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
IdentTable	ident_table_class.hpp	/^	inline IdentTable()$/;"	kind:f	class:IdentTable	access:public	signature:()
IdentTable	ident_table_class.hpp	/^class IdentTable$/;"	kind:c
IdentTable::IdentTable	ident_table_class.hpp	/^	inline IdentTable()$/;"	kind:f	class:IdentTable	access:public	signature:()
IdentTable::__table	ident_table_class.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:IdentTable	typeref:typename:std::map<Ident,Type>	access:private
IdentTable::at	ident_table_class.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
IdentTable::at	ident_table_class.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
IdentTable::contains	ident_table_class.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
IdentTable::gen_getter_by_con_ref	ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:IdentTable	access:public	signature:(table)
IdentTable::insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
IdentTable::insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
Initializer	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer::Initializer() {$/;"	kind:f	class:GrammarLexer::Initializer	signature:()
Initializer	gen_src/GrammarLexer.h	/^    Initializer();$/;"	kind:p	struct:GrammarLexer::Initializer	access:public	signature:()
Initializer	gen_src/GrammarLexer.h	/^  struct Initializer {$/;"	kind:s	class:GrammarLexer	access:private
Initializer	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer::Initializer() {$/;"	kind:f	class:GrammarParser::Initializer	signature:()
Initializer	gen_src/GrammarParser.h	/^    Initializer();$/;"	kind:p	struct:GrammarParser::Initializer	access:public	signature:()
Initializer	gen_src/GrammarParser.h	/^  struct Initializer {$/;"	kind:s	class:GrammarParser	access:private
InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
InstrArgContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext::InstrArgContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrArgContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrArgContext	gen_src/GrammarParser.h	/^    InstrArgContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrArgContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrArgContext	gen_src/GrammarParser.h	/^  class  InstrArgContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrArgXContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext::InstrArgXContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrArgXContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrArgXContext	gen_src/GrammarParser.h	/^    InstrArgXContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrArgXContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrArgXContext	gen_src/GrammarParser.h	/^  class  InstrArgXContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrBeqContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext::InstrBeqContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrBeqContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrBeqContext	gen_src/GrammarParser.h	/^    InstrBeqContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBeqContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrBeqContext	gen_src/GrammarParser.h	/^  class  InstrBeqContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrBinopContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext::InstrBinopContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::InstrBinopContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrBinopContext	gen_src/GrammarParser.h	/^    InstrBinopContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBinopContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrBinopContext	gen_src/GrammarParser.h	/^  class  InstrBinopContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrBneContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext::InstrBneContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrBneContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrBneContext	gen_src/GrammarParser.h	/^    InstrBneContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrBneContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrBneContext	gen_src/GrammarParser.h	/^  class  InstrBneContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrCallContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext::InstrCallContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrCallContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrCallContext	gen_src/GrammarParser.h	/^    InstrCallContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrCallContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrCallContext	gen_src/GrammarParser.h	/^  class  InstrCallContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrConstantContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext::InstrConstantContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::InstrConstantContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrConstantContext	gen_src/GrammarParser.h	/^    InstrConstantContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrConstantContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrConstantContext	gen_src/GrammarParser.h	/^  class  InstrConstantContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrDispCharContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext::InstrDispCharContext(ParserRuleContext *parent, size_t invo/;"	kind:f	class:GrammarParser::InstrDispCharContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrDispCharContext	gen_src/GrammarParser.h	/^    InstrDispCharContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispCharContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrDispCharContext	gen_src/GrammarParser.h	/^  class  InstrDispCharContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrDispNumContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext::InstrDispNumContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:GrammarParser::InstrDispNumContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrDispNumContext	gen_src/GrammarParser.h	/^    InstrDispNumContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispNumContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrDispNumContext	gen_src/GrammarParser.h	/^  class  InstrDispNumContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrDispNumUnsignedContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext::InstrDispNumUnsignedContext(ParserRuleContext *paren/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrDispNumUnsignedContext	gen_src/GrammarParser.h	/^    InstrDispNumUnsignedContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrDispNumUnsignedContext	gen_src/GrammarParser.h	/^  class  InstrDispNumUnsignedContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrDispStrContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext::InstrDispStrContext(ParserRuleContext *parent, size_t invoki/;"	kind:f	class:GrammarParser::InstrDispStrContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrDispStrContext	gen_src/GrammarParser.h	/^    InstrDispStrContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrDispStrContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrDispStrContext	gen_src/GrammarParser.h	/^  class  InstrDispStrContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrGetArgSpaceContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext::InstrGetArgSpaceContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrGetArgSpaceContext	gen_src/GrammarParser.h	/^    InstrGetArgSpaceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrGetArgSpaceContext	gen_src/GrammarParser.h	/^  class  InstrGetArgSpaceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrGetNumContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext::InstrGetNumContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::InstrGetNumContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrGetNumContext	gen_src/GrammarParser.h	/^    InstrGetNumContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetNumContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrGetNumContext	gen_src/GrammarParser.h	/^  class  InstrGetNumContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrGetPcContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext::InstrGetPcContext(ParserRuleContext *parent, size_t invokingSt/;"	kind:f	class:GrammarParser::InstrGetPcContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrGetPcContext	gen_src/GrammarParser.h	/^    InstrGetPcContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrGetPcContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrGetPcContext	gen_src/GrammarParser.h	/^  class  InstrGetPcContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrJumpContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext::InstrJumpContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrJumpContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrJumpContext	gen_src/GrammarParser.h	/^    InstrJumpContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrJumpContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrJumpContext	gen_src/GrammarParser.h	/^  class  InstrJumpContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrLdContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext::InstrLdContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrLdContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrLdContext	gen_src/GrammarParser.h	/^    InstrLdContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrLdContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrLdContext	gen_src/GrammarParser.h	/^  class  InstrLdContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrLdxContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext::InstrLdxContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrLdxContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrLdxContext	gen_src/GrammarParser.h	/^    InstrLdxContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrLdxContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrLdxContext	gen_src/GrammarParser.h	/^  class  InstrLdxContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrQuitContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext::InstrQuitContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrQuitContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrQuitContext	gen_src/GrammarParser.h	/^    InstrQuitContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrQuitContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrQuitContext	gen_src/GrammarParser.h	/^  class  InstrQuitContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrRetContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext::InstrRetContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrRetContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrRetContext	gen_src/GrammarParser.h	/^    InstrRetContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrRetContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrRetContext	gen_src/GrammarParser.h	/^  class  InstrRetContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrSetArgSpaceContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext::InstrSetArgSpaceContext(ParserRuleContext *parent, size_/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrSetArgSpaceContext	gen_src/GrammarParser.h	/^    InstrSetArgSpaceContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrSetArgSpaceContext	gen_src/GrammarParser.h	/^  class  InstrSetArgSpaceContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrStContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext::InstrStContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrStContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrStContext	gen_src/GrammarParser.h	/^    InstrStContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrStContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrStContext	gen_src/GrammarParser.h	/^  class  InstrStContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrStxContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext::InstrStxContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrStxContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrStxContext	gen_src/GrammarParser.h	/^    InstrStxContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrStxContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrStxContext	gen_src/GrammarParser.h	/^  class  InstrStxContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrVarContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext::InstrVarContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::InstrVarContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrVarContext	gen_src/GrammarParser.h	/^    InstrVarContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrVarContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrVarContext	gen_src/GrammarParser.h	/^  class  InstrVarContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstrVarXContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext::InstrVarXContext(ParserRuleContext *parent, size_t invokingStat/;"	kind:f	class:GrammarParser::InstrVarXContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstrVarXContext	gen_src/GrammarParser.h	/^    InstrVarXContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstrVarXContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstrVarXContext	gen_src/GrammarParser.h	/^  class  InstrVarXContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
InstructionContext	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext::InstructionContext(ParserRuleContext *parent, size_t invoking/;"	kind:f	class:GrammarParser::InstructionContext	signature:(ParserRuleContext * parent,size_t invokingState)
InstructionContext	gen_src/GrammarParser.h	/^    InstructionContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::InstructionContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
InstructionContext	gen_src/GrammarParser.h	/^  class  InstructionContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
LabelContext	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext::LabelContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LabelContext	signature:(ParserRuleContext * parent,size_t invokingState)
LabelContext	gen_src/GrammarParser.h	/^    LabelContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LabelContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
LabelContext	gen_src/GrammarParser.h	/^  class  LabelContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
LexWhitespace	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
LexWhitespace	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
LineContext	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext::LineContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::LineContext	signature:(ParserRuleContext * parent,size_t invokingState)
LineContext	gen_src/GrammarParser.h	/^    LineContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::LineContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
LineContext	gen_src/GrammarParser.h	/^  class  LineContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
Mul	assembler_class.hpp	/^	Mul,$/;"	kind:e	enum:VmInstrBinOp	access:public
NumExprContext	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext::NumExprContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::NumExprContext	signature:(ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/GrammarParser.h	/^    NumExprContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::NumExprContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
NumExprContext	gen_src/GrammarParser.h	/^  class  NumExprContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
OneLevelTable	scoped_ident_table_class.hpp	/^	typedef IdentTable<Type> OneLevelTable;$/;"	kind:t	class:ScopedIdentTable	typeref:typename:IdentTable<Type>	access:public
PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
ProgramContext	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext::ProgramContext(ParserRuleContext *parent, size_t invokingState)$/;"	kind:f	class:GrammarParser::ProgramContext	signature:(ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/GrammarParser.h	/^    ProgramContext(antlr4::ParserRuleContext *parent, size_t invokingState);$/;"	kind:p	class:GrammarParser::ProgramContext	access:public	signature:(antlr4::ParserRuleContext * parent,size_t invokingState)
ProgramContext	gen_src/GrammarParser.h	/^  class  ProgramContext : public antlr4::ParserRuleContext {$/;"	kind:c	class:GrammarParser	inherits:antlr4::ParserRuleContext	access:public
RuleComment	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleCurrPc	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExpr	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprAddSub	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprCompare	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprLogical	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleExprMulDivModEtc	gen_src/GrammarParser.h	/^    RuleExprCompare = 31, RuleExprAddSub = 32, RuleExprMulDivModEtc = 33, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleIdentName	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrArg	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrArgX	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrBeq	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrBinop	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrBne	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrCall	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrConstant	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrDispChar	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrDispNum	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrDispNumUnsigned	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrDispStr	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrGetArgSpace	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrGetNum	gen_src/GrammarParser.h	/^    RuleInstrDispChar = 24, RuleInstrDispStr = 25, RuleInstrGetNum = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrGetPc	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrJump	gen_src/GrammarParser.h	/^    RuleInstrJump = 12, RuleInstrBeq = 13, RuleInstrBne = 14, RuleInstrCall = 15, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrLd	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrLdx	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrQuit	gen_src/GrammarParser.h	/^    RuleInstrQuit = 27, RuleComment = 28, RuleExpr = 29, RuleExprLogical = 30, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrRet	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrSetArgSpace	gen_src/GrammarParser.h	/^    RuleInstrGetArgSpace = 9, RuleInstrSetArgSpace = 10, RuleInstrGetPc = 11, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrSt	gen_src/GrammarParser.h	/^    RuleInstrRet = 16, RuleInstrLd = 17, RuleInstrLdx = 18, RuleInstrSt = 19, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrStx	gen_src/GrammarParser.h	/^    RuleInstrStx = 20, RuleInstrBinop = 21, RuleInstrDispNum = 22, RuleInstrDispNumUnsigned = 23/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrVar	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstrVarX	gen_src/GrammarParser.h	/^    RuleInstrArg = 5, RuleInstrArgX = 6, RuleInstrVar = 7, RuleInstrVarX = 8, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleInstruction	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleLabel	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleLine	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleNumExpr	gen_src/GrammarParser.h	/^    RuleIdentName = 34, RuleNumExpr = 35, RuleCurrPc = 36$/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
RuleProgram	gen_src/GrammarParser.h	/^    RuleProgram = 0, RuleLine = 1, RuleLabel = 2, RuleInstruction = 3, RuleInstrConstant = 4, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0203	access:public
S16	assembler_class.hpp	/^	S16,$/;"	kind:e	enum:VmInstrLdStOp	access:public
S32	assembler_class.hpp	/^	S32,$/;"	kind:e	enum:VmInstrLdStOp	access:public
S8	assembler_class.hpp	/^	S8$/;"	kind:e	enum:VmInstrLdStOp	access:public
SDiv	assembler_class.hpp	/^	SDiv,$/;"	kind:e	enum:VmInstrBinOp	access:public
SMod	assembler_class.hpp	/^	SMod,$/;"	kind:e	enum:VmInstrBinOp	access:public
ScopedIdentTable	scoped_ident_table_class.hpp	/^	inline ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
ScopedIdentTable	scoped_ident_table_class.hpp	/^class ScopedIdentTable$/;"	kind:c
ScopedIdentTable::OneLevelTable	scoped_ident_table_class.hpp	/^	typedef IdentTable<Type> OneLevelTable;$/;"	kind:t	class:ScopedIdentTable	typeref:typename:IdentTable<Type>	access:public
ScopedIdentTable::ScopedIdentTable	scoped_ident_table_class.hpp	/^	inline ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
ScopedIdentTable::__scope_num	scoped_ident_table_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:protected
ScopedIdentTable::__table	scoped_ident_table_class.hpp	/^	std::vector<OneLevelTable> __table;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:std::vector<OneLevelTable>	access:protected
ScopedIdentTable::at	scoped_ident_table_class.hpp	/^	inline auto& at(size_t table_index)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:auto &	access:public	signature:(size_t table_index)
ScopedIdentTable::at	scoped_ident_table_class.hpp	/^	inline const auto& at(size_t table_index) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:const auto &	access:public	signature:(size_t table_index) const
ScopedIdentTable::builtin_scope_level	scoped_ident_table_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
ScopedIdentTable::find	scoped_ident_table_class.hpp	/^	Type* find(Ident some_name) __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
ScopedIdentTable::find_in_this_level	scoped_ident_table_class.hpp	/^	inline Type* find_in_this_level(Ident some_name)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
ScopedIdentTable::gen_getter_by_con_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
ScopedIdentTable::gen_getter_by_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
ScopedIdentTable::gen_getter_by_val	scoped_ident_table_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(scope_num)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, $/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,const Type & to_insert_or_assign)
ScopedIdentTable::insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,Type && to_insert_or_assign)
ScopedIdentTable::mkscope	scoped_ident_table_class.hpp	/^	void mkscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
ScopedIdentTable::name_is_builtin	scoped_ident_table_class.hpp	/^	bool name_is_builtin(Ident some_name) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
ScopedIdentTable::not_found_level	scoped_ident_table_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
ScopedIdentTable::rmscope	scoped_ident_table_class.hpp	/^	void rmscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
ScopedIdentTable::scope_lev	scoped_ident_table_class.hpp	/^	inline s64 scope_lev() const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:s64	access:public	signature:() const
ScopedIdentTable::~ScopedIdentTable	scoped_ident_table_class.hpp	/^	virtual ~ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrSplitHelperBase && to_move)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrSplitHelperBase & to_copy)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:()
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrType && s_to_split)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrType & s_to_split)
StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperBase$/;"	kind:c	namespace:liborangepower::strings
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrSplitHelperNoEscapes && to_move)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:()
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrType && s_to_split)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrType & s_to_split)
StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperNoEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrSplitHelperWithEscapes && to_move)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:()
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrType && s_to_split)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrType & s_to_split)
StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperWithEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
StrType	liborangepower_src/str_split_helper_classes.hpp	/^	typedef SomeStrType StrType;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:SomeStrType	access:public
Sub	assembler_class.hpp	/^	Sub,$/;"	kind:e	enum:VmInstrBinOp	access:public
Symbol	symbol_table_classes.hpp	/^	inline Symbol()$/;"	kind:f	class:Symbol	access:public	signature:()
Symbol	symbol_table_classes.hpp	/^	inline Symbol(Ident s_name)$/;"	kind:f	class:Symbol	access:public	signature:(Ident s_name)
Symbol	symbol_table_classes.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	access:public	signature:(Symbol && to_move)
Symbol	symbol_table_classes.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	access:public	signature:(const Symbol & to_copy)
Symbol	symbol_table_classes.hpp	/^class Symbol$/;"	kind:c
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol()$/;"	kind:f	class:Symbol	access:public	signature:()
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(Ident s_name)$/;"	kind:f	class:Symbol	access:public	signature:(Ident s_name)
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	access:public	signature:(Symbol && to_move)
Symbol::Symbol	symbol_table_classes.hpp	/^	inline Symbol(const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	access:public	signature:(const Symbol & to_copy)
Symbol::__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Symbol	typeref:typename:Ident	access:private
Symbol::gen_getter_and_setter_by_con_ref	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
Symbol::gen_setter_by_rval_ref	symbol_table_classes.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
Symbol::operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
Symbol::operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
SymbolTable	symbol_table_classes.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable	symbol_table_classes.hpp	/^	SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
SymbolTable	symbol_table_classes.hpp	/^class SymbolTable : public ScopedIdentTable<Symbol>$/;"	kind:c	inherits:ScopedIdentTable<Symbol>
SymbolTable::SymbolTable	symbol_table_classes.cpp	/^SymbolTable::SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable::SymbolTable	symbol_table_classes.hpp	/^	SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
SymbolTable::~SymbolTable	symbol_table_classes.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
SymbolTable::~SymbolTable	symbol_table_classes.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
T__0	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__0	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__1	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__1	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__10	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__10	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__11	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__11	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__12	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__12	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__13	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__13	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__14	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__14	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__15	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__15	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__16	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__16	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__17	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__17	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__18	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__18	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__19	gen_src/GrammarLexer.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__19	gen_src/GrammarParser.h	/^    T__14 = 15, T__15 = 16, T__16 = 17, T__17 = 18, T__18 = 19, T__19 = 20, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__2	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__2	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__20	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__20	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__21	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__21	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__22	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__22	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__23	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__23	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__24	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__24	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__25	gen_src/GrammarLexer.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__25	gen_src/GrammarParser.h	/^    T__20 = 21, T__21 = 22, T__22 = 23, T__23 = 24, T__24 = 25, T__25 = 26, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__26	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__26	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__27	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__27	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__28	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__28	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__29	gen_src/GrammarLexer.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__29	gen_src/GrammarParser.h	/^    T__26 = 27, T__27 = 28, T__28 = 29, T__29 = 30, LexWhitespace = 31, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__3	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__3	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__4	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__4	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__5	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__5	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__6	gen_src/GrammarLexer.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__6	gen_src/GrammarParser.h	/^    T__0 = 1, T__1 = 2, T__2 = 3, T__3 = 4, T__4 = 5, T__5 = 6, T__6 = 7, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__7	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__7	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__8	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__8	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
T__9	gen_src/GrammarLexer.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
T__9	gen_src/GrammarParser.h	/^    T__7 = 8, T__8 = 9, T__9 = 10, T__10 = 11, T__11 = 12, T__12 = 13, T__13 = 14, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokBinOp	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokBinOp	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrBinopContext::TokBinOp() {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:tree::TerminalNode *	signature:()
TokBinOp	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokBinOp	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBinOp();$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBuiltinTypename	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrLdContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:tree::TerminalNode *	signature:()
TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrLdxContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:tree::TerminalNode *	signature:()
TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrStContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:tree::TerminalNode *	signature:()
TokBuiltinTypename	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::InstrStxContext::TokBuiltinTypename() {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:tree::TerminalNode *	signature:()
TokBuiltinTypename	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokBuiltinTypename	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokBuiltinTypename();$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokDecNum	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokDecNum	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::NumExprContext::TokDecNum() {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokDecNum	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokDecNum	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokDecNum();$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokIdent	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokIdent	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::IdentNameContext::TokIdent() {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:tree::TerminalNode *	signature:()
TokIdent	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokIdent	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokIdent();$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokNonNewline	gen_src/GrammarLexer.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokNonNewline	gen_src/GrammarParser.cpp	/^std::vector<tree::TerminalNode *> GrammarParser::CommentContext::TokNonNewline() {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:std::vector<tree::TerminalNode * >	signature:()
TokNonNewline	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::CommentContext::TokNonNewline(size_t i) {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:tree::TerminalNode *	signature:(size_t i)
TokNonNewline	gen_src/GrammarParser.h	/^    TokDecNum = 40, TokIdent = 41, TokNonNewline = 42$/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokNonNewline	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode* TokNonNewline(size_t i);$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:(size_t i)
TokNonNewline	gen_src/GrammarParser.h	/^    std::vector<antlr4::tree::TerminalNode *> TokNonNewline();$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:std::vector<antlr4::tree::TerminalNode * >	access:public	signature:()
TokOpAddSub	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpAddSub	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprCompareContext::TokOpAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpAddSub	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpAddSub	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpBitwise	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpBitwise	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpBitwise() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpBitwise	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpBitwise	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpBitwise();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpCompare	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpCompare	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprLogicalContext::TokOpCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpCompare	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpCompare	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpLogical	gen_src/GrammarLexer.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpLogical	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprContext::TokOpLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpLogical	gen_src/GrammarParser.h	/^    TokBuiltinTypename = 32, TokBinOp = 33, TokOpLogical = 34, TokOpCompare = 35, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpLogical	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpMulDivMod	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpMulDivMod	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprAddSubContext::TokOpMulDivMod() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpMulDivMod	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpMulDivMod	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpMulDivMod();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
TokOpUnary	gen_src/GrammarLexer.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarLexer::__anoncd6878f20103	access:public
TokOpUnary	gen_src/GrammarParser.cpp	/^tree::TerminalNode* GrammarParser::ExprMulDivModEtcContext::TokOpUnary() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:tree::TerminalNode *	signature:()
TokOpUnary	gen_src/GrammarParser.h	/^    TokOpAddSub = 36, TokOpMulDivMod = 37, TokOpBitwise = 38, TokOpUnary = 39, $/;"	kind:e	enum:GrammarParser::__anonea8e543f0103	access:public
TokOpUnary	gen_src/GrammarParser.h	/^    antlr4::tree::TerminalNode *TokOpUnary();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlr4::tree::TerminalNode *	access:public	signature:()
U16	assembler_class.hpp	/^	U16,$/;"	kind:e	enum:VmInstrLdStOp	access:public
U32	assembler_class.hpp	/^	U32,$/;"	kind:e	enum:VmInstrLdStOp	access:public
U8	assembler_class.hpp	/^	U8,$/;"	kind:e	enum:VmInstrLdStOp	access:public
UDiv	assembler_class.hpp	/^	UDiv,$/;"	kind:e	enum:VmInstrBinOp	access:public
UMod	assembler_class.hpp	/^	UMod,$/;"	kind:e	enum:VmInstrBinOp	access:public
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
VmInstrBinOp	assembler_class.hpp	/^enum class VmInstrBinOp : u16$/;"	kind:g	typeref:typename:u16
VmInstrLdStOp	assembler_class.hpp	/^enum class VmInstrLdStOp : u16$/;"	kind:g	typeref:typename:u16
VmInstrOp	assembler_class.hpp	/^enum class VmInstrOp : u16$/;"	kind:g	typeref:typename:u16
__anonc774599a0102	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::program	file:
__anonc774599a0202	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::line	file:
__anonc774599a0302	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::label	file:
__anonc774599a0402	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instruction	file:
__anonc774599a0502	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrConstant	file:
__anonc774599a0602	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrArg	file:
__anonc774599a0702	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrArgX	file:
__anonc774599a0802	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrVar	file:
__anonc774599a0902	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrVarX	file:
__anonc774599a0a02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrGetArgSpace	file:
__anonc774599a0b02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrSetArgSpace	file:
__anonc774599a0c02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrGetPc	file:
__anonc774599a0d02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrJump	file:
__anonc774599a0e02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrBeq	file:
__anonc774599a0f02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrBne	file:
__anonc774599a1002	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrCall	file:
__anonc774599a1102	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrRet	file:
__anonc774599a1202	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrLd	file:
__anonc774599a1302	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrLdx	file:
__anonc774599a1402	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrSt	file:
__anonc774599a1502	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrStx	file:
__anonc774599a1602	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrBinop	file:
__anonc774599a1702	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrDispNum	file:
__anonc774599a1802	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrDispNumUnsigned	file:
__anonc774599a1902	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrDispChar	file:
__anonc774599a1a02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrDispStr	file:
__anonc774599a1b02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrGetNum	file:
__anonc774599a1c02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::instrQuit	file:
__anonc774599a1d02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::comment	file:
__anonc774599a1e02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::expr	file:
__anonc774599a1f02	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprLogical	file:
__anonc774599a2002	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprCompare	file:
__anonc774599a2102	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprAddSub	file:
__anonc774599a2202	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::exprMulDivModEtc	file:
__anonc774599a2302	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::identName	file:
__anonc774599a2402	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::numExpr	file:
__anonc774599a2502	gen_src/GrammarParser.cpp	/^  auto onExit = finally([=] {$/;"	kind:f	function:GrammarParser::currPc	file:
__anoncd6878f20103	gen_src/GrammarLexer.h	/^  enum {$/;"	kind:g	class:GrammarLexer	access:public
__anone389622d0102	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::parse_json	typeref:typename:bool	file:	signature:(Json::CharReaderBuilder& actual_rbuilder)
__anone389622d0202	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::write_json	file:	signature:(Json::StreamWriterBuilder& some_wbuilder)
__anone389622d0302	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0402	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0502	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anone389622d0602	liborangepower_src/json_stuff.cpp	/^	{$/;"	kind:f	function:liborangepower::json::debug_print_json	typeref:typename:void	file:	signature:()
__anonea8e543f0103	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
__anonea8e543f0203	gen_src/GrammarParser.h	/^  enum {$/;"	kind:g	class:GrammarParser	access:public
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
__int_pool	allocation_stuff.cpp	/^	static std::map<int, std::unique_ptr<int>> __int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>	file:	access:private
__int_pool	allocation_stuff.cpp	/^std::map<int, std::unique_ptr<int>> DupStuff::__int_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<int,std::unique_ptr<int>>
__name	symbol_table_classes.hpp	/^	Ident __name;$/;"	kind:m	class:Symbol	typeref:typename:Ident	access:private
__num_stack	assembler_class.hpp	/^	std::stack<s64> __num_stack;$/;"	kind:m	class:Assembler	typeref:typename:std::stack<s64>	access:private
__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
__scope_num	scoped_ident_table_class.hpp	/^	s64 __scope_num = -1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:protected
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
__str_pool	allocation_stuff.cpp	/^		__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>	file:	access:private
__str_pool	allocation_stuff.cpp	/^std::map<std::string, std::unique_ptr<std::string>> DupStuff::__str_pool;$/;"	kind:m	class:DupStuff	typeref:typename:std::map<std::string,std::unique_ptr<std::string>>
__str_stack	assembler_class.hpp	/^	std::stack<std::string*> __str_stack;$/;"	kind:m	class:Assembler	typeref:typename:std::stack<std::string * >	access:private
__sym_tbl	assembler_class.hpp	/^	SymbolTable __sym_tbl;$/;"	kind:m	class:Assembler	typeref:typename:SymbolTable	access:private
__table	ident_table_class.hpp	/^	std::map<Ident, Type> __table;$/;"	kind:m	class:IdentTable	typeref:typename:std::map<Ident,Type>	access:private
__table	scoped_ident_table_class.hpp	/^	std::vector<OneLevelTable> __table;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:std::vector<OneLevelTable>	access:protected
_align2	liborangepower_src/misc_defines.hpp	/^#define _align2 /;"	kind:d
_align4	liborangepower_src/misc_defines.hpp	/^#define _align4 /;"	kind:d
_atn	gen_src/GrammarLexer.cpp	/^atn::ATN GrammarLexer::_atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::ATN
_atn	gen_src/GrammarLexer.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::ATN	access:private
_atn	gen_src/GrammarParser.cpp	/^atn::ATN GrammarParser::_atn;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::ATN
_atn	gen_src/GrammarParser.h	/^  static antlr4::atn::ATN _atn;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::ATN	access:private
_channelNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_channelNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_channelNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _channelNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_decisionToDFA	gen_src/GrammarLexer.cpp	/^std::vector<dfa::DFA> GrammarLexer::_decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/GrammarLexer.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_decisionToDFA	gen_src/GrammarParser.cpp	/^std::vector<dfa::DFA> GrammarParser::_decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<dfa::DFA>
_decisionToDFA	gen_src/GrammarParser.h	/^  static std::vector<antlr4::dfa::DFA> _decisionToDFA;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<antlr4::dfa::DFA>	access:private
_init	gen_src/GrammarLexer.cpp	/^GrammarLexer::Initializer GrammarLexer::_init;$/;"	kind:m	class:GrammarLexer	typeref:typename:GrammarLexer::Initializer
_init	gen_src/GrammarLexer.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarLexer	typeref:typename:Initializer	access:private
_init	gen_src/GrammarParser.cpp	/^GrammarParser::Initializer GrammarParser::_init;$/;"	kind:m	class:GrammarParser	typeref:typename:GrammarParser::Initializer
_init	gen_src/GrammarParser.h	/^  static Initializer _init;$/;"	kind:m	class:GrammarParser	typeref:typename:Initializer	access:private
_literalNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_literalNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_literalNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_literalNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_literalNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_literalNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _literalNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_modeNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_modeNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_modeNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _modeNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_ruleNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_ruleNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_ruleNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_ruleNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _ruleNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_serializedATN	gen_src/GrammarLexer.cpp	/^std::vector<uint16_t> GrammarLexer::_serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/GrammarLexer.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<uint16_t>	access:private
_serializedATN	gen_src/GrammarParser.cpp	/^std::vector<uint16_t> GrammarParser::_serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>
_serializedATN	gen_src/GrammarParser.h	/^  static std::vector<uint16_t> _serializedATN;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<uint16_t>	access:private
_sharedContextCache	gen_src/GrammarLexer.cpp	/^atn::PredictionContextCache GrammarLexer::_sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/GrammarLexer.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_sharedContextCache	gen_src/GrammarParser.cpp	/^atn::PredictionContextCache GrammarParser::_sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:atn::PredictionContextCache
_sharedContextCache	gen_src/GrammarParser.h	/^  static antlr4::atn::PredictionContextCache _sharedContextCache;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::atn::PredictionContextCache	access:private
_symbolicNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_symbolicNames = {$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_symbolicNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_symbolicNames = {$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_symbolicNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _symbolicNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/GrammarLexer.cpp	/^std::vector<std::string> GrammarLexer::_tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/GrammarLexer.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarLexer	typeref:typename:std::vector<std::string>	access:private
_tokenNames	gen_src/GrammarParser.cpp	/^std::vector<std::string> GrammarParser::_tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>
_tokenNames	gen_src/GrammarParser.h	/^  static std::vector<std::string> _tokenNames;$/;"	kind:m	class:GrammarParser	typeref:typename:std::vector<std::string>	access:private
_vocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary GrammarLexer::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarLexer	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/GrammarLexer.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary	access:private
_vocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary GrammarParser::_vocabulary(_literalNames, _symbolicNames);$/;"	kind:p	class:GrammarParser	typeref:typename:dfa::Vocabulary	file:	signature:(_literalNames,_symbolicNames)
_vocabulary	gen_src/GrammarParser.h	/^  static antlr4::dfa::Vocabulary _vocabulary;$/;"	kind:m	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary	access:private
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::CommentContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::CurrPcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::CurrPcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprAddSubContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprCompareContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprLogicalContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ExprMulDivModEtcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::IdentNameContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrArgContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrArgContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrArgXContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrArgXContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBeqContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBinopContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrBneContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrCallContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrConstantContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispCharContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispCharContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispNumContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispNumContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispNumUnsignedContext::accept(tree::ParseTreeVisitor *visitor/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrDispStrContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrDispStrContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetArgSpaceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetNumContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetNumContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrGetPcContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrGetPcContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrJumpContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrJumpContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrLdContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrLdxContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrQuitContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrQuitContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrRetContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrRetContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrSetArgSpaceContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrStContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrStxContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrVarContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrVarContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstrVarXContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstrVarXContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::InstructionContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LabelContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::LineContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::NumExprContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.cpp	/^antlrcpp::Any GrammarParser::ProgramContext::accept(tree::ParseTreeVisitor *visitor) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	signature:(tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::CurrPcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrArgContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrArgXContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispCharContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispNumContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrDispStrContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetNumContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrGetPcContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrJumpContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrQuitContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrRetContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrVarContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstrVarXContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
accept	gen_src/GrammarParser.h	/^    virtual antlrcpp::Any accept(antlr4::tree::ParseTreeVisitor *visitor) override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:antlrcpp::Any	access:public	signature:(antlr4::tree::ParseTreeVisitor * visitor)
alignas_regular	liborangepower_src/misc_defines.hpp	/^#define alignas_regular /;"	kind:d
allocation_stuff_hpp	allocation_stuff.hpp	/^#define allocation_stuff_hpp$/;"	kind:d
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
arg	assembler_class.hpp	/^	arg,$/;"	kind:e	enum:VmInstrOp	access:public
argx	assembler_class.hpp	/^	argx,$/;"	kind:e	enum:VmInstrOp	access:public
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
asm_comment	liborangepower_src/misc_defines.hpp	/^#define asm_comment(/;"	kind:d	signature:(stuff)
assembler_class_hpp	assembler_class.hpp	/^#define assembler_class_hpp$/;"	kind:d
at	ident_table_class.hpp	/^	inline Type& at(Ident some_name)$/;"	kind:f	class:IdentTable	typeref:typename:Type &	access:public	signature:(Ident some_name)
at	ident_table_class.hpp	/^	inline const Type& at(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:const Type &	access:public	signature:(Ident some_name) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
at	scoped_ident_table_class.hpp	/^	inline auto& at(size_t table_index)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:auto &	access:public	signature:(size_t table_index)
at	scoped_ident_table_class.hpp	/^	inline const auto& at(size_t table_index) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:const auto &	access:public	signature:(size_t table_index) const
back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
beq	assembler_class.hpp	/^	beq,$/;"	kind:e	enum:VmInstrOp	access:public
binop	assembler_class.hpp	/^	binop,$/;"	kind:e	enum:VmInstrOp	access:public
bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
bne	assembler_class.hpp	/^	bne,$/;"	kind:e	enum:VmInstrOp	access:public
bprange_to_mask	liborangepower_src/misc_defines.hpp	/^#define bprange_to_mask(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
bprange_to_shifted_mask	liborangepower_src/misc_defines.hpp	/^#define bprange_to_shifted_mask(/;"	kind:d	signature:(bit_pos_hi,bit_pos_lo)
builtin_scope_level	scoped_ident_table_class.hpp	/^	static constexpr s64 builtin_scope_level = 0;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
call	assembler_class.hpp	/^	call,$/;"	kind:e	enum:VmInstrOp	access:public
clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:p	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
comment	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext* GrammarParser::LineContext::comment() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::CommentContext *	signature:()
comment	gen_src/GrammarParser.cpp	/^GrammarParser::CommentContext* GrammarParser::comment() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::CommentContext *	signature:()
comment	gen_src/GrammarParser.h	/^    CommentContext *comment();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:CommentContext *	access:public	signature:()
comment	gen_src/GrammarParser.h	/^  CommentContext* comment();$/;"	kind:p	class:GrammarParser	typeref:typename:CommentContext *	access:public	signature:()
constant	assembler_class.hpp	/^	constant,$/;"	kind:e	enum:VmInstrOp	access:public
containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
contains	ident_table_class.hpp	/^	inline bool contains(Ident some_name) const$/;"	kind:f	class:IdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
cstm_intdup	allocation_stuff.cpp	/^	friend int* cstm_intdup(int to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:int *	file:	access:private	signature:(int to_dup)
cstm_intdup	allocation_stuff.cpp	/^int* cstm_intdup(int to_dup)$/;"	kind:f	typeref:typename:int *	signature:(int to_dup)
cstm_intdup	allocation_stuff.hpp	/^int* cstm_intdup(int to_dup);$/;"	kind:p	typeref:typename:int *	signature:(int to_dup)
cstm_strdup	allocation_stuff.cpp	/^	friend std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	class:DupStuff	typeref:typename:std::string *	file:	access:private	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.cpp	/^std::string* cstm_strdup(const std::string& to_dup)$/;"	kind:f	typeref:typename:std::string *	signature:(const std::string & to_dup)
cstm_strdup	allocation_stuff.hpp	/^std::string* cstm_strdup(const std::string& to_dup);$/;"	kind:p	typeref:typename:std::string *	signature:(const std::string & to_dup)
curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
currPc	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext* GrammarParser::ExprMulDivModEtcContext::currPc() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::CurrPcContext *	signature:()
currPc	gen_src/GrammarParser.cpp	/^GrammarParser::CurrPcContext* GrammarParser::currPc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::CurrPcContext *	signature:()
currPc	gen_src/GrammarParser.h	/^    CurrPcContext *currPc();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:CurrPcContext *	access:public	signature:()
currPc	gen_src/GrammarParser.h	/^  CurrPcContext* currPc();$/;"	kind:p	class:GrammarParser	typeref:typename:CurrPcContext *	access:public	signature:()
custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
disp_char	assembler_class.hpp	/^	disp_char,$/;"	kind:e	enum:VmInstrOp	access:public
disp_num	assembler_class.hpp	/^	disp_num,$/;"	kind:e	enum:VmInstrOp	access:public
disp_num_unsigned	assembler_class.hpp	/^	disp_num_unsigned,$/;"	kind:e	enum:VmInstrOp	access:public
disp_str	assembler_class.hpp	/^	disp_str,$/;"	kind:e	enum:VmInstrOp	access:public
dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprContext::expr() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::ExprMulDivModEtcContext::expr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrBeqContext::expr() {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrBneContext::expr() {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrCallContext::expr() {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::InstrConstantContext::expr() {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:()
expr	gen_src/GrammarParser.cpp	/^GrammarParser::ExprContext* GrammarParser::expr(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprContext *	signature:(int precedence)
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^    ExprContext *expr();$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^  ExprContext* expr();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:()
expr	gen_src/GrammarParser.h	/^  ExprContext* expr(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprContext *	access:public	signature:(int precedence)
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprAddSubContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::ExprCompareContext::exprAddSub() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:()
exprAddSub	gen_src/GrammarParser.cpp	/^GrammarParser::ExprAddSubContext* GrammarParser::exprAddSub(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprAddSubContext *	signature:(int precedence)
exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^    ExprAddSubContext *exprAddSub();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:()
exprAddSub	gen_src/GrammarParser.h	/^  ExprAddSubContext* exprAddSub(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprAddSubContext *	access:public	signature:(int precedence)
exprAddSubSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprAddSubSempred	gen_src/GrammarParser.h	/^  bool exprAddSubSempred(ExprAddSubContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprAddSubContext * _localctx,size_t predicateIndex)
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprCompareContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::ExprLogicalContext::exprCompare() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:()
exprCompare	gen_src/GrammarParser.cpp	/^GrammarParser::ExprCompareContext* GrammarParser::exprCompare(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprCompareContext *	signature:(int precedence)
exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^    ExprCompareContext *exprCompare();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:()
exprCompare	gen_src/GrammarParser.h	/^  ExprCompareContext* exprCompare(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprCompareContext *	access:public	signature:(int precedence)
exprCompareSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprCompareSempred	gen_src/GrammarParser.h	/^  bool exprCompareSempred(ExprCompareContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprCompareContext * _localctx,size_t predicateIndex)
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::ExprLogicalContext::exprLogical() {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:()
exprLogical	gen_src/GrammarParser.cpp	/^GrammarParser::ExprLogicalContext* GrammarParser::exprLogical(int precedence) {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprLogicalContext *	signature:(int precedence)
exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^    ExprLogicalContext *exprLogical();$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:()
exprLogical	gen_src/GrammarParser.h	/^  ExprLogicalContext* exprLogical(int precedence);$/;"	kind:p	class:GrammarParser	typeref:typename:ExprLogicalContext *	access:public	signature:(int precedence)
exprLogicalSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprLogicalSempred	gen_src/GrammarParser.h	/^  bool exprLogicalSempred(ExprLogicalContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprLogicalContext * _localctx,size_t predicateIndex)
exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::ExprAddSubContext::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/GrammarParser.cpp	/^GrammarParser::ExprMulDivModEtcContext* GrammarParser::exprMulDivModEtc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ExprMulDivModEtcContext *	signature:()
exprMulDivModEtc	gen_src/GrammarParser.h	/^    ExprMulDivModEtcContext *exprMulDivModEtc();$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprMulDivModEtc	gen_src/GrammarParser.h	/^  ExprMulDivModEtcContext* exprMulDivModEtc();$/;"	kind:p	class:GrammarParser	typeref:typename:ExprMulDivModEtcContext *	access:public	signature:()
exprSempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::exprSempred(ExprContext *_localctx, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(ExprContext * _localctx,size_t predicateIndex)
exprSempred	gen_src/GrammarParser.h	/^  bool exprSempred(ExprContext *_localctx, size_t predicateIndex);$/;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(ExprContext * _localctx,size_t predicateIndex)
find	scoped_ident_table_class.hpp	/^	Type* find(Ident some_name) __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
find_in_this_level	scoped_ident_table_class.hpp	/^	inline Type* find_in_this_level(Ident some_name)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:Type *	access:public	signature:(Ident some_name)
find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:size_t	access:public	signature:(size_t & i)
find_start_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	size_t find_start_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
gen_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_getter_and_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_con_ref(/;"	kind:d	signature:(stuff)
gen_getter_and_setter_by_con_ref	symbol_table_classes.hpp	/^	gen_getter_and_setter_by_con_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
gen_getter_and_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_and_setter_by_val(/;"	kind:d	signature:(stuff)
gen_getter_by_con_ref	ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:IdentTable	access:public	signature:(table)
gen_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
gen_getter_by_con_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_con_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
gen_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_getter_by_ref	scoped_ident_table_class.hpp	/^	gen_getter_by_ref(table);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(table)
gen_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_getter_by_val(/;"	kind:d	signature:(suffix)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
gen_getter_by_val	scoped_ident_table_class.hpp	/^	gen_getter_by_val(scope_num);$/;"	kind:p	class:ScopedIdentTable	access:public	signature:(scope_num)
gen_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_setter_by_rval_ref	symbol_table_classes.hpp	/^	gen_setter_by_rval_ref(name);$/;"	kind:p	class:Symbol	access:public	signature:(name)
gen_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_setter_by_val(/;"	kind:d	signature:(suffix)
gen_static_generic_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_getter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_con_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_rval_ref(/;"	kind:d	signature:(prefix,suffix)
gen_static_generic_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_generic_setter_by_val(/;"	kind:d	signature:(prefix,suffix)
gen_static_getter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_ref(/;"	kind:d	signature:(suffix)
gen_static_getter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_getter_by_val(/;"	kind:d	signature:(suffix)
gen_static_setter_by_con_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_con_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_rval_ref	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_rval_ref(/;"	kind:d	signature:(suffix)
gen_static_setter_by_val	liborangepower_src/gen_getter_setter_defines.hpp	/^#define gen_static_setter_by_val(/;"	kind:d	signature:(suffix)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_float_pt_vec2_extra_class_contents(/;"	kind:d	signature:(specific_type)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^#define generate_specific_vec2_class_contents(/;"	kind:d	signature:(specific_type)
getATN	gen_src/GrammarLexer.cpp	/^const atn::ATN& GrammarLexer::getATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const atn::ATN &	signature:() const
getATN	gen_src/GrammarLexer.h	/^  virtual const antlr4::atn::ATN& getATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getATN	gen_src/GrammarParser.h	/^  virtual const antlr4::atn::ATN& getATN() const override { return _atn; };$/;"	kind:f	class:GrammarParser	typeref:typename:const antlr4::atn::ATN &	access:public	signature:() const
getChannelNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getChannelNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getChannelNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getChannelNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getGrammarFileName	gen_src/GrammarLexer.cpp	/^std::string GrammarLexer::getGrammarFileName() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/GrammarLexer.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:std::string	access:public	signature:() const
getGrammarFileName	gen_src/GrammarParser.cpp	/^std::string GrammarParser::getGrammarFileName() const {$/;"	kind:f	class:GrammarParser	typeref:typename:std::string	signature:() const
getGrammarFileName	gen_src/GrammarParser.h	/^  virtual std::string getGrammarFileName() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:std::string	access:public	signature:() const
getModeNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getModeNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getModeNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getModeNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::CommentContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::CommentContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::CurrPcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::CurrPcContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprAddSubContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprCompareContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprLogicalContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ExprMulDivModEtcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::IdentNameContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::IdentNameContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrArgContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrArgContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrArgXContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrArgXContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBeqContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBinopContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBinopContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrBneContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrCallContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrConstantContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrConstantContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispCharContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispCharContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispNumContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispNumContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispNumUnsignedContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrDispStrContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrDispStrContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetArgSpaceContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetNumContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetNumContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrGetPcContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrGetPcContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrJumpContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrJumpContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrLdContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrLdContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrLdxContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrLdxContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrQuitContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrQuitContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrRetContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrRetContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrSetArgSpaceContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrStContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrStContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrStxContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrStxContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrVarContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrVarContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstrVarXContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstrVarXContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::InstructionContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LabelContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::LineContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::NumExprContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::NumExprContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.cpp	/^size_t GrammarParser::ProgramContext::getRuleIndex() const {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:size_t	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::CommentContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::CurrPcContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprAddSubContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprCompareContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprLogicalContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::IdentNameContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrArgContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrArgXContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBinopContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrConstantContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispCharContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispNumContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispNumUnsignedContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrDispStrContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetArgSpaceContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetNumContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrGetPcContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrJumpContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrLdContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrLdxContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrQuitContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrRetContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrSetArgSpaceContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrStContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrStxContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrVarContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstrVarXContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::NumExprContext	typeref:typename:size_t	access:public	signature:() const
getRuleIndex	gen_src/GrammarParser.h	/^    virtual size_t getRuleIndex() const override;$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:size_t	access:public	signature:() const
getRuleNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getRuleNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getRuleNames	gen_src/GrammarParser.cpp	/^const std::vector<std::string>& GrammarParser::getRuleNames() const {$/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	signature:() const
getRuleNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getRuleNames() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getSerializedATN	gen_src/GrammarLexer.cpp	/^const std::vector<uint16_t> GrammarLexer::getSerializedATN() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	signature:() const
getSerializedATN	gen_src/GrammarLexer.h	/^  virtual const std::vector<uint16_t> getSerializedATN() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<uint16_t>	access:public	signature:() const
getTokenNames	gen_src/GrammarLexer.cpp	/^const std::vector<std::string>& GrammarLexer::getTokenNames() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	signature:() const
getTokenNames	gen_src/GrammarLexer.h	/^  virtual const std::vector<std::string>& getTokenNames() const override; \/\/ deprecated, use v/;"	kind:p	class:GrammarLexer	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getTokenNames	gen_src/GrammarParser.h	/^  virtual const std::vector<std::string>& getTokenNames() const override { return _tokenNames; }/;"	kind:f	class:GrammarParser	typeref:typename:const std::vector<std::string> &	access:public	signature:() const
getVocabulary	gen_src/GrammarLexer.cpp	/^dfa::Vocabulary& GrammarLexer::getVocabulary() const {$/;"	kind:f	class:GrammarLexer	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/GrammarLexer.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarLexer	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
getVocabulary	gen_src/GrammarParser.cpp	/^dfa::Vocabulary& GrammarParser::getVocabulary() const {$/;"	kind:f	class:GrammarParser	typeref:typename:dfa::Vocabulary &	signature:() const
getVocabulary	gen_src/GrammarParser.h	/^  virtual antlr4::dfa::Vocabulary& getVocabulary() const override;$/;"	kind:p	class:GrammarParser	typeref:typename:antlr4::dfa::Vocabulary &	access:public	signature:() const
get_arg_space	assembler_class.hpp	/^	get_arg_space,$/;"	kind:e	enum:VmInstrOp	access:public
get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
get_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType get_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
get_num	assembler_class.hpp	/^	get_num,$/;"	kind:e	enum:VmInstrOp	access:public
get_pc	assembler_class.hpp	/^	get_pc,$/;"	kind:e	enum:VmInstrOp	access:public
get_stdin_from_file	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_from_file()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
get_substr_size	liborangepower_src/str_split_helper_classes.hpp	/^	static inline size_t get_substr_size(const size_t start, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(const size_t start,const size_t pos_after_end)
get_top_num	assembler_class.hpp	/^	inline s64 get_top_num()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
get_top_str	assembler_class.hpp	/^	inline s64 get_top_str()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::ExprMulDivModEtcContext::identName() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrBeqContext::identName() {$/;"	kind:f	class:GrammarParser::InstrBeqContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrBneContext::identName() {$/;"	kind:f	class:GrammarParser::InstrBneContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::InstrCallContext::identName() {$/;"	kind:f	class:GrammarParser::InstrCallContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::LabelContext::identName() {$/;"	kind:f	class:GrammarParser::LabelContext	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.cpp	/^GrammarParser::IdentNameContext* GrammarParser::identName() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::IdentNameContext *	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrBeqContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrBneContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::InstrCallContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^    IdentNameContext *identName();$/;"	kind:p	class:GrammarParser::LabelContext	typeref:typename:IdentNameContext *	access:public	signature:()
identName	gen_src/GrammarParser.h	/^  IdentNameContext* identName();$/;"	kind:p	class:GrammarParser	typeref:typename:IdentNameContext *	access:public	signature:()
ident_table_class_hpp	ident_table_class.hpp	/^#define ident_table_class_hpp$/;"	kind:d
in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
increment_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline void increment_i(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(size_t & i)
index_in_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool index_in_to_split(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr)
init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(StrType&& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(StrType && n_to_split)
init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(const StrType& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(const StrType & n_to_split)
init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
insert_or_assign	ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:IdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(Type && to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(const Type& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, $/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,const Type & to_insert_or_assign)
insert_or_assign	scoped_ident_table_class.hpp	/^	inline void insert_or_assign(size_t level, Type&& to_insert_or_assign)$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:(size_t level,Type && to_insert_or_assign)
instrArg	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext* GrammarParser::InstructionContext::instrArg() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrArgContext *	signature:()
instrArg	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgContext* GrammarParser::instrArg() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrArgContext *	signature:()
instrArg	gen_src/GrammarParser.h	/^    InstrArgContext *instrArg();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrArgContext *	access:public	signature:()
instrArg	gen_src/GrammarParser.h	/^  InstrArgContext* instrArg();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrArgContext *	access:public	signature:()
instrArgX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext* GrammarParser::InstructionContext::instrArgX() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrArgXContext *	signature:()
instrArgX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrArgXContext* GrammarParser::instrArgX() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrArgXContext *	signature:()
instrArgX	gen_src/GrammarParser.h	/^    InstrArgXContext *instrArgX();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrArgXContext *	access:public	signature:()
instrArgX	gen_src/GrammarParser.h	/^  InstrArgXContext* instrArgX();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrArgXContext *	access:public	signature:()
instrBeq	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext* GrammarParser::InstructionContext::instrBeq() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBeqContext *	signature:()
instrBeq	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBeqContext* GrammarParser::instrBeq() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBeqContext *	signature:()
instrBeq	gen_src/GrammarParser.h	/^    InstrBeqContext *instrBeq();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBeqContext *	access:public	signature:()
instrBeq	gen_src/GrammarParser.h	/^  InstrBeqContext* instrBeq();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBeqContext *	access:public	signature:()
instrBinop	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext* GrammarParser::InstructionContext::instrBinop() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBinopContext *	signature:()
instrBinop	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBinopContext* GrammarParser::instrBinop() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBinopContext *	signature:()
instrBinop	gen_src/GrammarParser.h	/^    InstrBinopContext *instrBinop();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBinopContext *	access:public	signature:()
instrBinop	gen_src/GrammarParser.h	/^  InstrBinopContext* instrBinop();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBinopContext *	access:public	signature:()
instrBne	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext* GrammarParser::InstructionContext::instrBne() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrBneContext *	signature:()
instrBne	gen_src/GrammarParser.cpp	/^GrammarParser::InstrBneContext* GrammarParser::instrBne() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrBneContext *	signature:()
instrBne	gen_src/GrammarParser.h	/^    InstrBneContext *instrBne();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrBneContext *	access:public	signature:()
instrBne	gen_src/GrammarParser.h	/^  InstrBneContext* instrBne();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrBneContext *	access:public	signature:()
instrCall	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext* GrammarParser::InstructionContext::instrCall() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrCallContext *	signature:()
instrCall	gen_src/GrammarParser.cpp	/^GrammarParser::InstrCallContext* GrammarParser::instrCall() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrCallContext *	signature:()
instrCall	gen_src/GrammarParser.h	/^    InstrCallContext *instrCall();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrCallContext *	access:public	signature:()
instrCall	gen_src/GrammarParser.h	/^  InstrCallContext* instrCall();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrCallContext *	access:public	signature:()
instrConstant	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext* GrammarParser::InstructionContext::instrConstant() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrConstantContext *	signature:()
instrConstant	gen_src/GrammarParser.cpp	/^GrammarParser::InstrConstantContext* GrammarParser::instrConstant() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrConstantContext *	signature:()
instrConstant	gen_src/GrammarParser.h	/^    InstrConstantContext *instrConstant();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrConstantContext *	access:public	signature:()
instrConstant	gen_src/GrammarParser.h	/^  InstrConstantContext* instrConstant();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrConstantContext *	access:public	signature:()
instrDispChar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext* GrammarParser::InstructionContext::instrDispChar() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispCharContext *	signature:()
instrDispChar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispCharContext* GrammarParser::instrDispChar() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispCharContext *	signature:()
instrDispChar	gen_src/GrammarParser.h	/^    InstrDispCharContext *instrDispChar();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispCharContext *	access:public	signature:()
instrDispChar	gen_src/GrammarParser.h	/^  InstrDispCharContext* instrDispChar();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispCharContext *	access:public	signature:()
instrDispNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext* GrammarParser::InstructionContext::instrDispNum() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispNumContext *	signature:()
instrDispNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumContext* GrammarParser::instrDispNum() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispNumContext *	signature:()
instrDispNum	gen_src/GrammarParser.h	/^    InstrDispNumContext *instrDispNum();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispNumContext *	access:public	signature:()
instrDispNum	gen_src/GrammarParser.h	/^  InstrDispNumContext* instrDispNum();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispNumContext *	access:public	signature:()
instrDispNumUnsigned	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext* GrammarParser::InstructionContext::instrDispNumUnsig/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispNumUnsignedContext *	signature:()
instrDispNumUnsigned	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispNumUnsignedContext* GrammarParser::instrDispNumUnsigned() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispNumUnsignedContext *	signature:()
instrDispNumUnsigned	gen_src/GrammarParser.h	/^    InstrDispNumUnsignedContext *instrDispNumUnsigned();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispNumUnsignedContext *	access:public	signature:()
instrDispNumUnsigned	gen_src/GrammarParser.h	/^  InstrDispNumUnsignedContext* instrDispNumUnsigned();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispNumUnsignedContext *	access:public	signature:()
instrDispStr	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext* GrammarParser::InstructionContext::instrDispStr() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrDispStrContext *	signature:()
instrDispStr	gen_src/GrammarParser.cpp	/^GrammarParser::InstrDispStrContext* GrammarParser::instrDispStr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrDispStrContext *	signature:()
instrDispStr	gen_src/GrammarParser.h	/^    InstrDispStrContext *instrDispStr();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrDispStrContext *	access:public	signature:()
instrDispStr	gen_src/GrammarParser.h	/^  InstrDispStrContext* instrDispStr();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrDispStrContext *	access:public	signature:()
instrGetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext* GrammarParser::InstructionContext::instrGetArgSpace() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetArgSpaceContext *	signature:()
instrGetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetArgSpaceContext* GrammarParser::instrGetArgSpace() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetArgSpaceContext *	signature:()
instrGetArgSpace	gen_src/GrammarParser.h	/^    InstrGetArgSpaceContext *instrGetArgSpace();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetArgSpaceContext *	access:public	signature:()
instrGetArgSpace	gen_src/GrammarParser.h	/^  InstrGetArgSpaceContext* instrGetArgSpace();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetArgSpaceContext *	access:public	signature:()
instrGetNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext* GrammarParser::InstructionContext::instrGetNum() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetNumContext *	signature:()
instrGetNum	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetNumContext* GrammarParser::instrGetNum() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetNumContext *	signature:()
instrGetNum	gen_src/GrammarParser.h	/^    InstrGetNumContext *instrGetNum();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetNumContext *	access:public	signature:()
instrGetNum	gen_src/GrammarParser.h	/^  InstrGetNumContext* instrGetNum();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetNumContext *	access:public	signature:()
instrGetPc	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext* GrammarParser::InstructionContext::instrGetPc() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrGetPcContext *	signature:()
instrGetPc	gen_src/GrammarParser.cpp	/^GrammarParser::InstrGetPcContext* GrammarParser::instrGetPc() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrGetPcContext *	signature:()
instrGetPc	gen_src/GrammarParser.h	/^    InstrGetPcContext *instrGetPc();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrGetPcContext *	access:public	signature:()
instrGetPc	gen_src/GrammarParser.h	/^  InstrGetPcContext* instrGetPc();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrGetPcContext *	access:public	signature:()
instrJump	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext* GrammarParser::InstructionContext::instrJump() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrJumpContext *	signature:()
instrJump	gen_src/GrammarParser.cpp	/^GrammarParser::InstrJumpContext* GrammarParser::instrJump() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrJumpContext *	signature:()
instrJump	gen_src/GrammarParser.h	/^    InstrJumpContext *instrJump();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrJumpContext *	access:public	signature:()
instrJump	gen_src/GrammarParser.h	/^  InstrJumpContext* instrJump();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrJumpContext *	access:public	signature:()
instrLd	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext* GrammarParser::InstructionContext::instrLd() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrLdContext *	signature:()
instrLd	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdContext* GrammarParser::instrLd() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrLdContext *	signature:()
instrLd	gen_src/GrammarParser.h	/^    InstrLdContext *instrLd();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrLdContext *	access:public	signature:()
instrLd	gen_src/GrammarParser.h	/^  InstrLdContext* instrLd();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrLdContext *	access:public	signature:()
instrLdx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext* GrammarParser::InstructionContext::instrLdx() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrLdxContext *	signature:()
instrLdx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrLdxContext* GrammarParser::instrLdx() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrLdxContext *	signature:()
instrLdx	gen_src/GrammarParser.h	/^    InstrLdxContext *instrLdx();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrLdxContext *	access:public	signature:()
instrLdx	gen_src/GrammarParser.h	/^  InstrLdxContext* instrLdx();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrLdxContext *	access:public	signature:()
instrQuit	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext* GrammarParser::InstructionContext::instrQuit() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrQuitContext *	signature:()
instrQuit	gen_src/GrammarParser.cpp	/^GrammarParser::InstrQuitContext* GrammarParser::instrQuit() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrQuitContext *	signature:()
instrQuit	gen_src/GrammarParser.h	/^    InstrQuitContext *instrQuit();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrQuitContext *	access:public	signature:()
instrQuit	gen_src/GrammarParser.h	/^  InstrQuitContext* instrQuit();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrQuitContext *	access:public	signature:()
instrRet	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext* GrammarParser::InstructionContext::instrRet() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrRetContext *	signature:()
instrRet	gen_src/GrammarParser.cpp	/^GrammarParser::InstrRetContext* GrammarParser::instrRet() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrRetContext *	signature:()
instrRet	gen_src/GrammarParser.h	/^    InstrRetContext *instrRet();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrRetContext *	access:public	signature:()
instrRet	gen_src/GrammarParser.h	/^  InstrRetContext* instrRet();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrRetContext *	access:public	signature:()
instrSetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext* GrammarParser::InstructionContext::instrSetArgSpace() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrSetArgSpaceContext *	signature:()
instrSetArgSpace	gen_src/GrammarParser.cpp	/^GrammarParser::InstrSetArgSpaceContext* GrammarParser::instrSetArgSpace() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrSetArgSpaceContext *	signature:()
instrSetArgSpace	gen_src/GrammarParser.h	/^    InstrSetArgSpaceContext *instrSetArgSpace();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrSetArgSpaceContext *	access:public	signature:()
instrSetArgSpace	gen_src/GrammarParser.h	/^  InstrSetArgSpaceContext* instrSetArgSpace();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrSetArgSpaceContext *	access:public	signature:()
instrSt	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext* GrammarParser::InstructionContext::instrSt() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrStContext *	signature:()
instrSt	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStContext* GrammarParser::instrSt() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrStContext *	signature:()
instrSt	gen_src/GrammarParser.h	/^    InstrStContext *instrSt();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrStContext *	access:public	signature:()
instrSt	gen_src/GrammarParser.h	/^  InstrStContext* instrSt();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrStContext *	access:public	signature:()
instrStx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext* GrammarParser::InstructionContext::instrStx() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrStxContext *	signature:()
instrStx	gen_src/GrammarParser.cpp	/^GrammarParser::InstrStxContext* GrammarParser::instrStx() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrStxContext *	signature:()
instrStx	gen_src/GrammarParser.h	/^    InstrStxContext *instrStx();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrStxContext *	access:public	signature:()
instrStx	gen_src/GrammarParser.h	/^  InstrStxContext* instrStx();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrStxContext *	access:public	signature:()
instrVar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext* GrammarParser::InstructionContext::instrVar() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrVarContext *	signature:()
instrVar	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarContext* GrammarParser::instrVar() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrVarContext *	signature:()
instrVar	gen_src/GrammarParser.h	/^    InstrVarContext *instrVar();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrVarContext *	access:public	signature:()
instrVar	gen_src/GrammarParser.h	/^  InstrVarContext* instrVar();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrVarContext *	access:public	signature:()
instrVarX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext* GrammarParser::InstructionContext::instrVarX() {$/;"	kind:f	class:GrammarParser::InstructionContext	typeref:typename:GrammarParser::InstrVarXContext *	signature:()
instrVarX	gen_src/GrammarParser.cpp	/^GrammarParser::InstrVarXContext* GrammarParser::instrVarX() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstrVarXContext *	signature:()
instrVarX	gen_src/GrammarParser.h	/^    InstrVarXContext *instrVarX();$/;"	kind:p	class:GrammarParser::InstructionContext	typeref:typename:InstrVarXContext *	access:public	signature:()
instrVarX	gen_src/GrammarParser.h	/^  InstrVarXContext* instrVarX();$/;"	kind:p	class:GrammarParser	typeref:typename:InstrVarXContext *	access:public	signature:()
instruction	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext* GrammarParser::LineContext::instruction() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::InstructionContext *	signature:()
instruction	gen_src/GrammarParser.cpp	/^GrammarParser::InstructionContext* GrammarParser::instruction() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::InstructionContext *	signature:()
instruction	gen_src/GrammarParser.h	/^    InstructionContext *instruction();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:InstructionContext *	access:public	signature:()
instruction	gen_src/GrammarParser.h	/^  InstructionContext* instruction();$/;"	kind:p	class:GrammarParser	typeref:typename:InstructionContext *	access:public	signature:()
integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
internal_line_num	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_line_num = 1;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_num_consec_backslashes = 0;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_prev_i;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
internal_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	StrType internal_to_split;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType	access:protected
json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
jump	assembler_class.hpp	/^	jump,$/;"	kind:e	enum:VmInstrOp	access:public
label	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext* GrammarParser::LineContext::label() {$/;"	kind:f	class:GrammarParser::LineContext	typeref:typename:GrammarParser::LabelContext *	signature:()
label	gen_src/GrammarParser.cpp	/^GrammarParser::LabelContext* GrammarParser::label() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LabelContext *	signature:()
label	gen_src/GrammarParser.h	/^    LabelContext *label();$/;"	kind:p	class:GrammarParser::LineContext	typeref:typename:LabelContext *	access:public	signature:()
label	gen_src/GrammarParser.h	/^  LabelContext* label();$/;"	kind:p	class:GrammarParser	typeref:typename:LabelContext *	access:public	signature:()
ld	assembler_class.hpp	/^	ld,$/;"	kind:e	enum:VmInstrOp	access:public
ldx	assembler_class.hpp	/^	ldx,$/;"	kind:e	enum:VmInstrOp	access:public
liborangepower	liborangepower_src/array_2d_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/array_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/json_stuff.cpp	/^namespace liborangepower$/;"	kind:n	file:
liborangepower	liborangepower_src/json_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/memwhatever_wrappers.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_input_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_output_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_types.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/misc_utility_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/prev_curr_pair_class.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/quoted_str_converter_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/range_funcs.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/str_split_helper_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/time_stuff.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower	liborangepower_src/vec2_classes.hpp	/^namespace liborangepower$/;"	kind:n
liborangepower::bitwise	liborangepower_src/misc_bitwise_funcs.hpp	/^namespace bitwise$/;"	kind:n	namespace:liborangepower
liborangepower::bitwise::clear_and_set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits(Type& to_change, size_t clear_mask,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t clear_mask,size_t set_mask)
liborangepower::bitwise::clear_and_set_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_and_set_bits_with_range(Type& to_change, size_t val,$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_change,size_t val,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::clear_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void clear_bits(Type& to_clear, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_clear,size_t mask)
liborangepower::bitwise::get_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits(Type to_get_from, size_t mask, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t mask,size_t shift=0)
liborangepower::bitwise::get_bits_with_range	liborangepower_src/misc_bitwise_funcs.hpp	/^inline constexpr Type get_bits_with_range(Type to_get_from, $/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:Type	signature:(Type to_get_from,size_t bit_pos_range_hi,size_t bit_pos_range_lo)
liborangepower::bitwise::set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
liborangepower::containers	liborangepower_src/array_2d_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/array_helper_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/prev_curr_pair_class.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers	liborangepower_src/vec2_classes.hpp	/^namespace containers$/;"	kind:n	namespace:liborangepower
liborangepower::containers::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class Array2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper()$/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:()
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(Type* s___arr, $/;"	kind:f	class:liborangepower::containers::Array2dHelper	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::Array2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline Array2dHelper(const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::Array2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::Array2dHelper::__size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	Vec2<size_t> __size_2d;$/;"	kind:m	class:liborangepower::containers::Array2dHelper	typeref:typename:Vec2<size_t>	access:protected
liborangepower::containers::Array2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::Array2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::Array2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr, const Vec2<size_t>& s_size_2d)$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr,const Vec2<size_t> & s_size_2d)
liborangepower::containers::Array2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
liborangepower::containers::Array2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::Array2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::Array2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^class ArrayCsz2dHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:()
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(Type * s___arr)
liborangepower::containers::ArrayCsz2dHelper::ArrayCsz2dHelper	liborangepower_src/array_2d_helper_classes.hpp	/^	inline ArrayCsz2dHelper(const ArrayCsz2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::__arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayCsz2dHelper::__size	liborangepower_src/array_2d_helper_classes.hpp	/^	static constexpr size_t __size = __size_2d.x * __size_2d.y;$/;"	kind:m	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCsz2dHelper::arr	liborangepower_src/array_2d_helper_classes.hpp	/^	Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type *	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2<size_t>& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2<size_t> & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(const Vec2S32& offset_2d)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(const Vec2S32 & offset_2d)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	Type& at(size_t x, size_t y)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:Type &	access:public	signature:(size_t x,size_t y)
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2<size_t>& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2<size_t> & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(const Vec2S32& offset_2d) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(const Vec2S32 & offset_2d) const
liborangepower::containers::ArrayCsz2dHelper::at	liborangepower_src/array_2d_helper_classes.hpp	/^	const Type& at(size_t x, size_t y) const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Type &	access:public	signature:(size_t x,size_t y) const
liborangepower::containers::ArrayCsz2dHelper::height	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t height() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::init	liborangepower_src/array_2d_helper_classes.hpp	/^	void init(Type* s___arr)$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:void	access:public	signature:(Type * s___arr)
liborangepower::containers::ArrayCsz2dHelper::operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
liborangepower::containers::ArrayCsz2dHelper::size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
liborangepower::containers::ArrayCsz2dHelper::width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayCszHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper()$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:()
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(Type* s_the_array) : __arr(s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::ArrayCszHelper	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper(const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type *	access:public
liborangepower::containers::ArrayCszHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	static constexpr size_t __size = _size;$/;"	kind:m	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayCszHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayCszHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayCszHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array)$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:void	access:public	signature:(Type * s_the_array)
liborangepower::containers::ArrayCszHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
liborangepower::containers::ArrayCszHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^class ArrayHelper$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper()$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:()
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::ArrayHelper	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper(const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::__arr	liborangepower_src/array_helper_classes.hpp	/^	Type* __arr = nullptr;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:Type *	access:protected
liborangepower::containers::ArrayHelper::__size	liborangepower_src/array_helper_classes.hpp	/^	size_t __size = 0;$/;"	kind:m	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:protected
liborangepower::containers::ArrayHelper::arr	liborangepower_src/array_helper_classes.hpp	/^	const Type* arr() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type *	access:public	signature:() const
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	Type& at(size_t offset)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:Type &	access:public	signature:(size_t offset)
liborangepower::containers::ArrayHelper::at	liborangepower_src/array_helper_classes.hpp	/^	const Type& at(size_t offset) const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:const Type &	access:public	signature:(size_t offset) const
liborangepower::containers::ArrayHelper::init	liborangepower_src/array_helper_classes.hpp	/^	void init(Type* s_the_array, size_t s_size)$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:void	access:public	signature:(Type * s_the_array,size_t s_size)
liborangepower::containers::ArrayHelper::operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
liborangepower::containers::ArrayHelper::size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
liborangepower::containers::PrevCurrPair	liborangepower_src/prev_curr_pair_class.hpp	/^class PrevCurrPair$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::PrevCurrPair::back_up	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up()$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:()
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(const type& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(const type & n_curr)
liborangepower::containers::PrevCurrPair::back_up_and_update	liborangepower_src/prev_curr_pair_class.hpp	/^	inline void back_up_and_update(type&& n_curr)$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:void	access:public	signature:(type && n_curr)
liborangepower::containers::PrevCurrPair::curr	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::PrevCurrPair::has_changed	liborangepower_src/prev_curr_pair_class.hpp	/^	inline bool has_changed() const$/;"	kind:f	class:liborangepower::containers::PrevCurrPair	typeref:typename:bool	access:public	signature:() const
liborangepower::containers::PrevCurrPair::prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
liborangepower::containers::SizeT2d	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<size_t> SizeT2d;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<size_t>
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<double>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2	liborangepower_src/vec2_classes.hpp	/^class Vec2<float>$/;"	kind:c	namespace:liborangepower::containers
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2() : x(Type()), y(Type())$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:()
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Type1& s_x, const Type2& s_y)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Type1 & s_x,const Type2 & s_y)
liborangepower::containers::Vec2::Vec2	liborangepower_src/vec2_classes.hpp	/^	constexpr inline Vec2(const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::dot_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type dot_prod(const Vec2<OtherType>& to_dot) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_dot) const
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_float_pt_vec2_extra_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_float_pt_vec2_extra_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(double);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(double)
liborangepower::containers::Vec2::generate_specific_vec2_class_contents	liborangepower_src/vec2_classes.hpp	/^	generate_specific_vec2_class_contents(float);$/;"	kind:p	class:liborangepower::containers::Vec2	access:private	signature:(float)
liborangepower::containers::Vec2::operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
liborangepower::containers::Vec2::operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
liborangepower::containers::Vec2::operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
liborangepower::containers::Vec2::operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
liborangepower::containers::Vec2::operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
liborangepower::containers::Vec2::operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
liborangepower::containers::Vec2::operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
liborangepower::containers::Vec2::operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
liborangepower::containers::Vec2::operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
liborangepower::containers::Vec2::x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
liborangepower::containers::Vec2::zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
liborangepower::containers::Vec2S16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s16> Vec2S16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s16>
liborangepower::containers::Vec2S32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s32> Vec2S32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s32>
liborangepower::containers::Vec2S64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::s64> Vec2S64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::s64>
liborangepower::containers::Vec2U16	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u16> Vec2U16;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u16>
liborangepower::containers::Vec2U32	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u32> Vec2U32;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u32>
liborangepower::containers::Vec2U64	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<integer_types::u64> Vec2U64;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<integer_types::u64>
liborangepower::containers::Vec2_dbl	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<double> Vec2_dbl;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<double>
liborangepower::containers::Vec2_flt	liborangepower_src/vec2_classes.hpp	/^typedef Vec2<float> Vec2_flt;$/;"	kind:t	namespace:liborangepower::containers	typeref:typename:Vec2<float>
liborangepower::containers::custom_abs	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> custom_abs(const Vec2<Type>& val)$/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Vec2<Type> & val)
liborangepower::containers::operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
liborangepower::containers::vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::containers::vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
liborangepower::integer_types	liborangepower_src/misc_types.hpp	/^namespace integer_types$/;"	kind:n	namespace:liborangepower
liborangepower::integer_types::s16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
liborangepower::integer_types::s32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
liborangepower::integer_types::s64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
liborangepower::integer_types::s8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
liborangepower::integer_types::u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
liborangepower::integer_types::u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
liborangepower::integer_types::u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
liborangepower::integer_types::u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
liborangepower::integer_types::uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
liborangepower::json	liborangepower_src/json_stuff.cpp	/^namespace json$/;"	kind:n	namespace:liborangepower	file:
liborangepower::json	liborangepower_src/json_stuff.hpp	/^namespace json$/;"	kind:n	namespace:liborangepower
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.cpp	/^void debug_print_json(const Json::Value& some_value, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os,size_t tabs_level)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^inline void debug_print_json(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::debug_print_json	liborangepower_src/json_stuff.hpp	/^void debug_print_json(const Json::Value& some_value, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout,size_t tabs_level=0)
liborangepower::json::err	liborangepower_src/json_stuff.hpp	/^void err(arg_types&&... args)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(arg_types &&...args)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.cpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^inline std::string get_json_value_type_as_str(Json::Value* iter)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:std::string	signature:(Json::Value * iter)
liborangepower::json::get_json_value_type_as_str	liborangepower_src/json_stuff.hpp	/^std::string get_json_value_type_as_str(const Json::Value& some_value);$/;"	kind:p	namespace:liborangepower::json	typeref:typename:std::string	signature:(const Json::Value & some_value)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
liborangepower::json::parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
liborangepower::json::print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
liborangepower::json::write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
liborangepower::misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
liborangepower::misc_input::get_stdin_from_file	liborangepower_src/misc_input_classes.hpp	/^inline std::string get_stdin_from_file()$/;"	kind:f	namespace:liborangepower::misc_input	typeref:typename:std::string	signature:()
liborangepower::misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & first_value,const RemainingTypes &...remaining_values)
liborangepower::misc_util::__init_array_backend	liborangepower_src/misc_utility_funcs.hpp	/^inline void __init_array_backend(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const Type & to_copy)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val)
liborangepower::misc_util::anything_matches	liborangepower_src/misc_utility_funcs.hpp	/^bool anything_matches(const FirstType& first_val, const SecondType& next, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(const FirstType & first_val,const SecondType & next,RemArgTypes &&...rem_args)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(Type* dst, const void* src, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,const void * src,size_t num_elems)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<Type, size>& dst, const void* src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,const void * src)
liborangepower::misc_util::arr_memcpy	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memcpy(std::array<dst_type, size>& dst, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<dst_type,size> & dst,std::array<src_type,size> & src)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(Type* dst, int c, size_t num_elems)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(Type * dst,int c,size_t num_elems)
liborangepower::misc_util::arr_memset	liborangepower_src/memwhatever_wrappers.hpp	/^inline void* arr_memset(std::array<Type, size>& dst, size_t src)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void *	signature:(std::array<Type,size> & dst,size_t src)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
liborangepower::misc_util::cmpeq_array	liborangepower_src/misc_utility_funcs.hpp	/^bool cmpeq_array(FirstType* first_arr, SecondType* second_arr, size_t size)$/;"	kind:p	namespace:liborangepower::misc_util	typeref:typename:bool	signature:(FirstType * first_arr,SecondType * second_arr,size_t size)
liborangepower::misc_util::custom_abs	liborangepower_src/misc_utility_funcs.hpp	/^inline Type custom_abs(const Type& val)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:Type	signature:(const Type & val)
liborangepower::misc_util::init_array	liborangepower_src/misc_utility_funcs.hpp	/^inline void init_array(Type* all_values_arr, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:void	signature:(Type * all_values_arr,const AllTheTypes &...all_the_values)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
liborangepower::misc_util::min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
liborangepower::misc_util::type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
liborangepower::printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
liborangepower::printout_etc::AnyPrintoutBackend	liborangepower_src/misc_output_classes.hpp	/^class AnyPrintoutBackend$/;"	kind:c	namespace:liborangepower::printout_etc
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static inline void func(std::ostream& os)$/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os)
liborangepower::printout_etc::AnyPrintoutBackend::func	liborangepower_src/misc_output_classes.hpp	/^	static void func(std::ostream& os, const FirstType& first_val, $/;"	kind:f	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:void	access:private	signature:(std::ostream & os,const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::AnyPrintoutBackend::osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::fprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& fprintout(std::ostream& out_file, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & out_file,ArgTypes &&...args)
liborangepower::printout_etc::osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
liborangepower::printout_etc::printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
liborangepower::printout_etc::sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::printout_etc::strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
liborangepower::printout_etc::strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
liborangepower::range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
liborangepower::range::clamp_to_range	liborangepower_src/range_funcs.hpp	/^inline Type clamp_to_range(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:Type	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_clamp)
liborangepower::range::in_range	liborangepower_src/range_funcs.hpp	/^inline bool in_range(Type range_start_inclusive, Type range_end_exclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_exclusive,Type to_check)
liborangepower::range::in_range_inclusive	liborangepower_src/range_funcs.hpp	/^inline bool in_range_inclusive(Type range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(Type range_start_inclusive,Type range_end_inclusive,Type to_check)
liborangepower::range::vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
liborangepower::strings	liborangepower_src/str_split_helper_classes.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
liborangepower::strings::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperBase$/;"	kind:c	namespace:liborangepower::strings
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrSplitHelperBase && to_move)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrSplitHelperBase & to_copy)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:()
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperBase::StrSplitHelperBase	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	access:protected	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperBase::StrType	liborangepower_src/str_split_helper_classes.hpp	/^	typedef SomeStrType StrType;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:SomeStrType	access:public
liborangepower::strings::StrSplitHelperBase::find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::find_start_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	size_t find_start_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::get_substr_size	liborangepower_src/str_split_helper_classes.hpp	/^	static inline size_t get_substr_size(const size_t start, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:(const size_t start,const size_t pos_after_end)
liborangepower::strings::StrSplitHelperBase::increment_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline void increment_i(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperBase::index_in_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool index_in_to_split(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(StrType&& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(StrType && n_to_split)
liborangepower::strings::StrSplitHelperBase::init	liborangepower_src/str_split_helper_classes.hpp	/^	inline void init(const StrType& n_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:void	access:public	signature:(const StrType & n_to_split)
liborangepower::strings::StrSplitHelperBase::internal_line_num	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_line_num = 1;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_num_consec_backslashes = 0;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	size_t internal_prev_i;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:protected
liborangepower::strings::StrSplitHelperBase::internal_to_split	liborangepower_src/str_split_helper_classes.hpp	/^	StrType internal_to_split;$/;"	kind:m	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType	access:protected
liborangepower::strings::StrSplitHelperBase::line_num	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t line_num() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::list_of_special_endpoint_pairs	liborangepower_src/str_split_helper_classes.hpp	/^		list_of_special_endpoint_pairs() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const std::vector<val_typ_pair> &	access:protected	signature:() const
liborangepower::strings::StrSplitHelperBase::make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline  auto make_vt_pair(value_type&& t, value_type&& u)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(value_type && t,value_type && u)
liborangepower::strings::StrSplitHelperBase::make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline auto make_vt_pair(const value_type& t, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(const value_type & t,const value_type & u)
liborangepower::strings::StrSplitHelperBase::num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t num_consec_backslashes() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(StrSplitHelperBase && to_move)
liborangepower::strings::StrSplitHelperBase::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(const StrSplitHelperBase & to_copy)
liborangepower::strings::StrSplitHelperBase::prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline const StrType& to_split() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const StrType &	access:public	signature:() const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_any_special_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	bool to_split_at_is_end_of_word(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_indiv_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual bool to_split_at_is_indiv_word(size_t i) const = 0;$/;"	kind:p	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
liborangepower::strings::StrSplitHelperBase::to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef std::pair<value_type, value_type> val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:std::pair<value_type,value_type>	access:public
liborangepower::strings::StrSplitHelperBase::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename StrType::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType::value_type	access:public
liborangepower::strings::StrSplitHelperBase::vt_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_any_special_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_first_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_first_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_second_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
liborangepower::strings::StrSplitHelperBase::vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_second_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
liborangepower::strings::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperNoEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
liborangepower::strings::StrSplitHelperNoEscapes::Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrSplitHelperNoEscapes && to_move)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:()
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperNoEscapes::StrSplitHelperNoEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	access:public	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperNoEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(StrSplitHelperNoEscapes && to_move)
liborangepower::strings::StrSplitHelperNoEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
liborangepower::strings::StrSplitHelperNoEscapes::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:Base::value_type	access:public
liborangepower::strings::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^class StrSplitHelperWithEscapes : public StrSplitHelperBase<StrType>$/;"	kind:c	namespace:liborangepower::strings	inherits:StrSplitHelperBase<StrType>
liborangepower::strings::StrSplitHelperWithEscapes::Base	liborangepower_src/str_split_helper_classes.hpp	/^	typedef StrSplitHelperBase<StrType> Base;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperBase<StrType>	access:public
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrSplitHelperWithEscapes && to_move)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes()$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:()
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(StrType&& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(StrType && s_to_split)
liborangepower::strings::StrSplitHelperWithEscapes::StrSplitHelperWithEscapes	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes(const StrType& s_to_split)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	access:public	signature:(const StrType & s_to_split)
liborangepower::strings::StrSplitHelperWithEscapes::find_pos_after_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual size_t find_pos_after_end_of_word(size_t& i)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:size_t	access:public	signature:(size_t & i)
liborangepower::strings::StrSplitHelperWithEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(StrSplitHelperWithEscapes && to_move)
liborangepower::strings::StrSplitHelperWithEscapes::operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
liborangepower::strings::StrSplitHelperWithEscapes::val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::val_typ_pair val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::val_typ_pair	access:public
liborangepower::strings::StrSplitHelperWithEscapes::value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::value_type	access:public
liborangepower::time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
liborangepower::time::Prng	liborangepower_src/time_stuff.hpp	/^class Prng$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Prng::InstanceType	liborangepower_src/time_stuff.hpp	/^	typedef std::mt19937_64 InstanceType;$/;"	kind:t	class:liborangepower::time::Prng	typeref:typename:std::mt19937_64	access:public
liborangepower::time::Prng::Prng	liborangepower_src/time_stuff.hpp	/^	inline Prng(int s_param_0=0, int s_param_1=0) $/;"	kind:f	class:liborangepower::time::Prng	access:public	signature:(int s_param_0=0,int s_param_1=0)
liborangepower::time::Prng::SeedType	liborangepower_src/time_stuff.hpp	/^		.time_since_epoch().count()) SeedType;$/;"	kind:t	class:liborangepower::time::Prng	access:public
liborangepower::time::Prng::__instance	liborangepower_src/time_stuff.hpp	/^	InstanceType __instance;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:InstanceType	access:protected
liborangepower::time::Prng::__param_0	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::__param_1	liborangepower_src/time_stuff.hpp	/^	int __param_0, __param_1;$/;"	kind:m	class:liborangepower::time::Prng	typeref:typename:int	access:protected
liborangepower::time::Prng::gen_getter_by_con_ref	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_con_ref(instance);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(instance)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_0);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_0)
liborangepower::time::Prng::gen_getter_by_val	liborangepower_src/time_stuff.hpp	/^	gen_getter_by_val(param_1);$/;"	kind:p	class:liborangepower::time::Prng	access:public	signature:(param_1)
liborangepower::time::Prng::get_initial_seed	liborangepower_src/time_stuff.hpp	/^	inline SeedType get_initial_seed()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:SeedType	access:protected	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
liborangepower::time::Prng::operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool use_cap=false)
liborangepower::time::Profiler	liborangepower_src/time_stuff.hpp	/^class Profiler$/;"	kind:c	namespace:liborangepower::time
liborangepower::time::Profiler::end_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::get_hrc_now	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::get_hrc_now_time_t	liborangepower_src/time_stuff.hpp	/^	static inline auto get_hrc_now_time_t()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::Profiler::start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
liborangepower::time::Profiler::start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
liborangepower::time::Profiler::stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
liborangepower::time::now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
liborangepower::time::now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
liborangepower::time::put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower::time::put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
liborangepower_array_2d_helper_classes_hpp	liborangepower_src/array_2d_helper_classes.hpp	/^#define liborangepower_array_2d_helper_classes_hpp$/;"	kind:d
liborangepower_array_helper_classes_hpp	liborangepower_src/array_helper_classes.hpp	/^#define liborangepower_array_helper_classes_hpp$/;"	kind:d
liborangepower_gen_getter_setter_defines_hpp	liborangepower_src/gen_getter_setter_defines.hpp	/^#define liborangepower_gen_getter_setter_defines_hpp$/;"	kind:d
liborangepower_json_stuff_hpp	liborangepower_src/json_stuff.hpp	/^#define liborangepower_json_stuff_hpp$/;"	kind:d
liborangepower_lexer_classes_hpp	liborangepower_src/quoted_str_converter_stuff.hpp	/^#define liborangepower_lexer_classes_hpp$/;"	kind:d
liborangepower_memwhatever_wrappers_hpp	liborangepower_src/memwhatever_wrappers.hpp	/^#define liborangepower_memwhatever_wrappers_hpp$/;"	kind:d
liborangepower_misc_bitwise_funcs_hpp	liborangepower_src/misc_bitwise_funcs.hpp	/^#define liborangepower_misc_bitwise_funcs_hpp$/;"	kind:d
liborangepower_misc_defines_hpp	liborangepower_src/misc_defines.hpp	/^#define liborangepower_misc_defines_hpp$/;"	kind:d
liborangepower_misc_includes_hpp	liborangepower_src/misc_includes.hpp	/^#define liborangepower_misc_includes_hpp$/;"	kind:d
liborangepower_misc_input_classes_hpp	liborangepower_src/misc_input_classes.hpp	/^#define liborangepower_misc_input_classes_hpp$/;"	kind:d
liborangepower_misc_output_classes_hpp	liborangepower_src/misc_output_classes.hpp	/^#define liborangepower_misc_output_classes_hpp$/;"	kind:d
liborangepower_misc_types_hpp	liborangepower_src/misc_types.hpp	/^#define liborangepower_misc_types_hpp$/;"	kind:d
liborangepower_misc_utility_funcs_hpp	liborangepower_src/misc_utility_funcs.hpp	/^#define liborangepower_misc_utility_funcs_hpp$/;"	kind:d
liborangepower_prev_curr_pair_class_hpp	liborangepower_src/prev_curr_pair_class.hpp	/^#define liborangepower_prev_curr_pair_class_hpp$/;"	kind:d
liborangepower_range_funcs_hpp	liborangepower_src/range_funcs.hpp	/^#define liborangepower_range_funcs_hpp$/;"	kind:d
liborangepower_str_split_helper_classes_hpp	liborangepower_src/str_split_helper_classes.hpp	/^#define liborangepower_str_split_helper_classes_hpp$/;"	kind:d
liborangepower_time_stuff_hpp	liborangepower_src/time_stuff.hpp	/^#define liborangepower_time_stuff_hpp$/;"	kind:d
liborangepower_vec2_classes_hpp	liborangepower_src/vec2_classes.hpp	/^#define liborangepower_vec2_classes_hpp$/;"	kind:d
line	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext* GrammarParser::ProgramContext::line(size_t i) {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:GrammarParser::LineContext *	signature:(size_t i)
line	gen_src/GrammarParser.cpp	/^GrammarParser::LineContext* GrammarParser::line() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::LineContext *	signature:()
line	gen_src/GrammarParser.cpp	/^std::vector<GrammarParser::LineContext *> GrammarParser::ProgramContext::line() {$/;"	kind:f	class:GrammarParser::ProgramContext	typeref:typename:std::vector<GrammarParser::LineContext * >	signature:()
line	gen_src/GrammarParser.h	/^    LineContext* line(size_t i);$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:LineContext *	access:public	signature:(size_t i)
line	gen_src/GrammarParser.h	/^    std::vector<LineContext *> line();$/;"	kind:p	class:GrammarParser::ProgramContext	typeref:typename:std::vector<LineContext * >	access:public	signature:()
line	gen_src/GrammarParser.h	/^  LineContext* line();$/;"	kind:p	class:GrammarParser	typeref:typename:LineContext *	access:public	signature:()
line_num	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t line_num() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
list_of_special_endpoint_pairs	liborangepower_src/str_split_helper_classes.hpp	/^		list_of_special_endpoint_pairs() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const std::vector<val_typ_pair> &	access:protected	signature:() const
main	main.cpp	/^int main(int argc, char** argv)$/;"	kind:f	typeref:typename:int	signature:(int argc,char ** argv)
make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline  auto make_vt_pair(value_type&& t, value_type&& u)$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(value_type && t,value_type && u)
make_vt_pair	liborangepower_src/str_split_helper_classes.hpp	/^	static inline auto make_vt_pair(const value_type& t, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:auto	access:protected	signature:(const value_type & t,const value_type & u)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^FirstType max_va(const FirstType& arg_0, const SecondType& arg_1)$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
max_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType max_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1)
min_va	liborangepower_src/misc_utility_funcs.hpp	/^inline FirstType min_va(const FirstType& arg_0, $/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:FirstType	signature:(const FirstType & arg_0,const SecondType & arg_1,RemainingTypes...remaining_args)
misc_includes_hpp	misc_includes.hpp	/^#define misc_includes_hpp$/;"	kind:d
misc_input	liborangepower_src/misc_input_classes.hpp	/^namespace misc_input$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/memwhatever_wrappers.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
misc_util	liborangepower_src/misc_utility_funcs.hpp	/^namespace misc_util$/;"	kind:n	namespace:liborangepower
mkscope	scoped_ident_table_class.hpp	/^	void mkscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
name_is_builtin	scoped_ident_table_class.hpp	/^	bool name_is_builtin(Ident some_name) const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:bool	access:public	signature:(Ident some_name) const
not_found_level	scoped_ident_table_class.hpp	/^	static constexpr s64 not_found_level = builtin_scope_level - 1;$/;"	kind:m	class:ScopedIdentTable	typeref:typename:s64	access:public
now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline std::tm* now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::tm *	signature:()
now_as_time_t	liborangepower_src/time_stuff.hpp	/^inline std::time_t now_as_time_t()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:std::time_t	signature:()
numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::ExprMulDivModEtcContext::numExpr() {$/;"	kind:f	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:GrammarParser::NumExprContext *	signature:()
numExpr	gen_src/GrammarParser.cpp	/^GrammarParser::NumExprContext* GrammarParser::numExpr() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::NumExprContext *	signature:()
numExpr	gen_src/GrammarParser.h	/^    NumExprContext *numExpr();$/;"	kind:p	class:GrammarParser::ExprMulDivModEtcContext	typeref:typename:NumExprContext *	access:public	signature:()
numExpr	gen_src/GrammarParser.h	/^  NumExprContext* numExpr();$/;"	kind:p	class:GrammarParser	typeref:typename:NumExprContext *	access:public	signature:()
num_consec_backslashes	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t num_consec_backslashes() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
operator !=	liborangepower_src/vec2_classes.hpp	/^	inline bool operator != (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () ()$/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:()
operator () 	liborangepower_src/time_stuff.hpp	/^	inline auto operator () (integer_types::u64 max_val, $/;"	kind:f	class:liborangepower::time::Prng	typeref:typename:auto	access:public	signature:(integer_types::u64 max_val,const bool use_cap=false)
operator *	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator * (const OtherType& scale) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const OtherType & scale) const
operator *	liborangepower_src/vec2_classes.hpp	/^inline Vec2<Type> operator * (const Type& scale, $/;"	kind:f	namespace:liborangepower::containers	typeref:typename:Vec2<Type>	signature:(const Type & scale,const Vec2<Type> & vec2_to_mul)
operator *=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator *= (const OtherType& scale)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const OtherType & scale)
operator +	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator + (const Vec2<OtherType>& to_add) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_add) const
operator +=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator += (const Vec2<OtherType>& to_add)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_add)
operator -	liborangepower_src/vec2_classes.hpp	/^	inline Vec2 operator - (const Vec2<OtherType>& to_sub) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2	access:public	signature:(const Vec2<OtherType> & to_sub) const
operator -=	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator -= (const Vec2<OtherType>& to_sub)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_sub)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	Array2dHelper& operator = (const Array2dHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::Array2dHelper	typeref:typename:Array2dHelper &	access:public	signature:(const Array2dHelper & to_copy)
operator =	liborangepower_src/array_2d_helper_classes.hpp	/^	ArrayCsz2dHelper& operator = (const ArrayCsz2dHelper& to_copy) $/;"	kind:p	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:ArrayCsz2dHelper &	access:public	signature:(const ArrayCsz2dHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	ArrayCszHelper& operator = (const ArrayCszHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayCszHelper	typeref:typename:ArrayCszHelper &	access:public	signature:(const ArrayCszHelper & to_copy)
operator =	liborangepower_src/array_helper_classes.hpp	/^	inline ArrayHelper& operator = (const ArrayHelper& to_copy) = default;$/;"	kind:p	class:liborangepower::containers::ArrayHelper	typeref:typename:ArrayHelper &	access:public	signature:(const ArrayHelper & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(StrSplitHelperBase && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperBase& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrSplitHelperBase &	access:protected	signature:(const StrSplitHelperBase & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(StrSplitHelperNoEscapes && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperNoEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:StrSplitHelperNoEscapes &	access:public	signature:(const StrSplitHelperNoEscapes & to_copy)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(StrSplitHelperWithEscapes && to_move)
operator =	liborangepower_src/str_split_helper_classes.hpp	/^	inline StrSplitHelperWithEscapes& operator = $/;"	kind:f	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:StrSplitHelperWithEscapes &	access:public	signature:(const StrSplitHelperWithEscapes & to_copy)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (Vec2<OtherType>&& to_move)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(Vec2<OtherType> && to_move)
operator =	liborangepower_src/vec2_classes.hpp	/^	inline Vec2& operator = (const Vec2<OtherType>& to_copy)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Vec2 &	access:public	signature:(const Vec2<OtherType> & to_copy)
operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (Symbol&& to_move) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(Symbol && to_move)
operator =	symbol_table_classes.hpp	/^	inline Symbol& operator = (const Symbol& to_copy) = default;$/;"	kind:p	class:Symbol	typeref:typename:Symbol &	access:public	signature:(const Symbol & to_copy)
operator ==	liborangepower_src/vec2_classes.hpp	/^	inline bool operator == (const Vec2<OtherType>& to_cmp) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:bool	access:public	signature:(const Vec2<OtherType> & to_cmp) const
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline Type& operator [] (size_t index)$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type &	access:public	signature:(size_t index)
operator [] 	liborangepower_src/vec2_classes.hpp	/^	inline const Type& operator [] (size_t index) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:const Type &	access:public	signature:(size_t index) const
osprint_arr	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprint_arr(std::ostream& os, ArrType* to_print, size_t size)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArrType * to_print,size_t size)
osprintout	liborangepower_src/misc_output_classes.hpp	/^	friend std::ostream& osprintout(std::ostream& os, $/;"	kind:p	class:liborangepower::printout_etc::AnyPrintoutBackend	typeref:typename:std::ostream &	access:private	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& osprintout(std::ostream& os, ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
osprintout	liborangepower_src/misc_output_classes.hpp	/^std::ostream& osprintout(std::ostream& os, ArgTypes&&... args);$/;"	kind:p	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(std::ostream & os,ArgTypes &&...args)
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.cpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, $/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^bool parse_json(Json::CharReaderBuilder* rbuilder, std::istream& is,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:bool	signature:(Json::CharReaderBuilder * rbuilder,std::istream & is,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(const std::string& input_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(const std::string & input_file_name,Json::Value * root,std::string * errs)
parse_json	liborangepower_src/json_stuff.hpp	/^inline bool parse_json(std::istream& is, Json::Value* root, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:bool	signature:(std::istream & is,Json::Value * root,std::string * errs)
pop_num	assembler_class.hpp	/^	inline s64 pop_num()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
pop_str	assembler_class.hpp	/^	inline s64 pop_str()$/;"	kind:f	class:Assembler	typeref:typename:s64	access:private	signature:()
prev	liborangepower_src/prev_curr_pair_class.hpp	/^	type prev, curr;$/;"	kind:m	class:liborangepower::containers::PrevCurrPair	typeref:typename:type	access:public
prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
prev_prev_i	liborangepower_src/str_split_helper_classes.hpp	/^	inline size_t prev_prev_i() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:size_t	access:public	signature:() const
prev_prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
prev_prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
prev_to_split_at	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type& prev_to_split_at() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type &	access:public	signature:() const
prev_to_split_at_ptr	liborangepower_src/str_split_helper_classes.hpp	/^	inline const value_type* prev_to_split_at_ptr() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const value_type *	access:public	signature:() const
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(Json::Value* iter, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::Value * iter,std::ostream & os=std::cout)
print_json_value_type	liborangepower_src/json_stuff.hpp	/^inline void print_json_value_type(const Json::Value& some_value,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const Json::Value & some_value,std::ostream & os=std::cout)
printerr	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printerr(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout	liborangepower_src/misc_output_classes.hpp	/^inline std::ostream& printout(ArgTypes&&... args)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::ostream &	signature:(ArgTypes &&...args)
printout_etc	liborangepower_src/misc_output_classes.hpp	/^namespace printout_etc$/;"	kind:n	namespace:liborangepower
program	gen_src/GrammarParser.cpp	/^GrammarParser::ProgramContext* GrammarParser::program() {$/;"	kind:f	class:GrammarParser	typeref:typename:GrammarParser::ProgramContext *	signature:()
program	gen_src/GrammarParser.h	/^  ProgramContext* program();$/;"	kind:p	class:GrammarParser	typeref:typename:ProgramContext *	access:public	signature:()
push_num	assembler_class.hpp	/^	inline void push_num(s64 to_push)$/;"	kind:f	class:Assembler	typeref:typename:void	access:private	signature:(s64 to_push)
push_str	assembler_class.hpp	/^	inline void push_str(std::string* to_push)$/;"	kind:f	class:Assembler	typeref:typename:void	access:private	signature:(std::string * to_push)
put_now_as_gmtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_gmtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
put_now_as_localtime	liborangepower_src/time_stuff.hpp	/^inline auto put_now_as_localtime()$/;"	kind:f	namespace:liborangepower::time	typeref:typename:auto	signature:()
quit	assembler_class.hpp	/^	quit,$/;"	kind:e	enum:VmInstrOp	access:public
range	liborangepower_src/range_funcs.hpp	/^namespace range$/;"	kind:n	namespace:liborangepower
ret	assembler_class.hpp	/^	ret,$/;"	kind:e	enum:VmInstrOp	access:public
rmscope	scoped_ident_table_class.hpp	/^	void rmscope() __attribute__((noinline))$/;"	kind:f	class:ScopedIdentTable	typeref:typename:void	access:public	signature:()
s16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int16_t
s32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int32_t
s64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int64_t
s8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:int8_t
sconcat	liborangepower_src/misc_output_classes.hpp	/^std::string sconcat(const FirstType& first_val, $/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
scope_lev	scoped_ident_table_class.hpp	/^	inline s64 scope_lev() const$/;"	kind:f	class:ScopedIdentTable	typeref:typename:s64	access:public	signature:() const
scoped_ident_table_class_hpp	scoped_ident_table_class.hpp	/^#define scoped_ident_table_class_hpp$/;"	kind:d
sempred	gen_src/GrammarParser.cpp	/^bool GrammarParser::sempred(RuleContext *context, size_t ruleIndex, size_t predicateIndex) {$/;"	kind:f	class:GrammarParser	typeref:typename:bool	signature:(RuleContext * context,size_t ruleIndex,size_t predicateIndex)
sempred	gen_src/GrammarParser.h	/^  virtual bool sempred(antlr4::RuleContext *_localctx, size_t ruleIndex, size_t predicateIndex) /;"	kind:p	class:GrammarParser	typeref:typename:bool	access:public	signature:(antlr4::RuleContext * _localctx,size_t ruleIndex,size_t predicateIndex)
set_arg_space	assembler_class.hpp	/^	set_arg_space,$/;"	kind:e	enum:VmInstrOp	access:public
set_bits	liborangepower_src/misc_bitwise_funcs.hpp	/^inline void set_bits(Type& to_set, size_t mask)$/;"	kind:f	namespace:liborangepower::bitwise	typeref:typename:void	signature:(Type & to_set,size_t mask)
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayCszHelper	typeref:typename:size_t	access:public	signature:() const
size	liborangepower_src/array_helper_classes.hpp	/^	size_t size() const$/;"	kind:f	class:liborangepower::containers::ArrayHelper	typeref:typename:size_t	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
size_2d	liborangepower_src/array_2d_helper_classes.hpp	/^	const Vec2<size_t>& size_2d() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:const Vec2<size_t> &	access:public	signature:() const
st	assembler_class.hpp	/^	st,$/;"	kind:e	enum:VmInstrOp	access:public
start	liborangepower_src/time_stuff.hpp	/^	inline void start()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:void	access:public	signature:()
start_tp	liborangepower_src/time_stuff.hpp	/^	std::chrono::high_resolution_clock::time_point start_tp, end_tp;$/;"	kind:m	class:liborangepower::time::Profiler	typeref:typename:std::chrono::high_resolution_clock::time_point	access:protected
stop	liborangepower_src/time_stuff.hpp	/^	inline auto stop()$/;"	kind:f	class:liborangepower::time::Profiler	typeref:typename:auto	access:public	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom()$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:()
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strappcom	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom(const Type& to_concat)$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const Type & to_concat)
strappcom2	liborangepower_src/misc_output_classes.hpp	/^inline std::string strappcom2(const FirstType& first_val,$/;"	kind:f	namespace:liborangepower::printout_etc	typeref:typename:std::string	signature:(const FirstType & first_val,RemArgTypes &&...rem_args)
strings	liborangepower_src/str_split_helper_classes.hpp	/^namespace strings$/;"	kind:n	namespace:liborangepower
stx	assembler_class.hpp	/^	stx,$/;"	kind:e	enum:VmInstrOp	access:public
symbol_table_classes_hpp	symbol_table_classes.hpp	/^#define symbol_table_classes_hpp$/;"	kind:d
time	liborangepower_src/time_stuff.hpp	/^namespace time$/;"	kind:n	namespace:liborangepower
to_split	liborangepower_src/str_split_helper_classes.hpp	/^	inline const StrType& to_split() const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:const StrType &	access:public	signature:() const
to_split_at_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_any_special_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_end_of_word	liborangepower_src/str_split_helper_classes.hpp	/^	bool to_split_at_is_end_of_word(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:public	signature:(size_t i) const
to_split_at_is_indiv_word	liborangepower_src/str_split_helper_classes.hpp	/^	virtual bool to_split_at_is_indiv_word(size_t i) const = 0;$/;"	kind:p	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_first_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i) const
to_split_at_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool to_split_at_is_special_second_endpoint(size_t i, $/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(size_t i,val_typ_pair & which) const
type_is_signed	liborangepower_src/misc_utility_funcs.hpp	/^constexpr inline bool type_is_signed()$/;"	kind:f	namespace:liborangepower::misc_util	typeref:typename:bool	signature:()
u16	liborangepower_src/misc_types.hpp	/^typedef uint16_t u16; typedef int16_t s16;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint16_t
u32	liborangepower_src/misc_types.hpp	/^typedef uint32_t u32; typedef int32_t s32;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint32_t
u64	liborangepower_src/misc_types.hpp	/^typedef uint64_t u64; typedef int64_t s64;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint64_t
u8	liborangepower_src/misc_types.hpp	/^typedef uint8_t u8; typedef int8_t s8;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:uint8_t
uint	liborangepower_src/misc_types.hpp	/^typedef unsigned int uint;$/;"	kind:t	namespace:liborangepower::integer_types	typeref:typename:unsigned int
val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef std::pair<value_type, value_type> val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:std::pair<value_type,value_type>	access:public
val_typ_pair	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::val_typ_pair val_typ_pair;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::val_typ_pair	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperNoEscapes	typeref:typename:Base::value_type	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename Base::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperWithEscapes	typeref:typename:Base::value_type	access:public
value_type	liborangepower_src/str_split_helper_classes.hpp	/^	typedef typename StrType::value_type value_type;$/;"	kind:t	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:StrType::value_type	access:public
var	assembler_class.hpp	/^	var,$/;"	kind:e	enum:VmInstrOp	access:public
varx	assembler_class.hpp	/^	varx,$/;"	kind:e	enum:VmInstrOp	access:public
vec2_in_range	liborangepower_src/range_funcs.hpp	/^inline bool vec2_in_range(containers::Vec2<Type> range_start_inclusive, $/;"	kind:f	namespace:liborangepower::range	typeref:typename:bool	signature:(containers::Vec2<Type> range_start_inclusive,containers::Vec2<Type> range_end_exclusive,containers::Vec2<Type> to_check)
vec2_index_for_x	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
vec2_index_for_y	liborangepower_src/vec2_classes.hpp	/^static constexpr size_t vec2_index_for_x = 0, vec2_index_for_y = 1;$/;"	kind:v	namespace:liborangepower::containers	typeref:typename:size_t
visitComment	assembler_class.cpp	/^antlrcpp::Any Assembler::visitComment$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::CommentContext * ctx)
visitComment	assembler_class.hpp	/^	antlrcpp::Any visitComment$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * ctx)
visitComment	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitComment(GrammarParser::CommentContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * ctx)
visitComment	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitComment(GrammarParser::CommentContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CommentContext * context)
visitCurrPc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitCurrPc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::CurrPcContext * ctx)
visitCurrPc	assembler_class.hpp	/^	antlrcpp::Any visitCurrPc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * ctx)
visitCurrPc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitCurrPc(GrammarParser::CurrPcContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * ctx)
visitCurrPc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitCurrPc(GrammarParser::CurrPcContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::CurrPcContext * context)
visitExpr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExpr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprContext * ctx)
visitExpr	assembler_class.hpp	/^	antlrcpp::Any visitExpr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
visitExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * ctx)
visitExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExpr(GrammarParser::ExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprContext * context)
visitExprAddSub	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprAddSub$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	assembler_class.hpp	/^	antlrcpp::Any visitExprAddSub$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * ctx)
visitExprAddSub	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprAddSub(GrammarParser::ExprAddSubContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprAddSubContext * context)
visitExprCompare	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprCompare$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	assembler_class.hpp	/^	antlrcpp::Any visitExprCompare$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * ctx)
visitExprCompare	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprCompare(GrammarParser::ExprCompareContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprCompareContext * context)
visitExprLogical	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprLogical$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	assembler_class.hpp	/^	antlrcpp::Any visitExprLogical$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * ctx)
visitExprLogical	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprLogical(GrammarParser::ExprLogicalContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprLogicalContext * context)
visitExprMulDivModEtc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitExprMulDivModEtc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	assembler_class.hpp	/^	antlrcpp::Any visitExprMulDivModEtc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * ctx)
visitExprMulDivModEtc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitExprMulDivModEtc(GrammarParser::ExprMulDivModEtcContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ExprMulDivModEtcContext * context)
visitIdentName	assembler_class.cpp	/^antlrcpp::Any Assembler::visitIdentName$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	assembler_class.hpp	/^	antlrcpp::Any visitIdentName$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * ctx)
visitIdentName	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitIdentName(GrammarParser::IdentNameContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::IdentNameContext * context)
visitInstrArg	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrArg$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrArgContext * ctx)
visitInstrArg	assembler_class.hpp	/^	antlrcpp::Any visitInstrArg$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * ctx)
visitInstrArg	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrArg(GrammarParser::InstrArgContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * ctx)
visitInstrArg	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrArg(GrammarParser::InstrArgContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgContext * context)
visitInstrArgX	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrArgX$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrArgXContext * ctx)
visitInstrArgX	assembler_class.hpp	/^	antlrcpp::Any visitInstrArgX$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * ctx)
visitInstrArgX	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrArgX(GrammarParser::InstrArgXContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * ctx)
visitInstrArgX	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrArgX(GrammarParser::InstrArgXContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrArgXContext * context)
visitInstrBeq	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBeq$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBeqContext * ctx)
visitInstrBeq	assembler_class.hpp	/^	antlrcpp::Any visitInstrBeq$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * ctx)
visitInstrBeq	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBeq(GrammarParser::InstrBeqContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * ctx)
visitInstrBeq	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBeq(GrammarParser::InstrBeqContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBeqContext * context)
visitInstrBinop	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBinop$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBinopContext * ctx)
visitInstrBinop	assembler_class.hpp	/^	antlrcpp::Any visitInstrBinop$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * ctx)
visitInstrBinop	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBinop(GrammarParser::InstrBinopContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * ctx)
visitInstrBinop	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBinop(GrammarParser::InstrBinopContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBinopContext * context)
visitInstrBne	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrBne$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrBneContext * ctx)
visitInstrBne	assembler_class.hpp	/^	antlrcpp::Any visitInstrBne$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * ctx)
visitInstrBne	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrBne(GrammarParser::InstrBneContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * ctx)
visitInstrBne	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrBne(GrammarParser::InstrBneContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrBneContext * context)
visitInstrCall	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrCall$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrCallContext * ctx)
visitInstrCall	assembler_class.hpp	/^	antlrcpp::Any visitInstrCall$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * ctx)
visitInstrCall	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrCall(GrammarParser::InstrCallContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * ctx)
visitInstrCall	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrCall(GrammarParser::InstrCallContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrCallContext * context)
visitInstrConstant	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrConstant$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrConstantContext * ctx)
visitInstrConstant	assembler_class.hpp	/^	antlrcpp::Any visitInstrConstant$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * ctx)
visitInstrConstant	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrConstant(GrammarParser::InstrConstantContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * ctx)
visitInstrConstant	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrConstant(GrammarParser::InstrConstantContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrConstantContext * context)
visitInstrDispChar	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispChar$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispCharContext * ctx)
visitInstrDispChar	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispChar$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * ctx)
visitInstrDispChar	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispChar(GrammarParser::InstrDispCharContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * ctx)
visitInstrDispChar	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispChar(GrammarParser::InstrDispCharContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispCharContext * context)
visitInstrDispNum	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispNum$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispNumContext * ctx)
visitInstrDispNum	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispNum$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * ctx)
visitInstrDispNum	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispNum(GrammarParser::InstrDispNumContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * ctx)
visitInstrDispNum	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispNum(GrammarParser::InstrDispNumContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumContext * context)
visitInstrDispNumUnsigned	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispNumUnsigned$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
visitInstrDispNumUnsigned	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispNumUnsigned$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
visitInstrDispNumUnsigned	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispNumUnsigned(GrammarParser::InstrDispNumUnsignedContext *ct/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * ctx)
visitInstrDispNumUnsigned	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispNumUnsigned(GrammarParser::InstrDispNumUnsignedContext */;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispNumUnsignedContext * context)
visitInstrDispStr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrDispStr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrDispStrContext * ctx)
visitInstrDispStr	assembler_class.hpp	/^	antlrcpp::Any visitInstrDispStr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * ctx)
visitInstrDispStr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrDispStr(GrammarParser::InstrDispStrContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * ctx)
visitInstrDispStr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrDispStr(GrammarParser::InstrDispStrContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrDispStrContext * context)
visitInstrGetArgSpace	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetArgSpace$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
visitInstrGetArgSpace	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetArgSpace$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
visitInstrGetArgSpace	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetArgSpace(GrammarParser::InstrGetArgSpaceContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * ctx)
visitInstrGetArgSpace	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetArgSpace(GrammarParser::InstrGetArgSpaceContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetArgSpaceContext * context)
visitInstrGetNum	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetNum$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetNumContext * ctx)
visitInstrGetNum	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetNum$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * ctx)
visitInstrGetNum	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetNum(GrammarParser::InstrGetNumContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * ctx)
visitInstrGetNum	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetNum(GrammarParser::InstrGetNumContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetNumContext * context)
visitInstrGetPc	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrGetPc$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrGetPcContext * ctx)
visitInstrGetPc	assembler_class.hpp	/^	antlrcpp::Any visitInstrGetPc$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * ctx)
visitInstrGetPc	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrGetPc(GrammarParser::InstrGetPcContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * ctx)
visitInstrGetPc	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrGetPc(GrammarParser::InstrGetPcContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrGetPcContext * context)
visitInstrJump	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrJump$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrJumpContext * ctx)
visitInstrJump	assembler_class.hpp	/^	antlrcpp::Any visitInstrJump$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * ctx)
visitInstrJump	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrJump(GrammarParser::InstrJumpContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * ctx)
visitInstrJump	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrJump(GrammarParser::InstrJumpContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrJumpContext * context)
visitInstrLd	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrLd$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrLdContext * ctx)
visitInstrLd	assembler_class.hpp	/^	antlrcpp::Any visitInstrLd$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * ctx)
visitInstrLd	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrLd(GrammarParser::InstrLdContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * ctx)
visitInstrLd	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrLd(GrammarParser::InstrLdContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdContext * context)
visitInstrLdx	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrLdx$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrLdxContext * ctx)
visitInstrLdx	assembler_class.hpp	/^	antlrcpp::Any visitInstrLdx$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * ctx)
visitInstrLdx	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrLdx(GrammarParser::InstrLdxContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * ctx)
visitInstrLdx	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrLdx(GrammarParser::InstrLdxContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrLdxContext * context)
visitInstrQuit	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrQuit$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrQuitContext * ctx)
visitInstrQuit	assembler_class.hpp	/^	antlrcpp::Any visitInstrQuit$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * ctx)
visitInstrQuit	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrQuit(GrammarParser::InstrQuitContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * ctx)
visitInstrQuit	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrQuit(GrammarParser::InstrQuitContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrQuitContext * context)
visitInstrRet	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrRet$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrRetContext * ctx)
visitInstrRet	assembler_class.hpp	/^	antlrcpp::Any visitInstrRet$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * ctx)
visitInstrRet	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrRet(GrammarParser::InstrRetContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * ctx)
visitInstrRet	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrRet(GrammarParser::InstrRetContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrRetContext * context)
visitInstrSetArgSpace	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrSetArgSpace$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
visitInstrSetArgSpace	assembler_class.hpp	/^	antlrcpp::Any visitInstrSetArgSpace$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
visitInstrSetArgSpace	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrSetArgSpace(GrammarParser::InstrSetArgSpaceContext *ctx) overr/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * ctx)
visitInstrSetArgSpace	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrSetArgSpace(GrammarParser::InstrSetArgSpaceContext *context)/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrSetArgSpaceContext * context)
visitInstrSt	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrSt$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrStContext * ctx)
visitInstrSt	assembler_class.hpp	/^	antlrcpp::Any visitInstrSt$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * ctx)
visitInstrSt	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrSt(GrammarParser::InstrStContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * ctx)
visitInstrSt	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrSt(GrammarParser::InstrStContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStContext * context)
visitInstrStx	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrStx$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrStxContext * ctx)
visitInstrStx	assembler_class.hpp	/^	antlrcpp::Any visitInstrStx$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * ctx)
visitInstrStx	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrStx(GrammarParser::InstrStxContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * ctx)
visitInstrStx	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrStx(GrammarParser::InstrStxContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrStxContext * context)
visitInstrVar	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrVar$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrVarContext * ctx)
visitInstrVar	assembler_class.hpp	/^	antlrcpp::Any visitInstrVar$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * ctx)
visitInstrVar	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrVar(GrammarParser::InstrVarContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * ctx)
visitInstrVar	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrVar(GrammarParser::InstrVarContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarContext * context)
visitInstrVarX	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstrVarX$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstrVarXContext * ctx)
visitInstrVarX	assembler_class.hpp	/^	antlrcpp::Any visitInstrVarX$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * ctx)
visitInstrVarX	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstrVarX(GrammarParser::InstrVarXContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * ctx)
visitInstrVarX	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstrVarX(GrammarParser::InstrVarXContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstrVarXContext * context)
visitInstruction	assembler_class.cpp	/^antlrcpp::Any Assembler::visitInstruction$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::InstructionContext * ctx)
visitInstruction	assembler_class.hpp	/^	antlrcpp::Any visitInstruction$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * ctx)
visitInstruction	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitInstruction(GrammarParser::InstructionContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * ctx)
visitInstruction	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitInstruction(GrammarParser::InstructionContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::InstructionContext * context)
visitLabel	assembler_class.cpp	/^antlrcpp::Any Assembler::visitLabel$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LabelContext * ctx)
visitLabel	assembler_class.hpp	/^	antlrcpp::Any visitLabel$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * ctx)
visitLabel	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLabel(GrammarParser::LabelContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * ctx)
visitLabel	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLabel(GrammarParser::LabelContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LabelContext * context)
visitLine	assembler_class.cpp	/^antlrcpp::Any Assembler::visitLine$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::LineContext * ctx)
visitLine	assembler_class.hpp	/^	antlrcpp::Any visitLine$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * ctx)
visitLine	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitLine(GrammarParser::LineContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * ctx)
visitLine	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitLine(GrammarParser::LineContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::LineContext * context)
visitNumExpr	assembler_class.cpp	/^antlrcpp::Any Assembler::visitNumExpr$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	assembler_class.hpp	/^	antlrcpp::Any visitNumExpr$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * ctx)
visitNumExpr	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitNumExpr(GrammarParser::NumExprContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::NumExprContext * context)
visitProgram	assembler_class.cpp	/^antlrcpp::Any Assembler::visitProgram$/;"	kind:f	class:Assembler	typeref:typename:antlrcpp::Any	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	assembler_class.hpp	/^	antlrcpp::Any visitProgram$/;"	kind:p	class:Assembler	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	gen_src/GrammarBaseVisitor.h	/^  virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *ctx) override {$/;"	kind:f	class:GrammarBaseVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * ctx)
visitProgram	gen_src/GrammarVisitor.h	/^    virtual antlrcpp::Any visitProgram(GrammarParser::ProgramContext *context) = 0;$/;"	kind:p	class:GrammarVisitor	typeref:typename:antlrcpp::Any	access:public	signature:(GrammarParser::ProgramContext * context)
vt_is_any_special_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_any_special_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_first_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
vt_is_special_first_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_first_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	bool vt_is_special_second_endpoint(const value_type& vt,$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt,val_typ_pair & which) const
vt_is_special_second_endpoint	liborangepower_src/str_split_helper_classes.hpp	/^	inline bool vt_is_special_second_endpoint(const value_type& vt) const$/;"	kind:f	class:liborangepower::strings::StrSplitHelperBase	typeref:typename:bool	access:protected	signature:(const value_type & vt) const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::Array2dHelper	typeref:typename:size_t	access:public	signature:() const
width	liborangepower_src/array_2d_helper_classes.hpp	/^	size_t width() const$/;"	kind:f	class:liborangepower::containers::ArrayCsz2dHelper	typeref:typename:size_t	access:public	signature:() const
width_to_msb_pos	liborangepower_src/misc_defines.hpp	/^#define width_to_msb_pos(/;"	kind:d	signature:(some_width)
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder, std::ostream& os, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.cpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(const std::string& output_file_name, $/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^inline void write_json(std::ostream& os, Json::Value* root)$/;"	kind:f	namespace:liborangepower::json	typeref:typename:void	signature:(std::ostream & os,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,const std::string & output_file_name,Json::Value * root)
write_json	liborangepower_src/json_stuff.hpp	/^void write_json(Json::StreamWriterBuilder* wbuilder,$/;"	kind:p	namespace:liborangepower::json	typeref:typename:void	signature:(Json::StreamWriterBuilder * wbuilder,std::ostream & os,Json::Value * root)
x	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
y	liborangepower_src/vec2_classes.hpp	/^	Type x, y;$/;"	kind:m	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public
zcross_prod	liborangepower_src/vec2_classes.hpp	/^	inline Type zcross_prod(const Vec2<OtherType>& to_zcross) const$/;"	kind:f	class:liborangepower::containers::Vec2	typeref:typename:Type	access:public	signature:(const Vec2<OtherType> & to_zcross) const
~FunctionTable	symbol_table_classes.cpp	/^FunctionTable::~FunctionTable()$/;"	kind:f	class:FunctionTable	signature:()
~GrammarLexer	gen_src/GrammarLexer.cpp	/^GrammarLexer::~GrammarLexer() {$/;"	kind:f	class:GrammarLexer	signature:()
~GrammarLexer	gen_src/GrammarLexer.h	/^  ~GrammarLexer();$/;"	kind:p	class:GrammarLexer	access:public	signature:()
~GrammarParser	gen_src/GrammarParser.cpp	/^GrammarParser::~GrammarParser() {$/;"	kind:f	class:GrammarParser	signature:()
~GrammarParser	gen_src/GrammarParser.h	/^  ~GrammarParser();$/;"	kind:p	class:GrammarParser	access:public	signature:()
~ScopedIdentTable	scoped_ident_table_class.hpp	/^	virtual ~ScopedIdentTable()$/;"	kind:f	class:ScopedIdentTable	access:public	signature:()
~SymbolTable	symbol_table_classes.cpp	/^SymbolTable::~SymbolTable()$/;"	kind:f	class:SymbolTable	signature:()
~SymbolTable	symbol_table_classes.hpp	/^	virtual ~SymbolTable();$/;"	kind:p	class:SymbolTable	access:public	signature:()
